Search.setIndex({"docnames": ["404", "architecture", "elements/element_list", "elements/l0/source/index", "elements/oneCCL/source/definitions", "elements/oneCCL/source/index", "elements/oneCCL/source/introduction", "elements/oneCCL/source/namespaces", "elements/oneCCL/source/programming_model", "elements/oneCCL/source/spec/collective_operations", "elements/oneCCL/source/spec/datatypes", "elements/oneCCL/source/spec/error_handling", "elements/oneCCL/source/spec/generic_workflow", "elements/oneCCL/source/spec/main_objects", "elements/oneCCL/source/spec/operation_attributes", "elements/oneCCL/source/spec/operation_progress", "elements/oneCCL/source/spec/operations", "elements/oneCCL/source/spec/reductions", "elements/oneCCL/source/spec_version", "elements/oneDAL/source/algorithms/clustering/index", "elements/oneDAL/source/algorithms/clustering/kmeans", "elements/oneDAL/source/algorithms/clustering/kmeans_init", "elements/oneDAL/source/algorithms/decomposition/index", "elements/oneDAL/source/algorithms/decomposition/pca", "elements/oneDAL/source/algorithms/index", "elements/oneDAL/source/algorithms/nearest_neighbors/index", "elements/oneDAL/source/algorithms/nearest_neighbors/knn_classification", "elements/oneDAL/source/appendix/index", "elements/oneDAL/source/appendix/kd_tree", "elements/oneDAL/source/bibliography", "elements/oneDAL/source/common_interface/common_type_definitions", "elements/oneDAL/source/common_interface/error_handling", "elements/oneDAL/source/common_interface/header_files_and_namespaces", "elements/oneDAL/source/common_interface/index", "elements/oneDAL/source/common_interface/spec_version", "elements/oneDAL/source/data_management/accessor/column", "elements/oneDAL/source/data_management/accessor/row", "elements/oneDAL/source/data_management/accessors", "elements/oneDAL/source/data_management/array", "elements/oneDAL/source/data_management/csv_data_source", "elements/oneDAL/source/data_management/data_sources", "elements/oneDAL/source/data_management/index", "elements/oneDAL/source/data_management/table/homogen", "elements/oneDAL/source/data_management/tables", "elements/oneDAL/source/glossary", "elements/oneDAL/source/index", "elements/oneDAL/source/introduction", "elements/oneDAL/source/notations", "elements/oneDAL/source/programming_model/computational_modes", "elements/oneDAL/source/programming_model/descriptors", "elements/oneDAL/source/programming_model/end_to_end_example", "elements/oneDAL/source/programming_model/index", "elements/oneDAL/source/programming_model/operations/index", "elements/oneDAL/source/programming_model/operations/support", "elements/oneDNN/source/conventions", "elements/oneDNN/source/data_model/data_types/bfloat16", "elements/oneDNN/source/data_model/data_types/index", "elements/oneDNN/source/data_model/data_types/int8", "elements/oneDNN/source/data_model/index", "elements/oneDNN/source/data_model/memory/formats", "elements/oneDNN/source/data_model/memory/index", "elements/oneDNN/source/data_model/memory/objects", "elements/oneDNN/source/execution_model/index", "elements/oneDNN/source/graph/data_model", "elements/oneDNN/source/graph/general", "elements/oneDNN/source/graph/index", "elements/oneDNN/source/graph/ops/Abs", "elements/oneDNN/source/graph/ops/AbsBackward", "elements/oneDNN/source/graph/ops/Add", "elements/oneDNN/source/graph/ops/AvgPool", "elements/oneDNN/source/graph/ops/AvgPoolBackward", "elements/oneDNN/source/graph/ops/BatchNormForwardTraining", "elements/oneDNN/source/graph/ops/BatchNormInference", "elements/oneDNN/source/graph/ops/BatchNormTrainingBackward", "elements/oneDNN/source/graph/ops/BiasAdd", "elements/oneDNN/source/graph/ops/BiasAddBackward", "elements/oneDNN/source/graph/ops/Clamp", "elements/oneDNN/source/graph/ops/ClampBackward", "elements/oneDNN/source/graph/ops/Concat", "elements/oneDNN/source/graph/ops/ConvTranspose", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardData", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardWeights", "elements/oneDNN/source/graph/ops/Convolution", "elements/oneDNN/source/graph/ops/ConvolutionBackwardData", "elements/oneDNN/source/graph/ops/ConvolutionBackwardWeights", "elements/oneDNN/source/graph/ops/Dequantize", "elements/oneDNN/source/graph/ops/Divide", "elements/oneDNN/source/graph/ops/DynamicDequantize", "elements/oneDNN/source/graph/ops/DynamicQuantize", "elements/oneDNN/source/graph/ops/Elu", "elements/oneDNN/source/graph/ops/EluBackward", "elements/oneDNN/source/graph/ops/End", "elements/oneDNN/source/graph/ops/Exp", "elements/oneDNN/source/graph/ops/GELU", "elements/oneDNN/source/graph/ops/GELUBackward", "elements/oneDNN/source/graph/ops/HardSigmoid", "elements/oneDNN/source/graph/ops/HardSigmoidBackward", "elements/oneDNN/source/graph/ops/HardSwish", "elements/oneDNN/source/graph/ops/HardSwishBackward", "elements/oneDNN/source/graph/ops/Interpolate", "elements/oneDNN/source/graph/ops/InterpolateBackward", "elements/oneDNN/source/graph/ops/LayerNorm", "elements/oneDNN/source/graph/ops/LayerNormBackward", "elements/oneDNN/source/graph/ops/LeakyReLU", "elements/oneDNN/source/graph/ops/Log", "elements/oneDNN/source/graph/ops/LogSoftmax", "elements/oneDNN/source/graph/ops/LogSoftmaxBackward", "elements/oneDNN/source/graph/ops/MatMul", "elements/oneDNN/source/graph/ops/MaxPool", "elements/oneDNN/source/graph/ops/MaxPoolBackward", "elements/oneDNN/source/graph/ops/Maximum", "elements/oneDNN/source/graph/ops/Minimum", "elements/oneDNN/source/graph/ops/Mish", "elements/oneDNN/source/graph/ops/MishBackward", "elements/oneDNN/source/graph/ops/Multiply", "elements/oneDNN/source/graph/ops/PReLU", "elements/oneDNN/source/graph/ops/PReLUBackward", "elements/oneDNN/source/graph/ops/Pow", "elements/oneDNN/source/graph/ops/Quantize", "elements/oneDNN/source/graph/ops/ReLU", "elements/oneDNN/source/graph/ops/ReLUBackward", "elements/oneDNN/source/graph/ops/Reciprocal", "elements/oneDNN/source/graph/ops/ReduceL1", "elements/oneDNN/source/graph/ops/ReduceL2", "elements/oneDNN/source/graph/ops/ReduceMax", "elements/oneDNN/source/graph/ops/ReduceMean", "elements/oneDNN/source/graph/ops/ReduceMin", "elements/oneDNN/source/graph/ops/ReduceProd", "elements/oneDNN/source/graph/ops/ReduceSum", "elements/oneDNN/source/graph/ops/Reorder", "elements/oneDNN/source/graph/ops/Round", "elements/oneDNN/source/graph/ops/Select", "elements/oneDNN/source/graph/ops/Sigmoid", "elements/oneDNN/source/graph/ops/SigmoidBackward", "elements/oneDNN/source/graph/ops/SoftPlus", "elements/oneDNN/source/graph/ops/SoftPlusBackward", "elements/oneDNN/source/graph/ops/Softmax", "elements/oneDNN/source/graph/ops/SoftmaxBackward", "elements/oneDNN/source/graph/ops/Sqrt", "elements/oneDNN/source/graph/ops/SqrtBackward", "elements/oneDNN/source/graph/ops/Square", "elements/oneDNN/source/graph/ops/SquaredDifference", "elements/oneDNN/source/graph/ops/StaticReshape", "elements/oneDNN/source/graph/ops/StaticTranspose", "elements/oneDNN/source/graph/ops/Subtract", "elements/oneDNN/source/graph/ops/Tanh", "elements/oneDNN/source/graph/ops/TanhBackward", "elements/oneDNN/source/graph/ops/TypeCast", "elements/oneDNN/source/graph/ops/Wildcard", "elements/oneDNN/source/graph/ops/index", "elements/oneDNN/source/graph/programming_model", "elements/oneDNN/source/index", "elements/oneDNN/source/introduction", "elements/oneDNN/source/primitives/attributes/index", "elements/oneDNN/source/primitives/attributes/post-ops", "elements/oneDNN/source/primitives/batch_normalization", "elements/oneDNN/source/primitives/binary", "elements/oneDNN/source/primitives/concat", "elements/oneDNN/source/primitives/convolution", "elements/oneDNN/source/primitives/eltwise", "elements/oneDNN/source/primitives/general", "elements/oneDNN/source/primitives/index", "elements/oneDNN/source/primitives/inner-product", "elements/oneDNN/source/primitives/layer_normalization", "elements/oneDNN/source/primitives/lrn", "elements/oneDNN/source/primitives/matmul", "elements/oneDNN/source/primitives/pooling", "elements/oneDNN/source/primitives/prelu", "elements/oneDNN/source/primitives/reduction", "elements/oneDNN/source/primitives/reorder", "elements/oneDNN/source/primitives/resampling", "elements/oneDNN/source/primitives/rnn", "elements/oneDNN/source/primitives/shuffle", "elements/oneDNN/source/primitives/softmax", "elements/oneDNN/source/primitives/sum", "elements/oneDPL/source/common", "elements/oneDPL/source/index", "elements/oneDPL/source/parallel_api", "elements/oneDPL/source/sycl_kernels_api", "elements/oneMKL/source/appendix/appendix", "elements/oneMKL/source/architecture/architecture", "elements/oneMKL/source/domains/blas/asum", "elements/oneMKL/source/domains/blas/axpby", "elements/oneMKL/source/domains/blas/axpy", "elements/oneMKL/source/domains/blas/axpy_batch", "elements/oneMKL/source/domains/blas/blas", "elements/oneMKL/source/domains/blas/blas-level-1-routines", "elements/oneMKL/source/domains/blas/blas-level-2-routines", "elements/oneMKL/source/domains/blas/blas-level-3-routines", "elements/oneMKL/source/domains/blas/blas-like-extensions", "elements/oneMKL/source/domains/blas/copy", "elements/oneMKL/source/domains/blas/copy_batch", "elements/oneMKL/source/domains/blas/dgmm_batch", "elements/oneMKL/source/domains/blas/dot", "elements/oneMKL/source/domains/blas/dotc", "elements/oneMKL/source/domains/blas/dotu", "elements/oneMKL/source/domains/blas/gbmv", "elements/oneMKL/source/domains/blas/gemm", "elements/oneMKL/source/domains/blas/gemm_batch", "elements/oneMKL/source/domains/blas/gemm_bias", "elements/oneMKL/source/domains/blas/gemmt", "elements/oneMKL/source/domains/blas/gemv", "elements/oneMKL/source/domains/blas/gemv_batch", "elements/oneMKL/source/domains/blas/ger", "elements/oneMKL/source/domains/blas/gerc", "elements/oneMKL/source/domains/blas/geru", "elements/oneMKL/source/domains/blas/hbmv", "elements/oneMKL/source/domains/blas/hemm", "elements/oneMKL/source/domains/blas/hemv", "elements/oneMKL/source/domains/blas/her", "elements/oneMKL/source/domains/blas/her2", "elements/oneMKL/source/domains/blas/her2k", "elements/oneMKL/source/domains/blas/herk", "elements/oneMKL/source/domains/blas/hpmv", "elements/oneMKL/source/domains/blas/hpr", "elements/oneMKL/source/domains/blas/hpr2", "elements/oneMKL/source/domains/blas/iamax", "elements/oneMKL/source/domains/blas/iamin", "elements/oneMKL/source/domains/blas/imatcopy", "elements/oneMKL/source/domains/blas/imatcopy_batch", "elements/oneMKL/source/domains/blas/nrm2", "elements/oneMKL/source/domains/blas/omatadd", "elements/oneMKL/source/domains/blas/omatadd_batch", "elements/oneMKL/source/domains/blas/omatcopy", "elements/oneMKL/source/domains/blas/omatcopy2", "elements/oneMKL/source/domains/blas/omatcopy_batch", "elements/oneMKL/source/domains/blas/rot", "elements/oneMKL/source/domains/blas/rotg", "elements/oneMKL/source/domains/blas/rotm", "elements/oneMKL/source/domains/blas/rotmg", "elements/oneMKL/source/domains/blas/sbmv", "elements/oneMKL/source/domains/blas/scal", "elements/oneMKL/source/domains/blas/sdsdot", "elements/oneMKL/source/domains/blas/spmv", "elements/oneMKL/source/domains/blas/spr", "elements/oneMKL/source/domains/blas/spr2", "elements/oneMKL/source/domains/blas/swap", "elements/oneMKL/source/domains/blas/symm", "elements/oneMKL/source/domains/blas/symv", "elements/oneMKL/source/domains/blas/syr", "elements/oneMKL/source/domains/blas/syr2", "elements/oneMKL/source/domains/blas/syr2k", "elements/oneMKL/source/domains/blas/syrk", "elements/oneMKL/source/domains/blas/syrk_batch", "elements/oneMKL/source/domains/blas/tbmv", "elements/oneMKL/source/domains/blas/tbsv", "elements/oneMKL/source/domains/blas/tpmv", "elements/oneMKL/source/domains/blas/tpsv", "elements/oneMKL/source/domains/blas/trmm", "elements/oneMKL/source/domains/blas/trmv", "elements/oneMKL/source/domains/blas/trsm", "elements/oneMKL/source/domains/blas/trsm_batch", "elements/oneMKL/source/domains/blas/trsv", "elements/oneMKL/source/domains/dft/compute_backward", "elements/oneMKL/source/domains/dft/compute_forward", "elements/oneMKL/source/domains/dft/config_params/data_layouts", "elements/oneMKL/source/domains/dft/config_params/storage_formats", "elements/oneMKL/source/domains/dft/config_params/workspace_placement", "elements/oneMKL/source/domains/dft/descriptor", "elements/oneMKL/source/domains/dft/dft", "elements/oneMKL/source/domains/dft/enums_and_config_params", "elements/oneMKL/source/domains/domains", "elements/oneMKL/source/domains/lapack/gebrd", "elements/oneMKL/source/domains/lapack/gebrd_scratchpad_size", "elements/oneMKL/source/domains/lapack/geqrf", "elements/oneMKL/source/domains/lapack/geqrf_batch", "elements/oneMKL/source/domains/lapack/geqrf_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/geqrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/gerqf", "elements/oneMKL/source/domains/lapack/gerqf_scratchpad_size", "elements/oneMKL/source/domains/lapack/gesvd", "elements/oneMKL/source/domains/lapack/gesvd_scratchpad_size", "elements/oneMKL/source/domains/lapack/getrf", "elements/oneMKL/source/domains/lapack/getrf_batch", "elements/oneMKL/source/domains/lapack/getrf_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/getrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/getri", "elements/oneMKL/source/domains/lapack/getri_batch", "elements/oneMKL/source/domains/lapack/getri_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/getri_scratchpad_size", "elements/oneMKL/source/domains/lapack/getrs", "elements/oneMKL/source/domains/lapack/getrs_batch", "elements/oneMKL/source/domains/lapack/getrs_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/getrs_scratchpad_size", "elements/oneMKL/source/domains/lapack/heevd", "elements/oneMKL/source/domains/lapack/heevd_scratchpad_size", "elements/oneMKL/source/domains/lapack/hegvd", "elements/oneMKL/source/domains/lapack/hegvd_scratchpad_size", "elements/oneMKL/source/domains/lapack/hetrd", "elements/oneMKL/source/domains/lapack/hetrd_scratchpad_size", "elements/oneMKL/source/domains/lapack/hetrf", "elements/oneMKL/source/domains/lapack/hetrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/lapack", "elements/oneMKL/source/domains/lapack/orgbr", "elements/oneMKL/source/domains/lapack/orgbr_scratchpad_size", "elements/oneMKL/source/domains/lapack/orgqr", "elements/oneMKL/source/domains/lapack/orgqr_batch", "elements/oneMKL/source/domains/lapack/orgqr_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/orgqr_scratchpad_size", "elements/oneMKL/source/domains/lapack/orgtr", "elements/oneMKL/source/domains/lapack/orgtr_scratchpad_size", "elements/oneMKL/source/domains/lapack/ormqr", "elements/oneMKL/source/domains/lapack/ormqr_scratchpad_size", "elements/oneMKL/source/domains/lapack/ormrq", "elements/oneMKL/source/domains/lapack/ormrq_scratchpad_size", "elements/oneMKL/source/domains/lapack/ormtr", "elements/oneMKL/source/domains/lapack/ormtr_scratchpad_size", "elements/oneMKL/source/domains/lapack/potrf", "elements/oneMKL/source/domains/lapack/potrf_batch", "elements/oneMKL/source/domains/lapack/potrf_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/potrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/potri", "elements/oneMKL/source/domains/lapack/potri_scratchpad_size", "elements/oneMKL/source/domains/lapack/potrs", "elements/oneMKL/source/domains/lapack/potrs_batch", "elements/oneMKL/source/domains/lapack/potrs_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/potrs_scratchpad_size", "elements/oneMKL/source/domains/lapack/syevd", "elements/oneMKL/source/domains/lapack/syevd_scratchpad_size", "elements/oneMKL/source/domains/lapack/sygvd", "elements/oneMKL/source/domains/lapack/sygvd_scratchpad_size", "elements/oneMKL/source/domains/lapack/sytrd", "elements/oneMKL/source/domains/lapack/sytrd_scratchpad_size", "elements/oneMKL/source/domains/lapack/sytrf", "elements/oneMKL/source/domains/lapack/sytrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/trtrs", "elements/oneMKL/source/domains/lapack/trtrs_scratchpad_size", "elements/oneMKL/source/domains/lapack/ungbr", "elements/oneMKL/source/domains/lapack/ungbr_scratchpad_size", "elements/oneMKL/source/domains/lapack/ungqr", "elements/oneMKL/source/domains/lapack/ungqr_batch", "elements/oneMKL/source/domains/lapack/ungqr_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/ungqr_scratchpad_size", "elements/oneMKL/source/domains/lapack/ungtr", "elements/oneMKL/source/domains/lapack/ungtr_scratchpad_size", "elements/oneMKL/source/domains/lapack/unmqr", "elements/oneMKL/source/domains/lapack/unmqr_scratchpad_size", "elements/oneMKL/source/domains/lapack/unmrq", "elements/oneMKL/source/domains/lapack/unmrq_scratchpad_size", "elements/oneMKL/source/domains/lapack/unmtr", "elements/oneMKL/source/domains/lapack/unmtr_scratchpad_size", "elements/oneMKL/source/domains/matrix-storage", "elements/oneMKL/source/domains/rng/bibliography", "elements/oneMKL/source/domains/rng/device_api/device-distributions", "elements/oneMKL/source/domains/rng/device_api/device-distributions-template-parameter-method", "elements/oneMKL/source/domains/rng/device_api/device-engines", "elements/oneMKL/source/domains/rng/device_api/device-rng-bernoulli", "elements/oneMKL/source/domains/rng/device_api/device-rng-bits", "elements/oneMKL/source/domains/rng/device_api/device-rng-exponential", "elements/oneMKL/source/domains/rng/device_api/device-rng-gaussian", "elements/oneMKL/source/domains/rng/device_api/device-rng-generate", "elements/oneMKL/source/domains/rng/device_api/device-rng-generate-routines", "elements/oneMKL/source/domains/rng/device_api/device-rng-lognormal", "elements/oneMKL/source/domains/rng/device_api/device-rng-mcg31m1", "elements/oneMKL/source/domains/rng/device_api/device-rng-mcg59", "elements/oneMKL/source/domains/rng/device_api/device-rng-mrg32k3a", "elements/oneMKL/source/domains/rng/device_api/device-rng-philox4x32x10", "elements/oneMKL/source/domains/rng/device_api/device-rng-poisson", "elements/oneMKL/source/domains/rng/device_api/device-rng-skip-ahead", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-bits", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-continuous", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-discrete", "elements/oneMKL/source/domains/rng/device_api/device-rng-usage-model", "elements/oneMKL/source/domains/rng/device_api/device-routines", "elements/oneMKL/source/domains/rng/device_api/device-service-routines", "elements/oneMKL/source/domains/rng/host_api/distributions", "elements/oneMKL/source/domains/rng/host_api/distributions-template-parameter-mkl-rng-method-values", "elements/oneMKL/source/domains/rng/host_api/engines-basic-random-number-generators", "elements/oneMKL/source/domains/rng/host_api/generate-routine", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-ars5", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-bernoulli", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-beta", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-binomial", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-bits", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-cauchy", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-chi_square", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-default_engine", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-exponential", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gamma", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gaussian", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gaussian_mv", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-generate", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-geometric", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gumbel", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-hypergeometric", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-laplace", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-leapfrog", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-lognormal", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mcg31m1", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mcg59", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mrg32k3a", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mt19937", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mt2203", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-multinomial", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-negbinomial", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-niederreiter", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-nondeterministic", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-philox4x32x10", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-poisson", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-poisson_v", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-r250", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-rayleigh", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-sfmt19937", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-skip_ahead", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-sobol", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform-continuous", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform-discrete", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform_bits", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-weibull", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-wichmann_hill", "elements/oneMKL/source/domains/rng/host_api/onemkl-rng-usage-model", "elements/oneMKL/source/domains/rng/host_api/rng-host-routines", "elements/oneMKL/source/domains/rng/host_api/service-routines", "elements/oneMKL/source/domains/rng/onemkl-rng-overview", "elements/oneMKL/source/domains/spblas/format-descriptions", "elements/oneMKL/source/domains/spblas/gemm", "elements/oneMKL/source/domains/spblas/gemmoptimize", "elements/oneMKL/source/domains/spblas/gemv", "elements/oneMKL/source/domains/spblas/gemvdot", "elements/oneMKL/source/domains/spblas/gemvoptimize", "elements/oneMKL/source/domains/spblas/matrixinit", "elements/oneMKL/source/domains/spblas/releasematrixhandle", "elements/oneMKL/source/domains/spblas/setcoostructure", "elements/oneMKL/source/domains/spblas/setcsrstructure", "elements/oneMKL/source/domains/spblas/spblas", "elements/oneMKL/source/domains/spblas/supported-types", "elements/oneMKL/source/domains/spblas/symv", "elements/oneMKL/source/domains/spblas/symvoptimize", "elements/oneMKL/source/domains/spblas/trmv", "elements/oneMKL/source/domains/spblas/trmvoptimize", "elements/oneMKL/source/domains/spblas/trsv", "elements/oneMKL/source/domains/spblas/trsvoptimize", "elements/oneMKL/source/domains/stats/onemkl_stats_central_moment", "elements/oneMKL/source/domains/stats/onemkl_stats_central_moment_user_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_central_sum", "elements/oneMKL/source/domains/stats/onemkl_stats_central_sum_user_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_dataset", "elements/oneMKL/source/domains/stats/onemkl_stats_kurtosis", "elements/oneMKL/source/domains/stats/onemkl_stats_kurtosis_user_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_make_dataset", "elements/oneMKL/source/domains/stats/onemkl_stats_max", "elements/oneMKL/source/domains/stats/onemkl_stats_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_min", "elements/oneMKL/source/domains/stats/onemkl_stats_min_max", "elements/oneMKL/source/domains/stats/onemkl_stats_overview", "elements/oneMKL/source/domains/stats/onemkl_stats_raw_moment", "elements/oneMKL/source/domains/stats/onemkl_stats_raw_sum", "elements/oneMKL/source/domains/stats/onemkl_stats_routines", "elements/oneMKL/source/domains/stats/onemkl_stats_service_routines", "elements/oneMKL/source/domains/stats/onemkl_stats_skewness", "elements/oneMKL/source/domains/stats/onemkl_stats_skewness_user_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_usage_model", "elements/oneMKL/source/domains/stats/onemkl_stats_variation", "elements/oneMKL/source/domains/stats/onemkl_stats_variation_user_mean", "elements/oneMKL/source/domains/value_or_pointer", "elements/oneMKL/source/domains/vm/abs", "elements/oneMKL/source/domains/vm/acos", "elements/oneMKL/source/domains/vm/acosh", "elements/oneMKL/source/domains/vm/acospi", "elements/oneMKL/source/domains/vm/add", "elements/oneMKL/source/domains/vm/arg", "elements/oneMKL/source/domains/vm/asin", "elements/oneMKL/source/domains/vm/asinh", "elements/oneMKL/source/domains/vm/asinpi", "elements/oneMKL/source/domains/vm/atan", "elements/oneMKL/source/domains/vm/atan2", "elements/oneMKL/source/domains/vm/atan2pi", "elements/oneMKL/source/domains/vm/atanh", "elements/oneMKL/source/domains/vm/atanpi", "elements/oneMKL/source/domains/vm/bibliography", "elements/oneMKL/source/domains/vm/cbrt", "elements/oneMKL/source/domains/vm/cdfnorm", "elements/oneMKL/source/domains/vm/cdfnorminv", "elements/oneMKL/source/domains/vm/ceil", "elements/oneMKL/source/domains/vm/cis", "elements/oneMKL/source/domains/vm/clear_status", "elements/oneMKL/source/domains/vm/conj", "elements/oneMKL/source/domains/vm/copysign", "elements/oneMKL/source/domains/vm/cos", "elements/oneMKL/source/domains/vm/cosd", "elements/oneMKL/source/domains/vm/cosh", "elements/oneMKL/source/domains/vm/cospi", "elements/oneMKL/source/domains/vm/create_error_handler", "elements/oneMKL/source/domains/vm/div", "elements/oneMKL/source/domains/vm/erf", "elements/oneMKL/source/domains/vm/erfc", "elements/oneMKL/source/domains/vm/erfcinv", "elements/oneMKL/source/domains/vm/erfinv", "elements/oneMKL/source/domains/vm/exp", "elements/oneMKL/source/domains/vm/exp10", "elements/oneMKL/source/domains/vm/exp2", "elements/oneMKL/source/domains/vm/expint1", "elements/oneMKL/source/domains/vm/expm1", "elements/oneMKL/source/domains/vm/fdim", "elements/oneMKL/source/domains/vm/floor", "elements/oneMKL/source/domains/vm/fmax", "elements/oneMKL/source/domains/vm/fmin", "elements/oneMKL/source/domains/vm/fmod", "elements/oneMKL/source/domains/vm/frac", "elements/oneMKL/source/domains/vm/get_mode", "elements/oneMKL/source/domains/vm/get_status", "elements/oneMKL/source/domains/vm/hypot", "elements/oneMKL/source/domains/vm/inv", "elements/oneMKL/source/domains/vm/invcbrt", "elements/oneMKL/source/domains/vm/invsqrt", "elements/oneMKL/source/domains/vm/lgamma", "elements/oneMKL/source/domains/vm/linearfrac", "elements/oneMKL/source/domains/vm/ln", "elements/oneMKL/source/domains/vm/log10", "elements/oneMKL/source/domains/vm/log1p", "elements/oneMKL/source/domains/vm/log2", "elements/oneMKL/source/domains/vm/logb", "elements/oneMKL/source/domains/vm/maxmag", "elements/oneMKL/source/domains/vm/minmag", "elements/oneMKL/source/domains/vm/modf", "elements/oneMKL/source/domains/vm/mul", "elements/oneMKL/source/domains/vm/mulbyconj", "elements/oneMKL/source/domains/vm/nearbyint", "elements/oneMKL/source/domains/vm/nextafter", "elements/oneMKL/source/domains/vm/pow", "elements/oneMKL/source/domains/vm/pow2o3", "elements/oneMKL/source/domains/vm/pow3o2", "elements/oneMKL/source/domains/vm/powr", "elements/oneMKL/source/domains/vm/powx", "elements/oneMKL/source/domains/vm/remainder", "elements/oneMKL/source/domains/vm/rint", "elements/oneMKL/source/domains/vm/round", "elements/oneMKL/source/domains/vm/set_status", "elements/oneMKL/source/domains/vm/setmode", "elements/oneMKL/source/domains/vm/sin", "elements/oneMKL/source/domains/vm/sincos", "elements/oneMKL/source/domains/vm/sind", "elements/oneMKL/source/domains/vm/sinh", "elements/oneMKL/source/domains/vm/sinpi", "elements/oneMKL/source/domains/vm/special-value-notations", "elements/oneMKL/source/domains/vm/sqr", "elements/oneMKL/source/domains/vm/sqrt", "elements/oneMKL/source/domains/vm/sub", "elements/oneMKL/source/domains/vm/tan", "elements/oneMKL/source/domains/vm/tand", "elements/oneMKL/source/domains/vm/tanh", "elements/oneMKL/source/domains/vm/tanpi", "elements/oneMKL/source/domains/vm/tgamma", "elements/oneMKL/source/domains/vm/trunc", "elements/oneMKL/source/domains/vm/vm", "elements/oneMKL/source/domains/vm/vm-exceptions", "elements/oneMKL/source/domains/vm/vm-mathematical-functions", "elements/oneMKL/source/domains/vm/vm-service-functions", "elements/oneMKL/source/index", "elements/oneTBB/source/algorithms", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range2d_cls", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range3d_cls", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range_cls", "elements/oneTBB/source/algorithms/functions/collaborative_call_once_func", "elements/oneTBB/source/algorithms/functions/collaborative_once_flag_cls", "elements/oneTBB/source/algorithms/functions/feeder", "elements/oneTBB/source/algorithms/functions/parallel_deterministic_reduce_func", "elements/oneTBB/source/algorithms/functions/parallel_for_each_func", "elements/oneTBB/source/algorithms/functions/parallel_for_func", "elements/oneTBB/source/algorithms/functions/parallel_invoke_func", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_cls", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_mode_enum", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/flow_control_cls", "elements/oneTBB/source/algorithms/functions/parallel_reduce_func", "elements/oneTBB/source/algorithms/functions/parallel_scan_func", "elements/oneTBB/source/algorithms/functions/parallel_sort_func", "elements/oneTBB/source/algorithms/functions/pre_scan_tag_and_final_scan_tag_clses", "elements/oneTBB/source/algorithms/partitioners/affinity_partitioner", "elements/oneTBB/source/algorithms/partitioners/auto_partitioner", "elements/oneTBB/source/algorithms/partitioners/simple_partitioner", "elements/oneTBB/source/algorithms/partitioners/static_partitioner", "elements/oneTBB/source/algorithms/split_tags/proportional_split_cls", "elements/oneTBB/source/algorithms/split_tags/split_cls", "elements/oneTBB/source/configuration", "elements/oneTBB/source/configuration/enabling_debugging_features", "elements/oneTBB/source/configuration/feature_macros", "elements/oneTBB/source/configuration/namespaces", "elements/oneTBB/source/configuration/version_information", "elements/oneTBB/source/containers", "elements/oneTBB/source/containers/auxiliary/node_handles_cls", "elements/oneTBB/source/containers/auxiliary/tbb_hash_compare_cls", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/iterators", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/safe_member_functions", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/unsafe_member_functions", "elements/oneTBB/source/containers/concurrent_hash_map_cls", "elements/oneTBB/source/containers/concurrent_hash_map_cls/accessors", "elements/oneTBB/source/containers/concurrent_hash_map_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_hash_map_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_hash_map_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_hash_map_cls/iterators", "elements/oneTBB/source/containers/concurrent_hash_map_cls/lookup", "elements/oneTBB/source/containers/concurrent_hash_map_cls/modifiers", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_hash_map_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_hash_map_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_hash_map_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_map_cls", "elements/oneTBB/source/containers/concurrent_map_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_map_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_map_cls/element_access", "elements/oneTBB/source/containers/concurrent_map_cls/iterators", "elements/oneTBB/source/containers/concurrent_map_cls/lookup", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_map_cls/observers", "elements/oneTBB/source/containers/concurrent_map_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_map_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_map_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_map_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_map_cls/value_compare_cls", "elements/oneTBB/source/containers/concurrent_multimap_cls", "elements/oneTBB/source/containers/concurrent_multimap_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_multimap_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_multimap_cls/iterators", "elements/oneTBB/source/containers/concurrent_multimap_cls/lookup", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_multimap_cls/observers", "elements/oneTBB/source/containers/concurrent_multimap_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_multimap_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_multimap_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_multimap_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_multimap_cls/value_compare_cls", "elements/oneTBB/source/containers/concurrent_multiset_cls", "elements/oneTBB/source/containers/concurrent_multiset_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_multiset_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_multiset_cls/iterators", "elements/oneTBB/source/containers/concurrent_multiset_cls/lookup", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_multiset_cls/observers", "elements/oneTBB/source/containers/concurrent_multiset_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_multiset_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_multiset_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_multiset_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_priority_queue_cls", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_queue_cls", "elements/oneTBB/source/containers/concurrent_queue_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_queue_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_queue_cls/iterators", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_queue_cls/safe_member_functions", "elements/oneTBB/source/containers/concurrent_queue_cls/unsafe_member_functions", "elements/oneTBB/source/containers/concurrent_set_cls", "elements/oneTBB/source/containers/concurrent_set_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_set_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_set_cls/iterators", "elements/oneTBB/source/containers/concurrent_set_cls/lookup", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_set_cls/observers", "elements/oneTBB/source/containers/concurrent_set_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_set_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_set_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_set_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_map_cls", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/element_access", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multimap", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multiset", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_set_cls", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_vector_cls", "elements/oneTBB/source/containers/concurrent_vector_cls/concurrent_growth", "elements/oneTBB/source/containers/concurrent_vector_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_vector_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_vector_cls/element_access", "elements/oneTBB/source/containers/concurrent_vector_cls/iterators", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_vector_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_vector_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_vector_cls/unsafe_operations", "elements/oneTBB/source/deprecated/task_arena_attach_tag", "elements/oneTBB/source/flow_graph", "elements/oneTBB/source/flow_graph/async_node_cls", "elements/oneTBB/source/flow_graph/broadcast_node_cls", "elements/oneTBB/source/flow_graph/buffer_node_cls", "elements/oneTBB/source/flow_graph/composite_node_cls", "elements/oneTBB/source/flow_graph/continue_msg_cls", "elements/oneTBB/source/flow_graph/continue_node_cls", "elements/oneTBB/source/flow_graph/copy_body_func", "elements/oneTBB/source/flow_graph/dependency_flow_graph_example", "elements/oneTBB/source/flow_graph/forwarding_and_buffering", "elements/oneTBB/source/flow_graph/func_node_cls", "elements/oneTBB/source/flow_graph/functional_node_policies", "elements/oneTBB/source/flow_graph/graph_cls", "elements/oneTBB/source/flow_graph/graph_node_cls", "elements/oneTBB/source/flow_graph/indexer_node_cls", "elements/oneTBB/source/flow_graph/input_node_cls", "elements/oneTBB/source/flow_graph/input_port_func", "elements/oneTBB/source/flow_graph/join_node_cls", "elements/oneTBB/source/flow_graph/join_node_policies", "elements/oneTBB/source/flow_graph/limiter_node_cls", "elements/oneTBB/source/flow_graph/make_edge_func", "elements/oneTBB/source/flow_graph/message_flow_graph_example", "elements/oneTBB/source/flow_graph/multifunc_node_cls", "elements/oneTBB/source/flow_graph/node_priorities", "elements/oneTBB/source/flow_graph/output_port_func", "elements/oneTBB/source/flow_graph/overwrite_node_cls", "elements/oneTBB/source/flow_graph/predefined_concurrency_limits", "elements/oneTBB/source/flow_graph/priority_queue_node_cls", "elements/oneTBB/source/flow_graph/queue_node_cls", "elements/oneTBB/source/flow_graph/receiver", "elements/oneTBB/source/flow_graph/remove_edge_func", "elements/oneTBB/source/flow_graph/reset_flags_enum", "elements/oneTBB/source/flow_graph/sender", "elements/oneTBB/source/flow_graph/sequencer_node_cls", "elements/oneTBB/source/flow_graph/split_node_cls", "elements/oneTBB/source/flow_graph/tagged_msg_cls", "elements/oneTBB/source/flow_graph/write_once_node_cls", "elements/oneTBB/source/identifiers", "elements/oneTBB/source/info_namespace", "elements/oneTBB/source/intro", "elements/oneTBB/source/memory_allocation", "elements/oneTBB/source/memory_allocation/c_interface_to_scalable_allocator", "elements/oneTBB/source/memory_allocation/cache_aligned_allocator_cls", "elements/oneTBB/source/memory_allocation/cache_aligned_resource_cls", "elements/oneTBB/source/memory_allocation/scalable_allocator_cls", "elements/oneTBB/source/memory_allocation/scalable_memory_resource_func", "elements/oneTBB/source/memory_allocation/tbb_allocator_cls", "elements/oneTBB/source/mutual_exclusion", "elements/oneTBB/source/mutual_exclusion/mutex_cls", "elements/oneTBB/source/mutual_exclusion/null_mutex_cls", "elements/oneTBB/source/mutual_exclusion/null_rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/queuing_mutex_cls", "elements/oneTBB/source/mutual_exclusion/queuing_rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/speculative_spin_mutex_cls", "elements/oneTBB/source/mutual_exclusion/speculative_spin_rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/spin_mutex_cls", "elements/oneTBB/source/mutual_exclusion/spin_rw_mutex_cls", "elements/oneTBB/source/named_requirements", "elements/oneTBB/source/named_requirements/algorithms/blocked_range_val", "elements/oneTBB/source/named_requirements/algorithms/container_based_sequence", "elements/oneTBB/source/named_requirements/algorithms/filter_body", "elements/oneTBB/source/named_requirements/algorithms/par_for_body", "elements/oneTBB/source/named_requirements/algorithms/par_for_each_body", "elements/oneTBB/source/named_requirements/algorithms/par_for_func", "elements/oneTBB/source/named_requirements/algorithms/par_for_index", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_body", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_func", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_reduction", "elements/oneTBB/source/named_requirements/algorithms/par_scan_body", "elements/oneTBB/source/named_requirements/algorithms/par_scan_combine", "elements/oneTBB/source/named_requirements/algorithms/par_scan_func", "elements/oneTBB/source/named_requirements/algorithms/range", "elements/oneTBB/source/named_requirements/algorithms/splittable", "elements/oneTBB/source/named_requirements/containers/container_range", "elements/oneTBB/source/named_requirements/containers/hash_compare", "elements/oneTBB/source/named_requirements/flow_graph/async_node_body", "elements/oneTBB/source/named_requirements/flow_graph/continue_node_body", "elements/oneTBB/source/named_requirements/flow_graph/function_node_body", "elements/oneTBB/source/named_requirements/flow_graph/gateway_type", "elements/oneTBB/source/named_requirements/flow_graph/input_node_body", "elements/oneTBB/source/named_requirements/flow_graph/join_node_func_obj", "elements/oneTBB/source/named_requirements/flow_graph/multifunction_node_body", "elements/oneTBB/source/named_requirements/flow_graph/sequencer", "elements/oneTBB/source/named_requirements/mutexes/mutex", "elements/oneTBB/source/named_requirements/mutexes/rw_mutex", "elements/oneTBB/source/named_requirements/task_scheduler/suspend_func", "elements/oneTBB/source/nested-aux-interfaces", "elements/oneTBB/source/nested-depr-interfaces", "elements/oneTBB/source/nested-gen-info", "elements/oneTBB/source/nested-index", "elements/oneTBB/source/nested-interfaces", "elements/oneTBB/source/notation", "elements/oneTBB/source/task_scheduler", "elements/oneTBB/source/task_scheduler/attach_tag_type", "elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls", "elements/oneTBB/source/task_scheduler/scheduling_controls/resumable_tasks", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_group_context_cls", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_scheduler_handle_cls", "elements/oneTBB/source/task_scheduler/task_arena/task_arena_cls", "elements/oneTBB/source/task_scheduler/task_arena/task_scheduler_observer_cls", "elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns", "elements/oneTBB/source/task_scheduler/task_group/task_group_cls", "elements/oneTBB/source/task_scheduler/task_group/task_group_status_enum", "elements/oneTBB/source/task_scheduler/task_group/task_handle", "elements/oneTBB/source/thread_local_storage", "elements/oneTBB/source/thread_local_storage/combinable_cls", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/combining", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/construct_destroy_copy", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/iteration", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/safe_modifiers", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/size_and_capacity", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/unsafe_modifiers", "elements/oneTBB/source/thread_local_storage/flattened2d_cls", "elements/oneTBB/source/thread_safety", "elements/oneTBB/source/timing", "elements/oneTBB/source/timing/tick_count_cls", "index", "introduction", "notices"], "filenames": ["404.rst", "architecture.rst", "elements/element_list.rst", "elements/l0/source/index.rst", "elements/oneCCL/source/definitions.rst", "elements/oneCCL/source/index.rst", "elements/oneCCL/source/introduction.rst", "elements/oneCCL/source/namespaces.rst", "elements/oneCCL/source/programming_model.rst", "elements/oneCCL/source/spec/collective_operations.rst", "elements/oneCCL/source/spec/datatypes.rst", "elements/oneCCL/source/spec/error_handling.rst", "elements/oneCCL/source/spec/generic_workflow.rst", "elements/oneCCL/source/spec/main_objects.rst", "elements/oneCCL/source/spec/operation_attributes.rst", "elements/oneCCL/source/spec/operation_progress.rst", "elements/oneCCL/source/spec/operations.rst", "elements/oneCCL/source/spec/reductions.rst", "elements/oneCCL/source/spec_version.rst", "elements/oneDAL/source/algorithms/clustering/index.rst", "elements/oneDAL/source/algorithms/clustering/kmeans.rst", "elements/oneDAL/source/algorithms/clustering/kmeans_init.rst", "elements/oneDAL/source/algorithms/decomposition/index.rst", "elements/oneDAL/source/algorithms/decomposition/pca.rst", "elements/oneDAL/source/algorithms/index.rst", "elements/oneDAL/source/algorithms/nearest_neighbors/index.rst", "elements/oneDAL/source/algorithms/nearest_neighbors/knn_classification.rst", "elements/oneDAL/source/appendix/index.rst", "elements/oneDAL/source/appendix/kd_tree.rst", "elements/oneDAL/source/bibliography.rst", "elements/oneDAL/source/common_interface/common_type_definitions.rst", "elements/oneDAL/source/common_interface/error_handling.rst", "elements/oneDAL/source/common_interface/header_files_and_namespaces.rst", "elements/oneDAL/source/common_interface/index.rst", "elements/oneDAL/source/common_interface/spec_version.rst", "elements/oneDAL/source/data_management/accessor/column.rst", "elements/oneDAL/source/data_management/accessor/row.rst", "elements/oneDAL/source/data_management/accessors.rst", "elements/oneDAL/source/data_management/array.rst", "elements/oneDAL/source/data_management/csv_data_source.rst", "elements/oneDAL/source/data_management/data_sources.rst", "elements/oneDAL/source/data_management/index.rst", "elements/oneDAL/source/data_management/table/homogen.rst", "elements/oneDAL/source/data_management/tables.rst", "elements/oneDAL/source/glossary.rst", "elements/oneDAL/source/index.rst", "elements/oneDAL/source/introduction.rst", "elements/oneDAL/source/notations.rst", "elements/oneDAL/source/programming_model/computational_modes.rst", "elements/oneDAL/source/programming_model/descriptors.rst", "elements/oneDAL/source/programming_model/end_to_end_example.rst", "elements/oneDAL/source/programming_model/index.rst", "elements/oneDAL/source/programming_model/operations/index.rst", "elements/oneDAL/source/programming_model/operations/support.rst", "elements/oneDNN/source/conventions.rst", "elements/oneDNN/source/data_model/data_types/bfloat16.rst", "elements/oneDNN/source/data_model/data_types/index.rst", "elements/oneDNN/source/data_model/data_types/int8.rst", "elements/oneDNN/source/data_model/index.rst", "elements/oneDNN/source/data_model/memory/formats.rst", "elements/oneDNN/source/data_model/memory/index.rst", "elements/oneDNN/source/data_model/memory/objects.rst", "elements/oneDNN/source/execution_model/index.rst", "elements/oneDNN/source/graph/data_model.rst", "elements/oneDNN/source/graph/general.rst", "elements/oneDNN/source/graph/index.rst", "elements/oneDNN/source/graph/ops/Abs.rst", "elements/oneDNN/source/graph/ops/AbsBackward.rst", "elements/oneDNN/source/graph/ops/Add.rst", "elements/oneDNN/source/graph/ops/AvgPool.rst", "elements/oneDNN/source/graph/ops/AvgPoolBackward.rst", "elements/oneDNN/source/graph/ops/BatchNormForwardTraining.rst", "elements/oneDNN/source/graph/ops/BatchNormInference.rst", "elements/oneDNN/source/graph/ops/BatchNormTrainingBackward.rst", "elements/oneDNN/source/graph/ops/BiasAdd.rst", "elements/oneDNN/source/graph/ops/BiasAddBackward.rst", "elements/oneDNN/source/graph/ops/Clamp.rst", "elements/oneDNN/source/graph/ops/ClampBackward.rst", "elements/oneDNN/source/graph/ops/Concat.rst", "elements/oneDNN/source/graph/ops/ConvTranspose.rst", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardData.rst", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardWeights.rst", "elements/oneDNN/source/graph/ops/Convolution.rst", "elements/oneDNN/source/graph/ops/ConvolutionBackwardData.rst", "elements/oneDNN/source/graph/ops/ConvolutionBackwardWeights.rst", "elements/oneDNN/source/graph/ops/Dequantize.rst", "elements/oneDNN/source/graph/ops/Divide.rst", "elements/oneDNN/source/graph/ops/DynamicDequantize.rst", "elements/oneDNN/source/graph/ops/DynamicQuantize.rst", "elements/oneDNN/source/graph/ops/Elu.rst", "elements/oneDNN/source/graph/ops/EluBackward.rst", "elements/oneDNN/source/graph/ops/End.rst", "elements/oneDNN/source/graph/ops/Exp.rst", "elements/oneDNN/source/graph/ops/GELU.rst", "elements/oneDNN/source/graph/ops/GELUBackward.rst", "elements/oneDNN/source/graph/ops/HardSigmoid.rst", "elements/oneDNN/source/graph/ops/HardSigmoidBackward.rst", "elements/oneDNN/source/graph/ops/HardSwish.rst", "elements/oneDNN/source/graph/ops/HardSwishBackward.rst", "elements/oneDNN/source/graph/ops/Interpolate.rst", "elements/oneDNN/source/graph/ops/InterpolateBackward.rst", "elements/oneDNN/source/graph/ops/LayerNorm.rst", "elements/oneDNN/source/graph/ops/LayerNormBackward.rst", "elements/oneDNN/source/graph/ops/LeakyReLU.rst", "elements/oneDNN/source/graph/ops/Log.rst", "elements/oneDNN/source/graph/ops/LogSoftmax.rst", "elements/oneDNN/source/graph/ops/LogSoftmaxBackward.rst", "elements/oneDNN/source/graph/ops/MatMul.rst", "elements/oneDNN/source/graph/ops/MaxPool.rst", "elements/oneDNN/source/graph/ops/MaxPoolBackward.rst", "elements/oneDNN/source/graph/ops/Maximum.rst", "elements/oneDNN/source/graph/ops/Minimum.rst", "elements/oneDNN/source/graph/ops/Mish.rst", "elements/oneDNN/source/graph/ops/MishBackward.rst", "elements/oneDNN/source/graph/ops/Multiply.rst", "elements/oneDNN/source/graph/ops/PReLU.rst", "elements/oneDNN/source/graph/ops/PReLUBackward.rst", "elements/oneDNN/source/graph/ops/Pow.rst", "elements/oneDNN/source/graph/ops/Quantize.rst", "elements/oneDNN/source/graph/ops/ReLU.rst", "elements/oneDNN/source/graph/ops/ReLUBackward.rst", "elements/oneDNN/source/graph/ops/Reciprocal.rst", "elements/oneDNN/source/graph/ops/ReduceL1.rst", "elements/oneDNN/source/graph/ops/ReduceL2.rst", "elements/oneDNN/source/graph/ops/ReduceMax.rst", "elements/oneDNN/source/graph/ops/ReduceMean.rst", "elements/oneDNN/source/graph/ops/ReduceMin.rst", "elements/oneDNN/source/graph/ops/ReduceProd.rst", "elements/oneDNN/source/graph/ops/ReduceSum.rst", "elements/oneDNN/source/graph/ops/Reorder.rst", "elements/oneDNN/source/graph/ops/Round.rst", "elements/oneDNN/source/graph/ops/Select.rst", "elements/oneDNN/source/graph/ops/Sigmoid.rst", "elements/oneDNN/source/graph/ops/SigmoidBackward.rst", "elements/oneDNN/source/graph/ops/SoftPlus.rst", "elements/oneDNN/source/graph/ops/SoftPlusBackward.rst", "elements/oneDNN/source/graph/ops/Softmax.rst", "elements/oneDNN/source/graph/ops/SoftmaxBackward.rst", "elements/oneDNN/source/graph/ops/Sqrt.rst", "elements/oneDNN/source/graph/ops/SqrtBackward.rst", "elements/oneDNN/source/graph/ops/Square.rst", "elements/oneDNN/source/graph/ops/SquaredDifference.rst", "elements/oneDNN/source/graph/ops/StaticReshape.rst", "elements/oneDNN/source/graph/ops/StaticTranspose.rst", "elements/oneDNN/source/graph/ops/Subtract.rst", "elements/oneDNN/source/graph/ops/Tanh.rst", "elements/oneDNN/source/graph/ops/TanhBackward.rst", "elements/oneDNN/source/graph/ops/TypeCast.rst", "elements/oneDNN/source/graph/ops/Wildcard.rst", "elements/oneDNN/source/graph/ops/index.rst", "elements/oneDNN/source/graph/programming_model.rst", "elements/oneDNN/source/index.rst", "elements/oneDNN/source/introduction.rst", "elements/oneDNN/source/primitives/attributes/index.rst", "elements/oneDNN/source/primitives/attributes/post-ops.rst", "elements/oneDNN/source/primitives/batch_normalization.rst", "elements/oneDNN/source/primitives/binary.rst", "elements/oneDNN/source/primitives/concat.rst", "elements/oneDNN/source/primitives/convolution.rst", "elements/oneDNN/source/primitives/eltwise.rst", "elements/oneDNN/source/primitives/general.rst", "elements/oneDNN/source/primitives/index.rst", "elements/oneDNN/source/primitives/inner-product.rst", "elements/oneDNN/source/primitives/layer_normalization.rst", "elements/oneDNN/source/primitives/lrn.rst", "elements/oneDNN/source/primitives/matmul.rst", "elements/oneDNN/source/primitives/pooling.rst", "elements/oneDNN/source/primitives/prelu.rst", "elements/oneDNN/source/primitives/reduction.rst", "elements/oneDNN/source/primitives/reorder.rst", "elements/oneDNN/source/primitives/resampling.rst", "elements/oneDNN/source/primitives/rnn.rst", "elements/oneDNN/source/primitives/shuffle.rst", "elements/oneDNN/source/primitives/softmax.rst", "elements/oneDNN/source/primitives/sum.rst", "elements/oneDPL/source/common.rst", "elements/oneDPL/source/index.rst", "elements/oneDPL/source/parallel_api.rst", "elements/oneDPL/source/sycl_kernels_api.rst", "elements/oneMKL/source/appendix/appendix.rst", "elements/oneMKL/source/architecture/architecture.rst", "elements/oneMKL/source/domains/blas/asum.rst", "elements/oneMKL/source/domains/blas/axpby.rst", "elements/oneMKL/source/domains/blas/axpy.rst", "elements/oneMKL/source/domains/blas/axpy_batch.rst", "elements/oneMKL/source/domains/blas/blas.rst", "elements/oneMKL/source/domains/blas/blas-level-1-routines.rst", "elements/oneMKL/source/domains/blas/blas-level-2-routines.rst", "elements/oneMKL/source/domains/blas/blas-level-3-routines.rst", "elements/oneMKL/source/domains/blas/blas-like-extensions.rst", "elements/oneMKL/source/domains/blas/copy.rst", "elements/oneMKL/source/domains/blas/copy_batch.rst", "elements/oneMKL/source/domains/blas/dgmm_batch.rst", "elements/oneMKL/source/domains/blas/dot.rst", "elements/oneMKL/source/domains/blas/dotc.rst", "elements/oneMKL/source/domains/blas/dotu.rst", "elements/oneMKL/source/domains/blas/gbmv.rst", "elements/oneMKL/source/domains/blas/gemm.rst", "elements/oneMKL/source/domains/blas/gemm_batch.rst", "elements/oneMKL/source/domains/blas/gemm_bias.rst", "elements/oneMKL/source/domains/blas/gemmt.rst", "elements/oneMKL/source/domains/blas/gemv.rst", "elements/oneMKL/source/domains/blas/gemv_batch.rst", "elements/oneMKL/source/domains/blas/ger.rst", "elements/oneMKL/source/domains/blas/gerc.rst", "elements/oneMKL/source/domains/blas/geru.rst", "elements/oneMKL/source/domains/blas/hbmv.rst", "elements/oneMKL/source/domains/blas/hemm.rst", "elements/oneMKL/source/domains/blas/hemv.rst", "elements/oneMKL/source/domains/blas/her.rst", "elements/oneMKL/source/domains/blas/her2.rst", "elements/oneMKL/source/domains/blas/her2k.rst", "elements/oneMKL/source/domains/blas/herk.rst", "elements/oneMKL/source/domains/blas/hpmv.rst", "elements/oneMKL/source/domains/blas/hpr.rst", "elements/oneMKL/source/domains/blas/hpr2.rst", "elements/oneMKL/source/domains/blas/iamax.rst", "elements/oneMKL/source/domains/blas/iamin.rst", "elements/oneMKL/source/domains/blas/imatcopy.rst", "elements/oneMKL/source/domains/blas/imatcopy_batch.rst", "elements/oneMKL/source/domains/blas/nrm2.rst", "elements/oneMKL/source/domains/blas/omatadd.rst", "elements/oneMKL/source/domains/blas/omatadd_batch.rst", "elements/oneMKL/source/domains/blas/omatcopy.rst", "elements/oneMKL/source/domains/blas/omatcopy2.rst", "elements/oneMKL/source/domains/blas/omatcopy_batch.rst", "elements/oneMKL/source/domains/blas/rot.rst", "elements/oneMKL/source/domains/blas/rotg.rst", "elements/oneMKL/source/domains/blas/rotm.rst", "elements/oneMKL/source/domains/blas/rotmg.rst", "elements/oneMKL/source/domains/blas/sbmv.rst", "elements/oneMKL/source/domains/blas/scal.rst", "elements/oneMKL/source/domains/blas/sdsdot.rst", "elements/oneMKL/source/domains/blas/spmv.rst", "elements/oneMKL/source/domains/blas/spr.rst", "elements/oneMKL/source/domains/blas/spr2.rst", "elements/oneMKL/source/domains/blas/swap.rst", "elements/oneMKL/source/domains/blas/symm.rst", "elements/oneMKL/source/domains/blas/symv.rst", "elements/oneMKL/source/domains/blas/syr.rst", "elements/oneMKL/source/domains/blas/syr2.rst", "elements/oneMKL/source/domains/blas/syr2k.rst", "elements/oneMKL/source/domains/blas/syrk.rst", "elements/oneMKL/source/domains/blas/syrk_batch.rst", "elements/oneMKL/source/domains/blas/tbmv.rst", "elements/oneMKL/source/domains/blas/tbsv.rst", "elements/oneMKL/source/domains/blas/tpmv.rst", "elements/oneMKL/source/domains/blas/tpsv.rst", "elements/oneMKL/source/domains/blas/trmm.rst", "elements/oneMKL/source/domains/blas/trmv.rst", "elements/oneMKL/source/domains/blas/trsm.rst", "elements/oneMKL/source/domains/blas/trsm_batch.rst", "elements/oneMKL/source/domains/blas/trsv.rst", "elements/oneMKL/source/domains/dft/compute_backward.rst", "elements/oneMKL/source/domains/dft/compute_forward.rst", "elements/oneMKL/source/domains/dft/config_params/data_layouts.rst", "elements/oneMKL/source/domains/dft/config_params/storage_formats.rst", "elements/oneMKL/source/domains/dft/config_params/workspace_placement.rst", "elements/oneMKL/source/domains/dft/descriptor.rst", "elements/oneMKL/source/domains/dft/dft.rst", "elements/oneMKL/source/domains/dft/enums_and_config_params.rst", "elements/oneMKL/source/domains/domains.rst", "elements/oneMKL/source/domains/lapack/gebrd.rst", "elements/oneMKL/source/domains/lapack/gebrd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/geqrf.rst", "elements/oneMKL/source/domains/lapack/geqrf_batch.rst", "elements/oneMKL/source/domains/lapack/geqrf_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/geqrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/gerqf.rst", "elements/oneMKL/source/domains/lapack/gerqf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/gesvd.rst", "elements/oneMKL/source/domains/lapack/gesvd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getrf.rst", "elements/oneMKL/source/domains/lapack/getrf_batch.rst", "elements/oneMKL/source/domains/lapack/getrf_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getri.rst", "elements/oneMKL/source/domains/lapack/getri_batch.rst", "elements/oneMKL/source/domains/lapack/getri_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getri_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getrs.rst", "elements/oneMKL/source/domains/lapack/getrs_batch.rst", "elements/oneMKL/source/domains/lapack/getrs_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getrs_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/heevd.rst", "elements/oneMKL/source/domains/lapack/heevd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/hegvd.rst", "elements/oneMKL/source/domains/lapack/hegvd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/hetrd.rst", "elements/oneMKL/source/domains/lapack/hetrd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/hetrf.rst", "elements/oneMKL/source/domains/lapack/hetrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/lapack.rst", "elements/oneMKL/source/domains/lapack/orgbr.rst", "elements/oneMKL/source/domains/lapack/orgbr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/orgqr.rst", "elements/oneMKL/source/domains/lapack/orgqr_batch.rst", "elements/oneMKL/source/domains/lapack/orgqr_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/orgqr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/orgtr.rst", "elements/oneMKL/source/domains/lapack/orgtr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ormqr.rst", "elements/oneMKL/source/domains/lapack/ormqr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ormrq.rst", "elements/oneMKL/source/domains/lapack/ormrq_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ormtr.rst", "elements/oneMKL/source/domains/lapack/ormtr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potrf.rst", "elements/oneMKL/source/domains/lapack/potrf_batch.rst", "elements/oneMKL/source/domains/lapack/potrf_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potri.rst", "elements/oneMKL/source/domains/lapack/potri_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potrs.rst", "elements/oneMKL/source/domains/lapack/potrs_batch.rst", "elements/oneMKL/source/domains/lapack/potrs_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potrs_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/syevd.rst", "elements/oneMKL/source/domains/lapack/syevd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/sygvd.rst", "elements/oneMKL/source/domains/lapack/sygvd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/sytrd.rst", "elements/oneMKL/source/domains/lapack/sytrd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/sytrf.rst", "elements/oneMKL/source/domains/lapack/sytrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/trtrs.rst", "elements/oneMKL/source/domains/lapack/trtrs_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ungbr.rst", "elements/oneMKL/source/domains/lapack/ungbr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ungqr.rst", "elements/oneMKL/source/domains/lapack/ungqr_batch.rst", "elements/oneMKL/source/domains/lapack/ungqr_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ungqr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ungtr.rst", "elements/oneMKL/source/domains/lapack/ungtr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/unmqr.rst", "elements/oneMKL/source/domains/lapack/unmqr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/unmrq.rst", "elements/oneMKL/source/domains/lapack/unmrq_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/unmtr.rst", "elements/oneMKL/source/domains/lapack/unmtr_scratchpad_size.rst", "elements/oneMKL/source/domains/matrix-storage.rst", "elements/oneMKL/source/domains/rng/bibliography.rst", "elements/oneMKL/source/domains/rng/device_api/device-distributions.rst", "elements/oneMKL/source/domains/rng/device_api/device-distributions-template-parameter-method.rst", "elements/oneMKL/source/domains/rng/device_api/device-engines.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-bernoulli.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-bits.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-exponential.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-gaussian.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-generate.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-generate-routines.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-lognormal.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-mcg31m1.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-mcg59.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-mrg32k3a.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-philox4x32x10.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-poisson.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-skip-ahead.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-bits.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-continuous.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-discrete.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-usage-model.rst", "elements/oneMKL/source/domains/rng/device_api/device-routines.rst", "elements/oneMKL/source/domains/rng/device_api/device-service-routines.rst", "elements/oneMKL/source/domains/rng/host_api/distributions.rst", "elements/oneMKL/source/domains/rng/host_api/distributions-template-parameter-mkl-rng-method-values.rst", "elements/oneMKL/source/domains/rng/host_api/engines-basic-random-number-generators.rst", "elements/oneMKL/source/domains/rng/host_api/generate-routine.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-ars5.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-bernoulli.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-beta.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-binomial.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-bits.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-cauchy.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-chi_square.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-default_engine.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-exponential.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gamma.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gaussian.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gaussian_mv.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-generate.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-geometric.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gumbel.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-hypergeometric.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-laplace.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-leapfrog.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-lognormal.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mcg31m1.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mcg59.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mrg32k3a.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mt19937.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mt2203.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-multinomial.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-negbinomial.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-niederreiter.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-nondeterministic.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-philox4x32x10.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-poisson.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-poisson_v.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-r250.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-rayleigh.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-sfmt19937.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-skip_ahead.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-sobol.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform-continuous.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform-discrete.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform_bits.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-weibull.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-wichmann_hill.rst", "elements/oneMKL/source/domains/rng/host_api/onemkl-rng-usage-model.rst", "elements/oneMKL/source/domains/rng/host_api/rng-host-routines.rst", "elements/oneMKL/source/domains/rng/host_api/service-routines.rst", "elements/oneMKL/source/domains/rng/onemkl-rng-overview.rst", "elements/oneMKL/source/domains/spblas/format-descriptions.rst", "elements/oneMKL/source/domains/spblas/gemm.rst", "elements/oneMKL/source/domains/spblas/gemmoptimize.rst", "elements/oneMKL/source/domains/spblas/gemv.rst", "elements/oneMKL/source/domains/spblas/gemvdot.rst", "elements/oneMKL/source/domains/spblas/gemvoptimize.rst", "elements/oneMKL/source/domains/spblas/matrixinit.rst", "elements/oneMKL/source/domains/spblas/releasematrixhandle.rst", "elements/oneMKL/source/domains/spblas/setcoostructure.rst", "elements/oneMKL/source/domains/spblas/setcsrstructure.rst", "elements/oneMKL/source/domains/spblas/spblas.rst", "elements/oneMKL/source/domains/spblas/supported-types.rst", "elements/oneMKL/source/domains/spblas/symv.rst", "elements/oneMKL/source/domains/spblas/symvoptimize.rst", "elements/oneMKL/source/domains/spblas/trmv.rst", "elements/oneMKL/source/domains/spblas/trmvoptimize.rst", "elements/oneMKL/source/domains/spblas/trsv.rst", "elements/oneMKL/source/domains/spblas/trsvoptimize.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_central_moment.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_central_moment_user_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_central_sum.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_central_sum_user_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_dataset.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_kurtosis.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_kurtosis_user_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_make_dataset.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_max.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_min.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_min_max.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_overview.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_raw_moment.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_raw_sum.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_routines.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_service_routines.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_skewness.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_skewness_user_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_usage_model.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_variation.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_variation_user_mean.rst", "elements/oneMKL/source/domains/value_or_pointer.rst", "elements/oneMKL/source/domains/vm/abs.rst", "elements/oneMKL/source/domains/vm/acos.rst", "elements/oneMKL/source/domains/vm/acosh.rst", "elements/oneMKL/source/domains/vm/acospi.rst", "elements/oneMKL/source/domains/vm/add.rst", "elements/oneMKL/source/domains/vm/arg.rst", "elements/oneMKL/source/domains/vm/asin.rst", "elements/oneMKL/source/domains/vm/asinh.rst", "elements/oneMKL/source/domains/vm/asinpi.rst", "elements/oneMKL/source/domains/vm/atan.rst", "elements/oneMKL/source/domains/vm/atan2.rst", "elements/oneMKL/source/domains/vm/atan2pi.rst", "elements/oneMKL/source/domains/vm/atanh.rst", "elements/oneMKL/source/domains/vm/atanpi.rst", "elements/oneMKL/source/domains/vm/bibliography.rst", "elements/oneMKL/source/domains/vm/cbrt.rst", "elements/oneMKL/source/domains/vm/cdfnorm.rst", "elements/oneMKL/source/domains/vm/cdfnorminv.rst", "elements/oneMKL/source/domains/vm/ceil.rst", "elements/oneMKL/source/domains/vm/cis.rst", "elements/oneMKL/source/domains/vm/clear_status.rst", "elements/oneMKL/source/domains/vm/conj.rst", "elements/oneMKL/source/domains/vm/copysign.rst", "elements/oneMKL/source/domains/vm/cos.rst", "elements/oneMKL/source/domains/vm/cosd.rst", "elements/oneMKL/source/domains/vm/cosh.rst", "elements/oneMKL/source/domains/vm/cospi.rst", "elements/oneMKL/source/domains/vm/create_error_handler.rst", "elements/oneMKL/source/domains/vm/div.rst", "elements/oneMKL/source/domains/vm/erf.rst", "elements/oneMKL/source/domains/vm/erfc.rst", "elements/oneMKL/source/domains/vm/erfcinv.rst", "elements/oneMKL/source/domains/vm/erfinv.rst", "elements/oneMKL/source/domains/vm/exp.rst", "elements/oneMKL/source/domains/vm/exp10.rst", "elements/oneMKL/source/domains/vm/exp2.rst", "elements/oneMKL/source/domains/vm/expint1.rst", "elements/oneMKL/source/domains/vm/expm1.rst", "elements/oneMKL/source/domains/vm/fdim.rst", "elements/oneMKL/source/domains/vm/floor.rst", "elements/oneMKL/source/domains/vm/fmax.rst", "elements/oneMKL/source/domains/vm/fmin.rst", "elements/oneMKL/source/domains/vm/fmod.rst", "elements/oneMKL/source/domains/vm/frac.rst", "elements/oneMKL/source/domains/vm/get_mode.rst", "elements/oneMKL/source/domains/vm/get_status.rst", "elements/oneMKL/source/domains/vm/hypot.rst", "elements/oneMKL/source/domains/vm/inv.rst", "elements/oneMKL/source/domains/vm/invcbrt.rst", "elements/oneMKL/source/domains/vm/invsqrt.rst", "elements/oneMKL/source/domains/vm/lgamma.rst", "elements/oneMKL/source/domains/vm/linearfrac.rst", "elements/oneMKL/source/domains/vm/ln.rst", "elements/oneMKL/source/domains/vm/log10.rst", "elements/oneMKL/source/domains/vm/log1p.rst", "elements/oneMKL/source/domains/vm/log2.rst", "elements/oneMKL/source/domains/vm/logb.rst", "elements/oneMKL/source/domains/vm/maxmag.rst", "elements/oneMKL/source/domains/vm/minmag.rst", "elements/oneMKL/source/domains/vm/modf.rst", "elements/oneMKL/source/domains/vm/mul.rst", "elements/oneMKL/source/domains/vm/mulbyconj.rst", "elements/oneMKL/source/domains/vm/nearbyint.rst", "elements/oneMKL/source/domains/vm/nextafter.rst", "elements/oneMKL/source/domains/vm/pow.rst", "elements/oneMKL/source/domains/vm/pow2o3.rst", "elements/oneMKL/source/domains/vm/pow3o2.rst", "elements/oneMKL/source/domains/vm/powr.rst", "elements/oneMKL/source/domains/vm/powx.rst", "elements/oneMKL/source/domains/vm/remainder.rst", "elements/oneMKL/source/domains/vm/rint.rst", "elements/oneMKL/source/domains/vm/round.rst", "elements/oneMKL/source/domains/vm/set_status.rst", "elements/oneMKL/source/domains/vm/setmode.rst", "elements/oneMKL/source/domains/vm/sin.rst", "elements/oneMKL/source/domains/vm/sincos.rst", "elements/oneMKL/source/domains/vm/sind.rst", "elements/oneMKL/source/domains/vm/sinh.rst", "elements/oneMKL/source/domains/vm/sinpi.rst", "elements/oneMKL/source/domains/vm/special-value-notations.rst", "elements/oneMKL/source/domains/vm/sqr.rst", "elements/oneMKL/source/domains/vm/sqrt.rst", "elements/oneMKL/source/domains/vm/sub.rst", "elements/oneMKL/source/domains/vm/tan.rst", "elements/oneMKL/source/domains/vm/tand.rst", "elements/oneMKL/source/domains/vm/tanh.rst", "elements/oneMKL/source/domains/vm/tanpi.rst", "elements/oneMKL/source/domains/vm/tgamma.rst", "elements/oneMKL/source/domains/vm/trunc.rst", "elements/oneMKL/source/domains/vm/vm.rst", "elements/oneMKL/source/domains/vm/vm-exceptions.rst", "elements/oneMKL/source/domains/vm/vm-mathematical-functions.rst", "elements/oneMKL/source/domains/vm/vm-service-functions.rst", "elements/oneMKL/source/index.rst", "elements/oneTBB/source/algorithms.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range2d_cls.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range3d_cls.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range_cls.rst", "elements/oneTBB/source/algorithms/functions/collaborative_call_once_func.rst", "elements/oneTBB/source/algorithms/functions/collaborative_once_flag_cls.rst", "elements/oneTBB/source/algorithms/functions/feeder.rst", "elements/oneTBB/source/algorithms/functions/parallel_deterministic_reduce_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_for_each_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_for_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_invoke_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_cls.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_mode_enum.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/flow_control_cls.rst", "elements/oneTBB/source/algorithms/functions/parallel_reduce_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_scan_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_sort_func.rst", "elements/oneTBB/source/algorithms/functions/pre_scan_tag_and_final_scan_tag_clses.rst", "elements/oneTBB/source/algorithms/partitioners/affinity_partitioner.rst", "elements/oneTBB/source/algorithms/partitioners/auto_partitioner.rst", "elements/oneTBB/source/algorithms/partitioners/simple_partitioner.rst", "elements/oneTBB/source/algorithms/partitioners/static_partitioner.rst", "elements/oneTBB/source/algorithms/split_tags/proportional_split_cls.rst", "elements/oneTBB/source/algorithms/split_tags/split_cls.rst", "elements/oneTBB/source/configuration.rst", "elements/oneTBB/source/configuration/enabling_debugging_features.rst", "elements/oneTBB/source/configuration/feature_macros.rst", "elements/oneTBB/source/configuration/namespaces.rst", "elements/oneTBB/source/configuration/version_information.rst", "elements/oneTBB/source/containers.rst", "elements/oneTBB/source/containers/auxiliary/node_handles_cls.rst", "elements/oneTBB/source/containers/auxiliary/tbb_hash_compare_cls.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/safe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/unsafe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/accessors.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/modifiers.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_map_cls.rst", "elements/oneTBB/source/containers/concurrent_map_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_map_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_map_cls/element_access.rst", "elements/oneTBB/source/containers/concurrent_map_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_map_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_map_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_map_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_map_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_map_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_map_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_map_cls/value_compare_cls.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/value_compare_cls.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_queue_cls.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/safe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/unsafe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_set_cls.rst", "elements/oneTBB/source/containers/concurrent_set_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_set_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_set_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_set_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_set_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_set_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_set_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_set_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_set_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/element_access.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_vector_cls.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/concurrent_growth.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/element_access.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/unsafe_operations.rst", "elements/oneTBB/source/deprecated/task_arena_attach_tag.rst", "elements/oneTBB/source/flow_graph.rst", "elements/oneTBB/source/flow_graph/async_node_cls.rst", "elements/oneTBB/source/flow_graph/broadcast_node_cls.rst", "elements/oneTBB/source/flow_graph/buffer_node_cls.rst", "elements/oneTBB/source/flow_graph/composite_node_cls.rst", "elements/oneTBB/source/flow_graph/continue_msg_cls.rst", "elements/oneTBB/source/flow_graph/continue_node_cls.rst", "elements/oneTBB/source/flow_graph/copy_body_func.rst", "elements/oneTBB/source/flow_graph/dependency_flow_graph_example.rst", "elements/oneTBB/source/flow_graph/forwarding_and_buffering.rst", "elements/oneTBB/source/flow_graph/func_node_cls.rst", "elements/oneTBB/source/flow_graph/functional_node_policies.rst", "elements/oneTBB/source/flow_graph/graph_cls.rst", "elements/oneTBB/source/flow_graph/graph_node_cls.rst", "elements/oneTBB/source/flow_graph/indexer_node_cls.rst", "elements/oneTBB/source/flow_graph/input_node_cls.rst", "elements/oneTBB/source/flow_graph/input_port_func.rst", "elements/oneTBB/source/flow_graph/join_node_cls.rst", "elements/oneTBB/source/flow_graph/join_node_policies.rst", "elements/oneTBB/source/flow_graph/limiter_node_cls.rst", "elements/oneTBB/source/flow_graph/make_edge_func.rst", "elements/oneTBB/source/flow_graph/message_flow_graph_example.rst", "elements/oneTBB/source/flow_graph/multifunc_node_cls.rst", "elements/oneTBB/source/flow_graph/node_priorities.rst", "elements/oneTBB/source/flow_graph/output_port_func.rst", "elements/oneTBB/source/flow_graph/overwrite_node_cls.rst", "elements/oneTBB/source/flow_graph/predefined_concurrency_limits.rst", "elements/oneTBB/source/flow_graph/priority_queue_node_cls.rst", "elements/oneTBB/source/flow_graph/queue_node_cls.rst", "elements/oneTBB/source/flow_graph/receiver.rst", "elements/oneTBB/source/flow_graph/remove_edge_func.rst", "elements/oneTBB/source/flow_graph/reset_flags_enum.rst", "elements/oneTBB/source/flow_graph/sender.rst", "elements/oneTBB/source/flow_graph/sequencer_node_cls.rst", "elements/oneTBB/source/flow_graph/split_node_cls.rst", "elements/oneTBB/source/flow_graph/tagged_msg_cls.rst", "elements/oneTBB/source/flow_graph/write_once_node_cls.rst", "elements/oneTBB/source/identifiers.rst", "elements/oneTBB/source/info_namespace.rst", "elements/oneTBB/source/intro.rst", "elements/oneTBB/source/memory_allocation.rst", "elements/oneTBB/source/memory_allocation/c_interface_to_scalable_allocator.rst", "elements/oneTBB/source/memory_allocation/cache_aligned_allocator_cls.rst", "elements/oneTBB/source/memory_allocation/cache_aligned_resource_cls.rst", "elements/oneTBB/source/memory_allocation/scalable_allocator_cls.rst", "elements/oneTBB/source/memory_allocation/scalable_memory_resource_func.rst", "elements/oneTBB/source/memory_allocation/tbb_allocator_cls.rst", "elements/oneTBB/source/mutual_exclusion.rst", "elements/oneTBB/source/mutual_exclusion/mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/null_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/null_rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/queuing_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/queuing_rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/speculative_spin_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/speculative_spin_rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/spin_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/spin_rw_mutex_cls.rst", "elements/oneTBB/source/named_requirements.rst", "elements/oneTBB/source/named_requirements/algorithms/blocked_range_val.rst", "elements/oneTBB/source/named_requirements/algorithms/container_based_sequence.rst", "elements/oneTBB/source/named_requirements/algorithms/filter_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_each_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_func.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_index.rst", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_func.rst", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_reduction.rst", "elements/oneTBB/source/named_requirements/algorithms/par_scan_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_scan_combine.rst", "elements/oneTBB/source/named_requirements/algorithms/par_scan_func.rst", "elements/oneTBB/source/named_requirements/algorithms/range.rst", "elements/oneTBB/source/named_requirements/algorithms/splittable.rst", "elements/oneTBB/source/named_requirements/containers/container_range.rst", "elements/oneTBB/source/named_requirements/containers/hash_compare.rst", "elements/oneTBB/source/named_requirements/flow_graph/async_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/continue_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/function_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/gateway_type.rst", "elements/oneTBB/source/named_requirements/flow_graph/input_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/join_node_func_obj.rst", "elements/oneTBB/source/named_requirements/flow_graph/multifunction_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/sequencer.rst", "elements/oneTBB/source/named_requirements/mutexes/mutex.rst", "elements/oneTBB/source/named_requirements/mutexes/rw_mutex.rst", "elements/oneTBB/source/named_requirements/task_scheduler/suspend_func.rst", "elements/oneTBB/source/nested-aux-interfaces.rst", "elements/oneTBB/source/nested-depr-interfaces.rst", "elements/oneTBB/source/nested-gen-info.rst", "elements/oneTBB/source/nested-index.rst", "elements/oneTBB/source/nested-interfaces.rst", "elements/oneTBB/source/notation.rst", "elements/oneTBB/source/task_scheduler.rst", "elements/oneTBB/source/task_scheduler/attach_tag_type.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/resumable_tasks.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_group_context_cls.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_scheduler_handle_cls.rst", "elements/oneTBB/source/task_scheduler/task_arena/task_arena_cls.rst", "elements/oneTBB/source/task_scheduler/task_arena/task_scheduler_observer_cls.rst", "elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns.rst", "elements/oneTBB/source/task_scheduler/task_group/task_group_cls.rst", "elements/oneTBB/source/task_scheduler/task_group/task_group_status_enum.rst", "elements/oneTBB/source/task_scheduler/task_group/task_handle.rst", "elements/oneTBB/source/thread_local_storage.rst", "elements/oneTBB/source/thread_local_storage/combinable_cls.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/combining.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/construct_destroy_copy.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/iteration.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/safe_modifiers.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/size_and_capacity.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/unsafe_modifiers.rst", "elements/oneTBB/source/thread_local_storage/flattened2d_cls.rst", "elements/oneTBB/source/thread_safety.rst", "elements/oneTBB/source/timing.rst", "elements/oneTBB/source/timing/tick_count_cls.rst", "index.rst", "introduction.rst", "notices.rst"], "titles": ["", "Software Architecture", "&lt;no title&gt;", "Level Zero", "Definitions", "oneCCL", "Introduction", "Namespaces", "Programming Model", "Collective Operations", "Datatypes", "Error handling", "Generic Workflow", "oneCCL Concepts", "Operation Attributes", "Operation Progress Tracking", "Communication Operations", "Reductions", "Current Version of this oneCCL Specification", "Clustering", "K-Means", "K-Means initialization", "Decomposition", "Principal Components Analysis (PCA)", "Algorithms", "Nearest Neighbors (kNN)", "k-Nearest Neighbors Classification (k-NN)", "Appendix", "k-d Tree", "Bibliography", "Common type definitions", "Error handling", "Header files", "Common Interface", "Current Version of this oneDAL Specification", "Column accessor", "Row accessor", "Accessors", "Array", "CSV data source", "Data Sources", "Data management", "Homogeneous table", "Tables", "Glossary", "oneDAL", "Introduction", "Mathematical Notations", "Computational modes", "Descriptors", "End-to-end example", "Programming model", "Operations", "Supported operations", "Conventions", "Bfloat16", "Data types", "Int8", "Data model", "Memory Formats", "Memory", "Memory Descriptors and Objects", "Execution Model", "Data Model", "Common Definitions", "Graph extension", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "HardSigmoid", "HardSigmoidBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "MaxPool", "MaxPoolBackward", "Maximum", "Minimum", "Mish", "MishBackward", "Multiply", "PReLU", "PReLUBackward", "Pow", "Quantize", "ReLU", "ReLUBackward", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "Reorder", "Round", "Select", "Sigmoid", "SigmoidBackward", "SoftPlus", "SoftPlusBackward", "SoftMax", "SoftMaxBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "Operation Set", "Programming Model", "oneDNN", "Introduction", "Attributes", "Post-ops", "Batch Normalization", "Binary", "Concat", "Convolution and Deconvolution", "Elementwise", "Common Definitions", "Primitives", "Inner Product", "Layer normalization", "Local Response Normalization", "Matrix Multiplication", "Pooling", "Prelu", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sum", "Namespaces", "oneDPL", "Parallel API", "SYCL Kernels API", "oneMKL Appendix", "oneMKL Architecture", "asum", "axpby", "axpy", "axpy_batch", "BLAS Routines", "BLAS Level 1 Routines", "BLAS Level 2 Routines", "BLAS Level 3 Routines", "BLAS-like Extensions", "copy", "copy_batch", "dgmm_batch", "dot", "dotc", "dotu", "gbmv", "gemm", "gemm_batch", "gemm_bias", "gemmt", "gemv", "gemv_batch", "ger", "gerc", "geru", "hbmv", "hemm", "hemv", "her", "her2", "her2k", "herk", "hpmv", "hpr", "hpr2", "iamax", "iamin", "imatcopy", "imatcopy_batch", "nrm2", "omatadd", "omatadd_batch", "omatcopy", "omatcopy2", "omatcopy_batch", "rot", "rotg", "rotm", "rotmg", "sbmv", "scal", "sdsdot", "spmv", "spr", "spr2", "swap", "symm", "symv", "syr", "syr2", "syr2k", "syrk", "syrk_batch", "tbmv", "tbsv", "tpmv", "tpsv", "trmm", "trmv", "trsm", "trsm_batch", "trsv", "compute_backward", "compute_forward", "Configuration of Data Layouts", "Data storage", "Workspace placement", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">descriptor</span></code> class", "Discrete Fourier Transform Functions", "DFT-related scoped enumeration types", "oneMKL Domains", "gebrd", "gebrd_scratchpad_size", "geqrf", "geqrf_batch", "geqrf_batch_scratchpad_size", "geqrf_scratchpad_size", "gerqf", "gerqf_scratchpad_size", "gesvd", "gesvd_scratchpad_size", "getrf", "getrf_batch", "getrf_batch_scratchpad_size", "getrf_scratchpad_size", "getri", "getri_batch", "getri_batch_scratchpad_size", "getri_scratchpad_size", "getrs", "getrs_batch", "getrs_batch_scratchpad_size", "getrs_scratchpad_size", "heevd", "heevd_scratchpad_size", "hegvd", "hegvd_scratchpad_size", "hetrd", "hetrd_scratchpad_size", "hetrf", "hetrf_scratchpad_size", "LAPACK Routines", "orgbr", "orgbr_scratchpad_size", "orgqr", "orgqr_batch", "orgqr_batch_scratchpad_size", "orgqr_scratchpad_size", "orgtr", "orgtr_scratchpad_size", "ormqr", "ormqr_scratchpad_size", "ormrq", "ormrq_scratchpad_size", "ormtr", "ormtr_scratchpad_size", "potrf", "potrf_batch", "potrf_batch_scratchpad_size", "potrf_scratchpad_size", "potri", "potri_scratchpad_size", "potrs", "potrs_batch", "potrs_batch_scratchpad_size", "potrs_scratchpad_size", "syevd", "syevd_scratchpad_size", "sygvd", "sygvd_scratchpad_size", "sytrd", "sytrd_scratchpad_size", "sytrf", "sytrf_scratchpad_size", "trtrs", "trtrs_scratchpad_size", "ungbr", "ungbr_scratchpad_size", "ungqr", "ungqr_batch", "ungqr_batch_scratchpad_size", "ungqr_scratchpad_size", "ungtr", "ungtr_scratchpad_size", "unmqr", "unmqr_scratchpad_size", "unmrq", "unmrq_scratchpad_size", "unmtr", "unmtr_scratchpad_size", "Matrix Storage", "Bibliography", "Device Distributions", "Distributions Template Parameter Method", "Device Engines (Basic Random Number Generators)", "bernoulli", "bits", "exponential", "gaussian", "generate", "Device Generate Routines", "lognormal", "mcg31m1", "mcg59", "mrg32k3a", "philox4x32x10", "poisson", "skip_ahead", "uniform_bits", "uniform (Continuous)", "uniform (Discrete)", "oneMKL RNG Device Usage Model", "Random Number Generators Device Routines", "Device Service Routines", "Host Distributions", "Distributions Template Parameter Method", "Host Engines (Basic Random Number Generators)", "Host Generate Routine", "ars5", "bernoulli", "beta", "binomial", "bits", "cauchy", "chi_square", "default_engine", "exponential", "gamma", "gaussian", "gaussian_mv", "generate", "geometric", "gumbel", "hypergeometric", "laplace", "leapfrog", "lognormal", "mcg31m1", "mcg59", "mrg32k3a", "mt19937", "mt2203", "multinomial", "negative_binomial", "niederreiter", "nondeterministic", "philox4x32x10", "poisson", "poisson_v", "r250", "rayleigh", "sfmt19937", "skip_ahead", "sobol", "uniform (continuous)", "uniform (discrete)", "uniform_bits", "weibull", "wichmann_hill", "oneMKL RNG Host Usage Model", "Random Number Generators Host Routines", "Host Service Routines", "Random Number Generators (RNG)", "Sparse storage formats", "gemm", "optimize_gemm", "gemv", "gemvdot", "optimize_gemv", "init_matrix_handle", "release_matrix_handle", "set_coo_data", "set_csr_data", "Sparse BLAS", "Supported Types", "symv", "optimize_symv", "trmv", "optimize_trmv", "trsv", "optimize_trsv", "central_moment", "central_moment with provided mean", "central_sum", "central_sum with provided mean", "dataset", "kurtosis", "kurtosis with provided mean", "make_dataset", "max", "mean", "min", "min_max", "Summary Statistics", "raw_moment", "raw_sum", "Summary Statistics Routines", "Service Routines", "skewness", "skewness with provided mean", "oneMKL Summary Statistics Usage Model", "variation", "variation with provided mean", "Scalar Arguments in BLAS", "abs", "acos", "acosh", "acospi", "add", "arg", "asin", "asinh", "asinpi", "atan", "atan2", "atan2pi", "atanh", "atanpi", "Bibliography", "cbrt", "cdfnorm", "cdfnorminv", "ceil", "cis", "clear_status", "conj", "copysign", "cos", "cosd", "cosh", "cospi", "create_error_handler", "div", "erf", "erfc", "erfcinv", "erfinv", "exp", "exp10", "exp2", "expint1", "expm1", "fdim", "floor", "fmax", "fmin", "fmod", "frac", "get_mode", "get_status", "hypot", "inv", "invcbrt", "invsqrt", "lgamma", "linearfrac", "ln", "log10", "log1p", "log2", "logb", "maxmag", "minmag", "modf", "mul", "mulbyconj", "nearbyint", "nextafter", "pow", "pow2o3", "pow3o2", "powr", "powx", "remainder", "rint", "round", "set_status", "set_mode", "sin", "sincos", "sind", "sinh", "sinpi", "Special Value Notations", "sqr", "sqrt", "sub", "tan", "tand", "tanh", "tanpi", "tgamma", "trunc", "Vector Math", "Exceptions", "VM Mathematical Functions", "VM Service Functions", "oneMKL", "Algorithms", "blocked_range2d", "blocked_range3d", "blocked_range", "collaborative_call_once", "collaborative_once_flag", "feeder", "parallel_deterministic_reduce", "parallel_for_each", "parallel_for", "parallel_invoke", "parallel_pipeline", "filter", "filter_mode", "flow_control", "parallel_reduce", "parallel_scan", "parallel_sort", "pre_scan_tag and final_scan_tag", "affinity_partitioner", "auto_partitioner", "simple_partitioner", "static_partitioner", "proportional split", "split", "Configuration", "Enabling Debugging Features", "Feature Macros", "Namespaces", "Version Information", "Containers", "Node handles", "tbb_hash_compare", "concurrent_bounded_queue", "Construction, destruction, copying", "Deduction guides", "Iterators", "Non-member binary comparisons", "Non-member swap", "Concurrently safe member functions", "Concurrently unsafe member functions", "concurrent_hash_map", "accessor and const_accessor", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Concurrently safe modifiers", "Non-member binary comparisons", "Non-member swap", "Parallel iteration", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_map", "Construction, destruction, copying", "Deduction guides", "Element access", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "value_compare", "concurrent_multimap", "Construction, destruction, copying", "Deduction guides", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "value_compare", "concurrent_multiset", "Construction, destruction, copying", "Deduction guides", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_priority_queue", "Construction, destruction, copying", "Deduction guides", "Non-member binary comparisons", "Non-member swap", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_queue", "Construction, destruction, copying", "Deduction guides", "Iterators", "Non-member binary comparisons", "Non-member swap", "Concurrently safe member functions", "Concurrently unsafe member functions", "concurrent_set", "Construction, destruction, copying", "Deduction guides", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_map", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Element access", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_multimap", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_multiset", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_set", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_vector", "Concurrent growth", "Construction, destruction, copying", "Deduction guides", "Element access", "Iterators", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Parallel iteration", "Size and capacity", "Concurrently unsafe operations", "task_arena::attach", "Flow Graph", "async_node", "broadcast_node", "buffer_node", "composite_node", "continue_msg", "continue_node", "copy_body", "Dependency Flow Graph Example", "Forwarding and Buffering", "function_node", "Function Nodes Policies", "graph", "graph_node", "indexer_node", "input_node", "input_port", "join_node", "join_node Policies", "limiter_node", "make_edge", "Message Flow Graph Example", "multifunction_node", "Nodes Priorities", "output_port", "overwrite_node", "Predefined Concurrency Limits", "priority_queue_node", "queue_node", "receiver", "remove_edge", "reset_flags Enumeration", "sender", "sequencer_node", "split_node", "tagged_msg", "write_once_node", "Identifiers", "info Namespace", "Introduction", "Memory Allocation", "C Interface to Scalable Allocator", "cache_aligned_allocator", "cache_aligned_resource", "scalable_allocator", "scalable_memory_resource", "tbb_allocator", "Mutual Exclusion", "mutex", "null_mutex", "null_rw_mutex", "queuing_mutex", "queuing_rw_mutex", "rw_mutex", "speculative_spin_mutex", "speculative_spin_rw_mutex", "spin_mutex", "spin_rw_mutex", "Named Requirements", "BlockedRangeValue", "ContainerBasedSequence", "FilterBody", "ParallelForBody", "ParallelForEachBody", "ParallelForFunc", "ParallelForIndex", "ParallelReduceBody", "ParallelReduceFunc", "ParallelReduceReduction", "ParallelScanBody", "ParallelScanCombine", "ParallelScanFunc", "Range", "Splittable", "ContainerRange", "HashCompare", "AsyncNodeBody", "ContinueNodeBody", "FunctionNodeBody", "GatewayType", "InputNodeBody", "JoinNodeFunctionObject", "MultifunctionNodeBody", "Sequencer", "Mutex", "ReaderWriterMutex", "SuspendFunc", "oneTBB Auxiliary Interfaces", "oneTBB Deprecated Interfaces", "General Information", "oneTBB", "oneTBB Interfaces", "Notational Conventions", "Task Scheduler", "attach tag type", "global_control", "Resumable tasks", "task_group_context", "task_scheduler_handle", "task_arena", "task_scheduler_observer", "this_task_arena", "task_group", "task_group_status", "task_handle", "Thread Local Storage", "combinable", "enumerable_thread_specific", "Combining", "Construction, destruction, copying", "Iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "flattened2d", "Thread Safety", "Timing", "tick_count class", "oneAPI Specification", "Introduction", "Legal Notices and Disclaimers"], "terms": {"dpc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "librari": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "rev": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "collect": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "commun": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 149, 150, 151, 152, 153, 154, 160, 161, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "analyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "oned": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "daal": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "deep": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "neural": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "network": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "level": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "zero": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "thread": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864], "build": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "block": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "math": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "kernel": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u00bd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u00bc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u215b": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u00be": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u215c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u215d": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u215e": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "_": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u00b5": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u03c9": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u00aa": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u00ba": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u00b9": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u00b2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "\u00b3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "intel": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "media": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "develop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "kit": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "provid": [1, 3, 6, 9, 11, 13, 14, 15, 32, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 49, 50, 56, 57, 59, 61, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 158, 160, 161, 163, 164, 165, 170, 171, 175, 176, 177, 178, 179, 180, 185, 189, 219, 222, 225, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 268, 273, 277, 281, 288, 292, 308, 309, 314, 315, 321, 344, 345, 346, 347, 348, 349, 352, 357, 359, 360, 361, 365, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 393, 394, 398, 399, 401, 404, 405, 406, 407, 408, 416, 424, 439, 447, 448, 454, 478, 479, 481, 482, 529, 530, 531, 533, 534, 538, 539, 541, 549, 556, 558, 561, 565, 569, 578, 579, 582, 583, 584, 590, 591, 592, 593, 596, 597, 603, 604, 605, 618, 619, 620, 632, 633, 634, 645, 646, 647, 653, 654, 655, 661, 662, 663, 674, 676, 677, 689, 691, 692, 703, 705, 706, 717, 719, 720, 731, 733, 734, 744, 745, 750, 754, 759, 762, 764, 766, 767, 771, 774, 777, 783, 784, 785, 786, 788, 790, 791, 798, 799, 816, 818, 819, 827, 837, 840, 843, 849, 850, 851, 855, 858, 860, 861, 862, 863, 864], "common": [1, 4, 5, 14, 32, 43, 45, 49, 51, 52, 65, 150, 153, 154, 161, 256, 260, 353, 354, 355, 356, 358, 366, 369, 388, 389, 390, 391, 392, 397, 400, 402, 409, 506, 764, 774, 849, 864], "interfac": [1, 2, 3, 13, 37, 40, 41, 44, 45, 46, 49, 65, 180, 185, 255, 259, 261, 292, 358, 547, 560, 578, 674, 689, 703, 717, 745, 767, 782, 783, 784, 820, 828, 834, 838, 841, 862, 863], "across": [1, 2, 3, 9, 41, 46, 48, 151, 160, 163, 165, 180, 386, 550, 551, 565, 571, 750, 816, 849, 851, 852, 862, 863], "rang": [1, 31, 32, 33, 35, 36, 37, 38, 43, 55, 57, 78, 85, 87, 88, 118, 122, 123, 124, 125, 126, 127, 128, 143, 154, 177, 178, 255, 258, 260, 363, 409, 475, 482, 500, 519, 523, 527, 546, 550, 551, 552, 556, 558, 564, 565, 568, 569, 570, 571, 572, 573, 590, 592, 595, 603, 604, 616, 618, 630, 632, 644, 661, 662, 673, 674, 676, 688, 689, 702, 703, 716, 717, 719, 730, 731, 777, 802, 803, 806, 809, 810, 811, 813, 815, 817, 818, 835, 851, 854, 858], "parallel": [1, 2, 44, 45, 153, 175, 176, 258, 261, 342, 367, 410, 553, 557, 558, 559, 560, 562, 564, 565, 569, 570, 571, 590, 603, 618, 632, 661, 674, 689, 703, 717, 731, 744, 761, 767, 777, 783, 798, 799, 816, 818, 835, 837, 840, 842, 843, 850, 851, 860, 862, 863], "acceler": [1, 2, 29, 41, 150, 164, 548, 862, 863], "see": [1, 9, 13, 20, 21, 23, 26, 38, 41, 42, 43, 44, 49, 59, 61, 62, 101, 152, 153, 154, 155, 159, 160, 163, 165, 166, 171, 177, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 290, 293, 294, 307, 308, 323, 327, 328, 346, 347, 348, 349, 350, 352, 357, 359, 360, 361, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 393, 394, 398, 399, 401, 403, 405, 406, 408, 415, 444, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 550, 551, 552, 556, 558, 560, 563, 564, 565, 567, 568, 570, 571, 572, 573, 577, 674, 676, 688, 689, 691, 702, 703, 705, 716, 717, 719, 730, 731, 733, 742, 743, 748, 752, 758, 760, 768, 769, 779, 784, 787, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 821, 827, 828, 829, 830, 838, 839, 842, 843, 846, 863], "figur": [1, 171, 386, 403, 471, 472, 484, 485, 486, 487, 765], "below": [1, 9, 12, 13, 32, 37, 41, 49, 50, 56, 59, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 155, 158, 159, 162, 163, 165, 166, 172, 180, 199, 255, 256, 257, 259, 262, 264, 265, 288, 305, 306, 321, 339, 343, 365, 422, 423, 454, 460, 475, 500, 506, 527, 547, 556, 558, 564, 565, 575, 578, 674, 676, 688, 689, 691, 702, 703, 705, 716, 717, 719, 730, 733, 742, 752, 753, 755, 763, 765, 785, 802, 837, 864], "programm": [1, 38, 180, 863], "us": [1, 3, 6, 9, 10, 11, 12, 13, 14, 15, 20, 21, 23, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 68, 71, 77, 82, 83, 85, 86, 87, 88, 90, 91, 99, 100, 101, 102, 110, 111, 114, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 139, 141, 142, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 187, 189, 192, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 213, 218, 219, 221, 222, 223, 224, 225, 237, 243, 244, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 292, 293, 295, 296, 299, 300, 301, 303, 305, 306, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 357, 359, 360, 361, 363, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395, 398, 399, 401, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 460, 471, 472, 478, 479, 481, 484, 485, 486, 487, 506, 519, 525, 529, 530, 531, 533, 538, 539, 541, 545, 548, 550, 551, 552, 554, 555, 556, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 578, 580, 581, 582, 583, 584, 588, 590, 591, 592, 593, 597, 603, 604, 605, 612, 614, 617, 618, 619, 620, 626, 628, 631, 632, 633, 634, 640, 642, 645, 646, 647, 650, 653, 654, 655, 659, 661, 662, 663, 669, 671, 674, 675, 676, 677, 686, 689, 690, 691, 692, 700, 703, 704, 705, 706, 714, 717, 718, 719, 720, 728, 731, 732, 733, 734, 743, 744, 745, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 761, 762, 763, 765, 766, 767, 770, 777, 778, 779, 780, 781, 782, 783, 785, 786, 788, 789, 790, 792, 793, 794, 797, 798, 800, 802, 804, 809, 816, 817, 818, 819, 825, 828, 836, 837, 838, 839, 840, 841, 843, 844, 845, 848, 850, 851, 852, 853, 858, 861, 863, 864], "sycl": [1, 12, 13, 29, 35, 36, 38, 40, 42, 44, 50, 52, 53, 61, 62, 151, 160, 176, 177, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 350, 353, 354, 355, 356, 362, 363, 369, 381, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 404, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 864], "both": [1, 3, 6, 38, 44, 46, 49, 55, 58, 59, 61, 63, 64, 68, 70, 71, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 101, 102, 110, 111, 114, 118, 144, 150, 153, 155, 159, 163, 173, 180, 211, 219, 222, 224, 225, 241, 255, 256, 268, 270, 363, 411, 415, 488, 547, 552, 556, 565, 748, 752, 765, 785, 845], "The": [1, 3, 6, 7, 9, 10, 13, 14, 15, 20, 21, 23, 24, 26, 29, 30, 31, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 568, 569, 570, 571, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 588, 590, 591, 592, 593, 595, 600, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 618, 619, 620, 621, 628, 629, 630, 631, 632, 633, 634, 635, 642, 643, 644, 645, 646, 647, 650, 651, 652, 653, 654, 655, 656, 659, 661, 662, 663, 664, 671, 672, 673, 674, 676, 677, 680, 686, 687, 688, 689, 691, 692, 694, 700, 701, 702, 703, 705, 706, 708, 714, 715, 716, 717, 719, 720, 722, 728, 729, 730, 731, 733, 734, 735, 736, 742, 743, 744, 745, 746, 747, 748, 750, 752, 753, 754, 755, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 848, 850, 851, 852, 853, 854, 856, 857, 858, 860, 861, 863, 864], "capabl": [1, 3, 6, 51, 63, 64, 177, 777, 783], "ar": [1, 3, 9, 11, 13, 20, 23, 26, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 79, 80, 81, 82, 83, 84, 101, 102, 107, 108, 109, 122, 123, 124, 125, 126, 127, 128, 131, 141, 142, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 228, 229, 230, 233, 235, 237, 238, 240, 241, 242, 243, 245, 247, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 268, 270, 271, 272, 273, 280, 281, 284, 285, 286, 287, 288, 290, 292, 293, 308, 309, 313, 314, 315, 317, 318, 319, 320, 321, 323, 325, 326, 327, 330, 341, 343, 344, 348, 349, 353, 356, 360, 361, 363, 365, 366, 367, 369, 371, 373, 388, 392, 395, 397, 400, 402, 404, 405, 406, 409, 411, 413, 414, 415, 416, 417, 418, 419, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 459, 461, 464, 465, 471, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 500, 505, 506, 509, 515, 519, 522, 523, 524, 526, 527, 529, 530, 531, 532, 533, 534, 537, 538, 539, 541, 542, 544, 546, 547, 548, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 567, 571, 576, 577, 580, 581, 582, 584, 588, 590, 591, 593, 598, 600, 603, 605, 609, 613, 614, 616, 617, 618, 620, 622, 623, 627, 628, 630, 631, 632, 634, 636, 637, 641, 642, 644, 645, 647, 653, 655, 661, 663, 665, 666, 670, 671, 673, 674, 677, 682, 685, 686, 688, 689, 690, 692, 695, 696, 699, 700, 702, 703, 704, 706, 709, 710, 713, 714, 716, 717, 720, 724, 727, 728, 730, 731, 734, 737, 740, 744, 745, 746, 747, 748, 752, 753, 754, 755, 756, 758, 759, 761, 762, 763, 765, 766, 767, 769, 772, 775, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 790, 798, 799, 802, 803, 807, 809, 816, 828, 829, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 850, 851, 852, 853, 854, 858, 859, 861, 863, 864], "determin": [1, 26, 64, 150, 158, 177, 207, 237, 248, 258, 259, 260, 263, 266, 267, 269, 271, 274, 275, 276, 277, 278, 279, 282, 283, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 309, 310, 312, 315, 316, 318, 320, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 385, 550, 551, 552, 566, 674, 689, 703, 717, 761, 763, 771, 777, 779, 807, 845], "which": [1, 9, 10, 13, 14, 26, 30, 31, 32, 34, 35, 36, 38, 41, 42, 43, 44, 46, 55, 57, 59, 61, 62, 63, 64, 69, 78, 82, 85, 87, 88, 101, 102, 103, 105, 106, 118, 122, 123, 124, 125, 126, 127, 128, 136, 137, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 186, 187, 188, 197, 219, 222, 225, 255, 258, 262, 265, 284, 286, 295, 296, 308, 317, 319, 329, 330, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 393, 394, 398, 399, 401, 403, 405, 406, 407, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 478, 479, 481, 482, 529, 530, 531, 533, 538, 539, 541, 546, 550, 551, 552, 553, 555, 562, 565, 566, 570, 572, 578, 582, 590, 591, 592, 595, 597, 603, 604, 614, 616, 618, 619, 622, 630, 632, 633, 636, 644, 645, 653, 661, 662, 671, 674, 675, 676, 679, 686, 689, 690, 691, 693, 695, 702, 703, 704, 705, 707, 709, 716, 717, 718, 719, 721, 728, 731, 745, 748, 753, 755, 758, 759, 761, 763, 765, 767, 775, 786, 787, 788, 790, 802, 803, 807, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 828, 837, 842, 843, 844, 845, 849, 854, 860, 861], "system": [1, 2, 13, 32, 51, 62, 150, 152, 153, 172, 180, 187, 245, 247, 251, 252, 261, 272, 273, 280, 281, 290, 292, 313, 314, 323, 325, 353, 388, 392, 424, 430, 575, 576, 782, 785, 862, 863], "abstract": [1, 3, 13, 31, 44, 46, 49, 52, 59, 60, 62, 150, 152, 161, 180, 784], "devic": [1, 2, 3, 4, 5, 6, 9, 12, 29, 31, 41, 44, 46, 48, 50, 62, 150, 151, 152, 176, 177, 178, 255, 256, 258, 259, 263, 265, 266, 267, 268, 269, 271, 273, 274, 275, 277, 278, 279, 281, 282, 283, 285, 287, 289, 291, 294, 296, 297, 298, 300, 302, 304, 306, 308, 309, 310, 312, 314, 315, 316, 318, 320, 322, 324, 326, 328, 330, 331, 332, 334, 336, 338, 340, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 396, 410, 413, 415, 417, 418, 426, 428, 430, 454, 545, 548, 862], "A": [1, 2, 9, 13, 20, 21, 23, 28, 30, 32, 38, 39, 40, 41, 43, 44, 47, 48, 49, 52, 59, 61, 62, 64, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 99, 100, 108, 109, 118, 122, 123, 124, 125, 126, 127, 128, 143, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 225, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 275, 276, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 295, 298, 299, 305, 307, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 332, 333, 339, 341, 342, 356, 362, 367, 372, 384, 391, 397, 402, 410, 414, 415, 416, 417, 418, 422, 423, 426, 428, 430, 451, 454, 482, 549, 550, 551, 552, 556, 558, 560, 561, 562, 564, 565, 566, 569, 570, 575, 580, 743, 744, 745, 746, 747, 748, 750, 752, 754, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 783, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 842, 843, 844, 845, 846, 847, 850, 851, 852, 854, 855, 858, 861, 862, 863], "i": [1, 3, 9, 10, 11, 12, 13, 15, 18, 20, 21, 23, 26, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 70, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 131, 136, 137, 141, 142, 143, 144, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 548, 550, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 573, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 606, 608, 609, 610, 612, 614, 615, 616, 617, 618, 619, 622, 623, 624, 626, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 640, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 665, 666, 667, 669, 671, 672, 673, 674, 675, 676, 678, 679, 681, 682, 686, 687, 688, 689, 690, 691, 693, 695, 696, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 765, 766, 767, 769, 771, 772, 773, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 807, 809, 813, 816, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 829, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 850, 851, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "compris": [1, 176, 384, 732], "host": [1, 3, 9, 11, 12, 13, 31, 40, 44, 52, 61, 150, 177, 258, 362, 363, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 413, 454, 545, 548], "typic": [1, 38, 44, 46, 47, 50, 51, 52, 57, 61, 107, 148, 150, 154, 155, 164, 169, 172, 173, 178, 261, 362, 363, 410, 411, 451, 552, 558, 564, 565, 580, 745, 816, 844], "multi": [1, 46, 68, 86, 110, 111, 114, 141, 144, 152, 255, 259, 261, 392, 436, 444, 748, 764, 774, 783, 863], "core": [1, 153, 180, 782, 783, 843, 863], "cpu": [1, 13, 44, 61, 62, 152, 178, 180, 410, 548, 783, 863], "one": [1, 3, 6, 9, 13, 20, 21, 23, 30, 37, 38, 40, 41, 42, 43, 44, 46, 49, 52, 55, 57, 59, 61, 62, 63, 64, 78, 83, 85, 87, 88, 115, 116, 118, 122, 123, 124, 125, 126, 127, 128, 129, 131, 142, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 174, 177, 178, 180, 188, 190, 191, 196, 197, 198, 199, 200, 201, 202, 207, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 301, 303, 305, 335, 337, 339, 341, 414, 415, 416, 417, 418, 419, 421, 426, 427, 428, 429, 430, 431, 454, 477, 482, 518, 524, 546, 550, 551, 556, 558, 560, 562, 564, 565, 598, 609, 622, 623, 630, 636, 637, 666, 682, 695, 696, 702, 709, 710, 724, 731, 743, 744, 745, 753, 754, 761, 762, 763, 765, 766, 767, 779, 780, 785, 804, 805, 807, 836, 839, 841, 842, 843, 850, 852, 861], "more": [1, 9, 13, 20, 21, 23, 26, 29, 40, 44, 48, 49, 52, 53, 55, 57, 59, 61, 63, 131, 142, 150, 151, 152, 153, 154, 155, 158, 161, 165, 171, 173, 177, 179, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 261, 342, 415, 416, 469, 482, 556, 558, 564, 565, 571, 577, 741, 744, 766, 785, 786, 787, 816, 826, 836, 842, 859], "gpu": [1, 3, 13, 44, 50, 62, 151, 152, 180, 344, 548, 863], "fpga": [1, 3, 548, 863], "other": [1, 3, 9, 11, 12, 13, 30, 31, 32, 38, 39, 40, 43, 44, 49, 51, 52, 54, 56, 59, 61, 63, 64, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 164, 165, 166, 169, 171, 172, 173, 177, 178, 219, 222, 225, 228, 229, 236, 253, 254, 255, 258, 259, 260, 284, 317, 341, 369, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 404, 409, 416, 419, 421, 422, 423, 427, 429, 431, 439, 477, 544, 546, 548, 553, 556, 562, 565, 568, 575, 580, 583, 585, 588, 589, 592, 595, 596, 597, 598, 602, 604, 608, 609, 614, 616, 619, 622, 623, 628, 630, 633, 636, 637, 642, 644, 646, 650, 652, 654, 656, 659, 660, 662, 665, 666, 671, 673, 675, 676, 681, 682, 686, 688, 690, 691, 695, 696, 700, 702, 704, 705, 709, 710, 714, 716, 718, 719, 723, 724, 728, 730, 732, 733, 735, 742, 743, 744, 748, 753, 755, 758, 761, 766, 767, 778, 785, 787, 799, 816, 829, 837, 840, 842, 843, 846, 850, 851, 853, 855, 857, 864], "processor": [1, 44, 158, 392, 786, 788, 798, 799], "serv": [1, 9, 14, 44, 49, 177, 756, 779], "can": [1, 3, 9, 11, 20, 21, 23, 26, 30, 32, 35, 36, 38, 41, 43, 44, 46, 49, 50, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 86, 87, 88, 101, 103, 105, 107, 110, 111, 114, 131, 142, 144, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 180, 198, 224, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 347, 349, 359, 367, 369, 373, 395, 404, 407, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 454, 478, 479, 481, 482, 491, 518, 529, 530, 531, 533, 538, 539, 541, 544, 550, 551, 552, 553, 555, 557, 558, 559, 561, 562, 564, 565, 569, 571, 575, 576, 577, 578, 582, 585, 588, 589, 590, 595, 596, 597, 601, 602, 603, 608, 614, 615, 616, 618, 622, 628, 629, 630, 632, 636, 642, 643, 644, 645, 650, 652, 653, 656, 659, 660, 661, 665, 671, 672, 673, 674, 675, 679, 681, 686, 687, 688, 689, 690, 693, 695, 700, 701, 702, 703, 704, 707, 709, 714, 715, 716, 717, 718, 721, 723, 728, 729, 730, 731, 732, 735, 741, 742, 744, 745, 747, 748, 750, 753, 754, 755, 756, 757, 758, 759, 761, 763, 765, 766, 769, 770, 772, 775, 777, 779, 780, 783, 786, 798, 799, 802, 803, 804, 807, 809, 813, 816, 817, 818, 829, 836, 839, 840, 843, 844, 845, 846, 850, 851, 853, 855, 857, 859, 861, 863], "also": [1, 3, 9, 13, 30, 57, 59, 63, 64, 103, 150, 152, 153, 154, 155, 158, 160, 161, 165, 169, 175, 177, 178, 179, 180, 253, 254, 255, 258, 259, 261, 286, 319, 363, 365, 367, 395, 404, 411, 414, 421, 550, 551, 552, 556, 557, 558, 560, 561, 563, 564, 565, 568, 570, 571, 572, 573, 598, 682, 724, 742, 743, 744, 745, 748, 752, 754, 758, 760, 761, 763, 766, 767, 768, 777, 779, 783, 786, 794, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 821, 827, 828, 829, 830, 838, 839, 842, 843, 845, 849, 864], "target": [1, 51, 88, 150, 153, 177, 258, 416, 459, 480, 482, 483, 488, 505, 515, 519, 532, 537, 542], "each": [1, 9, 13, 20, 21, 23, 26, 28, 37, 40, 43, 44, 48, 49, 51, 52, 53, 56, 57, 59, 61, 63, 64, 79, 80, 81, 83, 122, 123, 124, 125, 126, 127, 128, 131, 141, 150, 152, 153, 156, 158, 162, 166, 167, 170, 171, 172, 174, 177, 178, 180, 184, 191, 198, 202, 219, 222, 225, 228, 236, 243, 251, 255, 256, 261, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 341, 343, 347, 359, 365, 367, 373, 402, 407, 414, 416, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 453, 473, 482, 494, 495, 496, 497, 498, 506, 511, 512, 513, 514, 517, 520, 521, 522, 524, 525, 526, 543, 546, 550, 551, 552, 556, 557, 558, 559, 560, 564, 569, 570, 578, 588, 596, 597, 598, 608, 609, 614, 622, 623, 628, 636, 637, 642, 650, 659, 665, 666, 671, 681, 682, 686, 695, 696, 700, 709, 710, 714, 723, 724, 728, 731, 732, 735, 744, 748, 750, 752, 753, 755, 758, 761, 762, 765, 777, 778, 785, 799, 839, 841, 842, 843, 844, 849, 850, 852, 853, 855, 863], "ha": [1, 15, 26, 28, 38, 41, 44, 47, 49, 54, 55, 57, 59, 61, 63, 64, 101, 102, 103, 150, 151, 152, 155, 156, 177, 180, 198, 216, 217, 219, 222, 224, 225, 258, 270, 272, 273, 290, 311, 312, 313, 316, 323, 348, 356, 367, 369, 391, 392, 397, 414, 439, 454, 459, 478, 479, 481, 497, 499, 506, 515, 519, 523, 524, 528, 529, 530, 531, 533, 537, 538, 539, 541, 550, 551, 552, 554, 556, 557, 564, 565, 578, 696, 710, 731, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 754, 758, 759, 761, 763, 766, 767, 769, 771, 772, 775, 778, 780, 785, 786, 788, 790, 802, 816, 817, 823, 839, 841, 843, 845, 848, 850, 851], "an": [1, 7, 9, 10, 11, 12, 13, 14, 15, 20, 21, 23, 26, 28, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 362, 386, 404, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 446, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 552, 554, 556, 558, 560, 561, 562, 564, 565, 566, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 580, 582, 583, 584, 585, 590, 591, 592, 593, 595, 596, 597, 603, 604, 605, 607, 608, 612, 614, 616, 618, 619, 620, 621, 622, 626, 628, 630, 632, 633, 634, 635, 636, 640, 642, 644, 645, 646, 647, 653, 654, 655, 656, 661, 662, 663, 664, 665, 669, 671, 673, 674, 675, 676, 677, 680, 681, 682, 686, 688, 689, 690, 691, 692, 694, 695, 696, 700, 702, 703, 704, 705, 706, 708, 709, 710, 714, 716, 717, 718, 719, 720, 722, 723, 724, 728, 730, 731, 732, 733, 734, 736, 737, 743, 744, 745, 746, 747, 748, 749, 750, 754, 755, 756, 758, 759, 761, 762, 763, 764, 766, 769, 770, 771, 772, 774, 775, 777, 778, 779, 780, 783, 784, 785, 786, 788, 790, 792, 797, 798, 799, 800, 802, 804, 805, 807, 809, 813, 816, 817, 818, 819, 820, 823, 828, 829, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 855, 858, 860, 861, 862, 863, 864], "associ": [1, 9, 13, 24, 26, 28, 38, 61, 62, 63, 156, 157, 159, 167, 168, 169, 172, 173, 174, 177, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 564, 565, 580, 581, 588, 590, 592, 603, 612, 618, 626, 640, 659, 669, 674, 684, 689, 698, 712, 726, 733, 755, 756, 835, 841, 843, 846, 848, 850, 852], "command": [1, 3, 152, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 576, 785, 836], "queue": [1, 3, 12, 13, 35, 36, 38, 40, 42, 43, 50, 52, 53, 62, 151, 152, 177, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 362, 363, 369, 386, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 403, 404, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 547, 645, 745, 753, 754, 762, 765, 766, 835], "applic": [1, 2, 6, 30, 32, 37, 41, 44, 46, 57, 151, 153, 158, 178, 180, 255, 259, 365, 391, 400, 422, 423, 544, 548, 560, 565, 578, 755, 783, 807, 839, 840, 842, 843, 845, 851, 860, 862, 863], "emploi": [1, 59, 178, 783], "run": [1, 20, 21, 23, 26, 44, 49, 50, 59, 71, 150, 155, 158, 161, 165, 176, 177, 475, 500, 527, 552, 556, 558, 560, 564, 565, 578, 744, 752, 765, 785, 798, 799, 810, 813, 816, 817, 837, 839, 840, 841, 843, 845, 846, 860], "follow": [1, 6, 9, 10, 11, 13, 14, 17, 20, 23, 26, 29, 30, 31, 32, 38, 40, 41, 42, 43, 46, 47, 49, 50, 52, 54, 56, 57, 59, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 348, 349, 352, 356, 357, 358, 360, 361, 369, 370, 371, 372, 374, 375, 377, 378, 379, 382, 383, 384, 385, 387, 391, 392, 394, 397, 398, 399, 401, 402, 405, 406, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 553, 556, 557, 558, 559, 560, 562, 564, 565, 575, 580, 584, 585, 593, 595, 598, 605, 607, 616, 620, 621, 622, 630, 634, 635, 636, 644, 647, 655, 656, 663, 664, 673, 674, 675, 677, 680, 682, 688, 689, 690, 692, 694, 695, 696, 702, 703, 704, 706, 708, 709, 710, 716, 717, 718, 720, 722, 724, 730, 731, 734, 736, 751, 752, 753, 767, 775, 780, 781, 785, 798, 799, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 836, 842, 844, 846, 859], "standard": [1, 2, 10, 11, 30, 31, 44, 50, 54, 56, 63, 64, 66, 69, 76, 78, 82, 89, 92, 93, 95, 97, 103, 104, 107, 108, 119, 132, 134, 136, 145, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 342, 344, 349, 352, 360, 361, 366, 379, 385, 387, 405, 406, 469, 506, 553, 555, 557, 559, 564, 565, 566, 575, 582, 583, 584, 585, 588, 590, 592, 593, 595, 597, 603, 604, 605, 607, 614, 618, 619, 620, 621, 628, 632, 633, 634, 635, 642, 645, 646, 647, 650, 653, 654, 655, 656, 659, 661, 662, 663, 664, 671, 674, 675, 676, 677, 678, 680, 686, 689, 690, 691, 692, 694, 700, 703, 704, 705, 706, 708, 714, 717, 718, 719, 720, 722, 728, 731, 732, 733, 734, 736, 745, 747, 748, 750, 754, 755, 758, 759, 761, 763, 766, 769, 771, 772, 777, 779, 780, 781, 783, 784, 785, 790, 792, 797, 802, 807, 809, 843, 845, 846, 850, 852, 862, 863, 864], "c": [1, 2, 9, 11, 20, 21, 26, 29, 30, 31, 32, 44, 45, 54, 59, 63, 64, 69, 71, 72, 74, 78, 101, 102, 108, 136, 150, 151, 153, 155, 157, 158, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 179, 192, 197, 198, 199, 200, 207, 211, 212, 218, 219, 221, 222, 226, 227, 236, 237, 241, 242, 243, 248, 250, 261, 301, 302, 303, 304, 305, 306, 335, 336, 337, 338, 339, 340, 342, 356, 366, 367, 369, 372, 380, 384, 394, 395, 397, 402, 404, 415, 416, 547, 553, 555, 557, 559, 561, 564, 565, 566, 568, 569, 570, 571, 575, 582, 583, 584, 585, 588, 590, 592, 593, 595, 597, 603, 604, 605, 606, 607, 614, 617, 618, 619, 620, 621, 628, 631, 632, 633, 634, 635, 642, 645, 646, 647, 650, 653, 654, 655, 656, 659, 661, 662, 663, 664, 671, 674, 675, 676, 677, 678, 680, 686, 689, 690, 691, 692, 694, 700, 703, 704, 705, 706, 708, 714, 717, 718, 719, 720, 722, 728, 731, 732, 733, 734, 736, 745, 747, 748, 750, 752, 754, 755, 758, 759, 761, 763, 766, 769, 771, 772, 777, 779, 780, 781, 782, 783, 784, 786, 788, 790, 792, 794, 797, 800, 801, 802, 804, 807, 809, 828, 836, 843, 845, 846, 850, 852, 858, 862], "execut": [1, 3, 6, 9, 12, 13, 31, 40, 44, 49, 52, 55, 56, 57, 59, 61, 63, 64, 65, 117, 149, 150, 151, 152, 153, 154, 161, 175, 176, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 261, 262, 264, 270, 272, 276, 280, 284, 286, 288, 290, 293, 295, 299, 301, 303, 305, 307, 311, 313, 317, 319, 321, 323, 325, 327, 329, 333, 335, 337, 339, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 553, 556, 557, 558, 559, 560, 562, 564, 565, 566, 568, 570, 571, 585, 589, 595, 596, 597, 600, 602, 608, 616, 622, 630, 636, 644, 652, 656, 660, 665, 673, 675, 681, 688, 690, 695, 702, 704, 709, 716, 718, 723, 730, 742, 744, 745, 750, 752, 753, 754, 755, 756, 759, 766, 767, 770, 775, 782, 783, 798, 799, 807, 816, 830, 837, 839, 840, 841, 842, 843, 844, 845, 846, 857], "semant": [1, 38, 54, 61, 63, 107, 115, 116, 153, 154, 156, 165, 167, 177, 555, 583, 588, 592, 597, 604, 614, 619, 628, 633, 642, 646, 650, 654, 659, 662, 671, 676, 686, 691, 700, 705, 714, 719, 728, 732, 733, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 848], "To": [1, 4, 5, 23, 28, 32, 41, 49, 51, 52, 57, 62, 82, 131, 150, 152, 158, 164, 169, 170, 180, 293, 295, 296, 327, 329, 330, 403, 482, 556, 560, 575, 744, 785, 843, 851], "function": [1, 3, 9, 11, 13, 14, 17, 20, 21, 23, 26, 30, 31, 32, 35, 36, 38, 39, 40, 42, 43, 46, 47, 51, 52, 54, 57, 61, 62, 76, 92, 103, 105, 112, 122, 123, 124, 125, 126, 127, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 179, 189, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 393, 394, 397, 398, 399, 401, 403, 405, 406, 407, 408, 410, 411, 413, 420, 422, 423, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 553, 556, 557, 558, 559, 564, 565, 566, 585, 595, 602, 604, 614, 616, 619, 628, 630, 633, 642, 644, 647, 650, 652, 656, 662, 671, 673, 675, 676, 677, 684, 686, 688, 690, 691, 692, 698, 700, 702, 704, 705, 706, 712, 714, 716, 718, 719, 720, 726, 728, 730, 732, 735, 742, 751, 752, 753, 760, 762, 764, 765, 767, 768, 774, 775, 785, 789, 802, 807, 808, 817, 818, 819, 831, 832, 835, 836, 840, 845, 852, 855, 857, 859, 860], "object": [1, 9, 10, 12, 13, 14, 15, 20, 35, 36, 38, 40, 42, 43, 44, 46, 49, 52, 57, 58, 60, 62, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 348, 349, 350, 352, 357, 358, 359, 360, 361, 362, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 482, 553, 554, 557, 558, 559, 560, 561, 563, 564, 568, 582, 590, 592, 598, 600, 603, 604, 609, 612, 613, 618, 619, 623, 626, 627, 632, 633, 637, 640, 641, 645, 653, 661, 662, 666, 669, 670, 674, 676, 682, 685, 689, 691, 696, 699, 703, 705, 710, 713, 717, 719, 724, 727, 731, 737, 740, 745, 746, 749, 750, 751, 752, 754, 759, 761, 762, 763, 765, 766, 769, 777, 778, 779, 780, 785, 786, 788, 790, 791, 804, 807, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 828, 837, 839, 840, 841, 843, 844, 845, 846, 848, 850, 851, 852, 853, 858, 859, 861], "submit": [1, 38, 362, 363, 369, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 404, 409, 745, 807, 820, 823, 839, 840, 843, 864], "group": [1, 9, 13, 23, 29, 31, 38, 44, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 184, 189, 191, 192, 198, 202, 219, 222, 225, 243, 251, 265, 266, 273, 274, 277, 278, 281, 282, 292, 296, 297, 308, 309, 314, 315, 330, 331, 343, 365, 384, 544, 546, 696, 710, 835, 841, 845, 846, 847, 864], "contain": [1, 7, 9, 10, 23, 30, 32, 35, 36, 38, 39, 41, 43, 44, 53, 63, 69, 70, 79, 80, 81, 82, 83, 84, 85, 99, 100, 108, 109, 118, 122, 123, 124, 125, 126, 127, 128, 143, 150, 151, 153, 155, 158, 160, 161, 166, 180, 184, 191, 192, 198, 202, 216, 217, 219, 222, 225, 228, 229, 243, 251, 253, 254, 255, 256, 258, 260, 261, 262, 264, 265, 268, 270, 272, 273, 277, 280, 281, 284, 286, 288, 290, 292, 296, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 330, 335, 337, 339, 341, 343, 363, 365, 384, 402, 411, 414, 415, 416, 417, 418, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 436, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 550, 551, 552, 557, 565, 566, 577, 580, 581, 582, 585, 586, 588, 589, 590, 594, 595, 597, 598, 600, 601, 602, 603, 606, 607, 609, 613, 614, 615, 616, 618, 621, 623, 627, 629, 630, 632, 635, 637, 641, 643, 644, 645, 648, 650, 651, 652, 653, 656, 657, 659, 660, 661, 664, 666, 670, 672, 673, 674, 675, 678, 679, 680, 682, 685, 686, 687, 688, 689, 690, 693, 694, 696, 699, 701, 702, 703, 704, 707, 708, 710, 713, 715, 716, 717, 718, 721, 722, 724, 727, 729, 730, 731, 732, 735, 737, 740, 742, 758, 761, 762, 765, 775, 780, 782, 807, 818, 833, 834, 835, 842, 845, 849, 851, 852, 854, 856, 858, 859, 864], "": [1, 9, 10, 12, 13, 14, 15, 23, 38, 41, 44, 46, 48, 49, 52, 53, 60, 61, 62, 63, 64, 101, 102, 108, 109, 142, 148, 150, 151, 153, 156, 158, 159, 161, 162, 165, 168, 169, 178, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 352, 363, 366, 384, 387, 395, 403, 404, 409, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 552, 557, 558, 559, 560, 564, 565, 569, 580, 745, 750, 752, 754, 762, 763, 764, 765, 774, 777, 798, 799, 827, 839, 841, 843, 844, 863, 864], "definit": [1, 5, 32, 33, 41, 43, 44, 45, 47, 49, 51, 53, 61, 63, 65, 150, 161, 171, 172, 258, 286, 292, 307, 308, 311, 313, 314, 319, 365, 413, 444, 475, 482, 500, 527, 534, 565], "togeth": [1, 53, 65, 154, 171], "variabl": [1, 38, 44, 49, 64, 66, 69, 76, 78, 82, 89, 92, 93, 95, 97, 103, 104, 107, 108, 119, 132, 134, 136, 145, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 341, 363, 411, 413, 482, 745, 750, 754, 759, 766, 777, 785, 839], "refer": [1, 29, 35, 36, 38, 42, 43, 44, 49, 51, 52, 53, 56, 57, 63, 150, 153, 155, 159, 161, 169, 172, 173, 176, 177, 180, 257, 258, 259, 342, 363, 411, 415, 417, 418, 422, 423, 426, 428, 430, 444, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 557, 565, 577, 580, 582, 583, 590, 591, 592, 603, 604, 606, 616, 618, 619, 630, 632, 633, 644, 645, 646, 653, 654, 661, 662, 673, 674, 676, 677, 678, 688, 689, 691, 692, 702, 703, 705, 706, 716, 717, 719, 720, 730, 731, 733, 735, 745, 748, 750, 752, 754, 758, 759, 760, 761, 763, 766, 768, 778, 785, 802, 807, 817, 818, 836, 842, 843, 845, 848, 850, 851, 853, 855, 858], "simpli": [1, 61, 153, 157, 174], "through": [1, 13, 17, 23, 41, 46, 57, 59, 150, 153, 284, 286, 317, 319, 344, 552, 757, 761, 763, 765, 771, 777, 778, 783, 807, 843, 863], "memori": [1, 3, 9, 11, 13, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 48, 55, 56, 57, 58, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 182, 219, 221, 222, 224, 225, 255, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 362, 410, 415, 416, 417, 418, 422, 423, 426, 428, 430, 451, 454, 544, 545, 548, 583, 584, 592, 604, 619, 633, 646, 654, 655, 662, 676, 691, 705, 719, 731, 733, 734, 741, 742, 783, 785, 786, 787, 788, 789, 790, 798, 799, 831, 834], "defin": [1, 3, 7, 9, 10, 11, 13, 14, 16, 17, 20, 23, 26, 28, 30, 31, 32, 37, 38, 40, 41, 42, 43, 44, 49, 51, 52, 53, 59, 60, 61, 63, 64, 78, 82, 85, 87, 88, 96, 101, 103, 107, 118, 149, 150, 151, 152, 153, 155, 157, 158, 161, 162, 163, 164, 166, 167, 170, 171, 172, 173, 177, 178, 184, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 264, 265, 268, 288, 295, 296, 297, 298, 301, 302, 303, 304, 321, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 346, 347, 348, 349, 352, 357, 359, 360, 363, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 408, 411, 413, 415, 417, 418, 422, 423, 426, 428, 436, 455, 459, 461, 464, 471, 472, 475, 478, 482, 483, 484, 485, 486, 487, 491, 499, 500, 506, 515, 527, 528, 529, 534, 537, 538, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 581, 582, 584, 590, 593, 603, 605, 618, 620, 632, 634, 645, 647, 653, 655, 661, 663, 674, 676, 677, 689, 691, 692, 703, 705, 706, 717, 719, 720, 731, 734, 743, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 774, 775, 777, 778, 779, 780, 782, 783, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 816, 817, 828, 829, 839, 840, 841, 842, 843, 844, 845, 846, 850, 851, 858, 861, 863, 864], "sever": [1, 37, 38, 41, 46, 48, 158, 159, 161, 180, 185, 258, 259, 261, 292, 341, 347, 373, 548, 559, 779, 784, 836, 839], "mechan": [1, 11, 12, 13, 31, 38, 49, 57, 63, 152, 153, 154, 180], "share": [1, 3, 35, 36, 38, 41, 43, 51, 150, 171, 177, 219, 222, 225, 256, 258, 451, 765, 786, 787, 794, 797, 801, 843, 845], "depend": [1, 9, 13, 38, 42, 44, 46, 47, 49, 51, 57, 59, 61, 63, 75, 131, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 163, 171, 177, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 301, 303, 305, 335, 337, 339, 381, 415, 416, 417, 418, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 552, 560, 565, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 744, 745, 750, 753, 754, 766, 767, 786, 788, 790, 805, 816, 837, 861], "descript": [1, 11, 31, 32, 37, 38, 40, 41, 43, 47, 60, 61, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 146, 150, 151, 152, 153, 155, 156, 158, 159, 162, 164, 165, 168, 169, 171, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 785, 828, 859], "buffer": [1, 9, 13, 61, 63, 150, 152, 153, 161, 176, 255, 256, 257, 258, 269, 271, 291, 324, 386, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 747, 758, 759, 761, 762, 769, 771, 772, 775, 780, 785], "creat": [1, 9, 10, 12, 13, 14, 20, 21, 23, 26, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 50, 57, 59, 61, 62, 64, 150, 151, 152, 153, 154, 155, 158, 161, 162, 165, 166, 169, 170, 171, 177, 180, 257, 258, 259, 362, 367, 386, 403, 410, 415, 416, 417, 418, 419, 425, 426, 427, 428, 429, 430, 431, 439, 448, 451, 454, 482, 544, 547, 555, 556, 569, 580, 743, 744, 748, 752, 759, 761, 764, 765, 766, 774, 775, 813, 816, 837, 839, 841, 842, 843, 844, 846, 848, 849, 850, 851, 852, 853, 858, 862, 863, 864], "pass": [1, 9, 13, 14, 17, 40, 49, 52, 53, 57, 59, 61, 62, 63, 64, 101, 142, 150, 151, 152, 153, 154, 155, 158, 160, 161, 163, 164, 165, 166, 170, 171, 177, 180, 253, 254, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 421, 454, 482, 552, 559, 560, 563, 565, 568, 744, 745, 750, 752, 754, 759, 761, 763, 765, 766, 771, 772, 775, 777, 778, 780, 807, 820, 821, 822, 824, 825, 826, 827, 840, 841, 843], "arrai": [1, 9, 30, 35, 36, 41, 43, 44, 45, 50, 57, 59, 150, 153, 158, 159, 166, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 262, 264, 265, 266, 268, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 284, 286, 288, 290, 292, 293, 296, 297, 307, 308, 309, 310, 313, 314, 315, 317, 319, 321, 323, 325, 326, 327, 330, 331, 339, 341, 362, 370, 371, 372, 375, 377, 378, 382, 384, 385, 387, 391, 392, 394, 398, 399, 400, 401, 402, 405, 406, 408, 414, 415, 417, 418, 422, 423, 426, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 482, 544, 564, 734, 802, 813, 863], "accessor": [1, 44, 45, 180, 590, 596, 597], "identifi": [1, 7, 10, 14, 26, 28, 32, 63, 150, 177, 577, 578, 758, 779, 782, 833, 834, 843, 851], "access": [1, 35, 36, 37, 38, 39, 41, 44, 49, 50, 52, 55, 61, 177, 180, 253, 254, 255, 256, 258, 259, 415, 417, 418, 426, 428, 430, 550, 551, 552, 566, 596, 597, 603, 674, 731, 732, 736, 769, 786, 803, 851, 854], "thi": [1, 5, 7, 11, 16, 20, 21, 23, 26, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 52, 53, 54, 55, 57, 59, 61, 62, 64, 74, 75, 82, 85, 101, 102, 118, 142, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 347, 353, 354, 355, 356, 359, 365, 369, 373, 376, 384, 386, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 404, 409, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 552, 553, 557, 558, 559, 560, 561, 564, 565, 570, 574, 575, 576, 577, 578, 580, 582, 583, 584, 585, 588, 589, 591, 592, 595, 596, 597, 602, 604, 608, 612, 614, 616, 618, 619, 622, 626, 628, 630, 632, 633, 636, 640, 642, 644, 646, 650, 652, 653, 654, 655, 656, 659, 660, 662, 665, 669, 671, 673, 674, 675, 676, 681, 684, 686, 688, 689, 690, 691, 695, 698, 700, 702, 703, 704, 705, 709, 712, 714, 716, 717, 718, 719, 723, 726, 728, 730, 732, 733, 734, 735, 742, 743, 744, 745, 748, 749, 750, 752, 753, 754, 755, 756, 759, 763, 765, 766, 767, 769, 775, 778, 780, 781, 783, 784, 785, 786, 787, 789, 802, 804, 807, 809, 810, 813, 816, 819, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 861, 863, 864], "call": [1, 9, 11, 20, 23, 31, 32, 38, 40, 42, 46, 49, 52, 54, 61, 64, 103, 150, 152, 153, 158, 162, 172, 180, 184, 191, 192, 197, 198, 199, 200, 202, 207, 237, 243, 251, 257, 258, 259, 260, 261, 262, 263, 267, 269, 271, 275, 276, 277, 279, 280, 281, 283, 285, 287, 289, 291, 294, 296, 298, 299, 300, 302, 304, 305, 306, 310, 311, 312, 313, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 333, 334, 336, 338, 339, 340, 343, 362, 363, 365, 369, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 403, 404, 409, 410, 413, 416, 420, 421, 422, 423, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 552, 553, 554, 555, 556, 566, 575, 583, 591, 592, 604, 617, 619, 631, 633, 646, 654, 662, 676, 691, 705, 719, 733, 742, 743, 745, 748, 750, 752, 754, 755, 756, 759, 761, 763, 766, 769, 770, 775, 779, 780, 785, 786, 788, 805, 807, 816, 824, 826, 837, 840, 841, 842, 843, 844, 845, 846, 850, 851, 852, 853, 856, 863], "runtim": [1, 3, 13, 31, 43, 57, 71, 101, 155, 163, 180, 198, 576, 578, 745, 779], "ensur": [1, 61, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 359, 381, 407, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 564, 787, 863], "avail": [1, 20, 21, 23, 26, 29, 30, 35, 36, 38, 39, 41, 42, 43, 44, 48, 50, 122, 123, 124, 125, 126, 127, 128, 142, 158, 165, 180, 248, 250, 258, 261, 386, 403, 414, 416, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 555, 560, 577, 580, 588, 598, 682, 724, 759, 761, 762, 767, 771, 777, 782, 788, 790, 837], "all": [1, 3, 9, 10, 11, 13, 14, 20, 21, 23, 26, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 75, 78, 79, 80, 81, 83, 107, 122, 123, 124, 125, 126, 127, 128, 131, 142, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 167, 170, 171, 173, 174, 175, 177, 178, 180, 181, 184, 191, 192, 198, 202, 216, 217, 219, 222, 225, 243, 248, 250, 251, 253, 254, 255, 258, 259, 260, 265, 266, 270, 271, 273, 274, 277, 278, 281, 282, 284, 286, 292, 293, 296, 297, 308, 309, 314, 315, 317, 319, 327, 330, 331, 341, 363, 365, 386, 403, 411, 436, 439, 454, 459, 482, 515, 519, 522, 528, 537, 544, 545, 546, 550, 551, 557, 558, 559, 560, 562, 564, 575, 577, 578, 583, 585, 586, 588, 589, 592, 595, 596, 597, 600, 602, 604, 608, 613, 614, 616, 619, 622, 627, 628, 630, 633, 636, 641, 642, 644, 646, 648, 650, 652, 654, 656, 657, 659, 660, 662, 665, 670, 671, 673, 675, 676, 681, 685, 686, 688, 690, 691, 695, 699, 700, 702, 704, 705, 709, 713, 714, 716, 718, 719, 723, 727, 728, 730, 731, 732, 733, 735, 740, 742, 744, 746, 752, 753, 756, 757, 758, 759, 761, 762, 763, 765, 769, 771, 773, 775, 776, 779, 780, 785, 787, 792, 794, 797, 799, 800, 801, 823, 829, 837, 839, 841, 842, 843, 844, 846, 847, 850, 851, 852, 853, 854, 855, 857, 858, 863, 864], "unifi": [1, 3, 41, 177, 451], "address": [1, 12, 13, 59, 180, 219, 222, 225, 255, 420, 421, 757], "guarante": [1, 142, 143, 150, 180, 259, 365, 506, 558, 566, 571, 731, 783, 785, 792, 797, 837, 838, 840, 842, 843, 844, 851], "space": [1, 26, 28, 44, 59, 61, 152, 153, 260, 295, 296, 329, 330, 413, 550, 551, 556, 558, 564], "pointer": [1, 3, 14, 35, 36, 37, 38, 42, 43, 50, 61, 150, 153, 177, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 261, 262, 264, 265, 270, 272, 273, 276, 280, 281, 284, 286, 288, 290, 293, 295, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 333, 335, 337, 339, 381, 410, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 557, 561, 564, 565, 582, 590, 591, 603, 616, 618, 630, 632, 644, 653, 661, 673, 674, 688, 689, 702, 703, 716, 717, 730, 731, 745, 754, 757, 761, 765, 766, 777, 786, 787, 788, 789, 790, 803, 809, 851, 858], "valu": [1, 4, 5, 9, 10, 12, 14, 20, 21, 23, 26, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 52, 54, 55, 56, 57, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 146, 150, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 177, 178, 180, 181, 182, 183, 184, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 550, 551, 552, 556, 558, 559, 560, 561, 562, 563, 564, 565, 575, 576, 578, 580, 582, 583, 588, 589, 590, 592, 594, 595, 596, 602, 603, 604, 616, 618, 619, 630, 632, 633, 644, 645, 646, 650, 652, 653, 654, 659, 660, 661, 662, 673, 674, 676, 679, 688, 689, 691, 693, 702, 703, 705, 707, 716, 717, 719, 721, 730, 731, 732, 733, 742, 745, 750, 754, 755, 758, 761, 763, 765, 766, 767, 769, 775, 779, 780, 785, 786, 802, 803, 809, 811, 812, 814, 815, 816, 820, 821, 822, 824, 839, 843, 845, 850, 851, 853, 856], "alwai": [1, 41, 56, 59, 61, 64, 150, 153, 155, 161, 162, 163, 165, 169, 171, 259, 260, 526, 552, 556, 628, 642, 700, 714, 744, 746, 829, 842, 853], "same": [1, 9, 13, 37, 38, 40, 42, 43, 44, 46, 51, 52, 55, 56, 59, 61, 63, 64, 72, 74, 78, 79, 82, 101, 102, 142, 147, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 180, 216, 217, 219, 221, 222, 225, 255, 256, 258, 259, 260, 270, 299, 300, 305, 306, 333, 334, 339, 340, 341, 362, 367, 482, 497, 522, 523, 524, 544, 550, 551, 552, 553, 555, 556, 557, 561, 564, 565, 566, 568, 579, 580, 582, 586, 590, 603, 609, 618, 623, 632, 637, 645, 648, 653, 657, 661, 666, 674, 689, 696, 703, 710, 717, 731, 737, 745, 746, 747, 750, 754, 759, 761, 763, 766, 771, 772, 775, 777, 778, 779, 783, 785, 786, 788, 790, 808, 811, 812, 814, 815, 820, 821, 822, 823, 824, 825, 826, 827, 829, 840, 842, 843, 845, 846, 850, 851, 852, 853, 858, 859, 861, 863], "locat": [1, 32, 63, 160, 169, 219, 222, 225, 255, 544, 786], "enabl": [1, 6, 9, 14, 39, 41, 44, 46, 56, 57, 61, 150, 152, 158, 159, 165, 180, 261, 454, 482, 547, 563, 565, 568, 571, 574, 576, 745, 759, 783, 785, 802, 835, 844, 854, 863, 864], "without": [1, 13, 38, 41, 43, 44, 57, 61, 152, 153, 155, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 180, 384, 386, 562, 565, 580, 741, 748, 755, 798, 799, 828, 829, 836, 843, 864], "There": [1, 60, 150, 153, 156, 158, 159, 160, 162, 167, 168, 169, 170, 172, 173, 174, 180, 219, 222, 225, 248, 250, 414, 454, 558, 744, 753, 816, 828, 837, 839, 840, 843], "support": [1, 3, 6, 9, 10, 11, 13, 30, 31, 35, 36, 37, 39, 41, 44, 46, 49, 51, 56, 59, 61, 64, 149, 150, 151, 152, 153, 160, 161, 176, 179, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 346, 347, 348, 349, 352, 357, 358, 359, 360, 361, 365, 366, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 393, 394, 398, 399, 401, 403, 405, 406, 407, 408, 413, 415, 417, 418, 422, 423, 426, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 571, 572, 575, 580, 581, 584, 590, 593, 603, 605, 618, 620, 632, 634, 647, 655, 661, 663, 674, 677, 689, 692, 703, 706, 717, 720, 734, 744, 758, 761, 762, 765, 769, 783, 785, 798, 799, 843, 854, 858], "featur": [1, 3, 20, 21, 23, 26, 28, 39, 41, 42, 44, 47, 154, 163, 367, 386, 548, 574, 577, 731, 744, 835], "underli": [1, 3, 13, 15, 41, 46, 49, 61, 62, 64, 151, 343, 347, 365, 373, 454, 787, 851], "schedul": [1, 3, 180, 421, 571, 755, 833, 834, 835, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848], "when": [1, 9, 11, 15, 30, 31, 35, 36, 37, 38, 41, 42, 43, 44, 46, 48, 54, 57, 59, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 255, 257, 258, 259, 299, 305, 333, 339, 341, 346, 348, 349, 352, 357, 359, 360, 361, 365, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 392, 393, 394, 395, 398, 399, 401, 404, 405, 406, 408, 409, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 459, 480, 483, 488, 515, 519, 532, 537, 545, 557, 558, 560, 563, 564, 565, 568, 569, 570, 575, 576, 580, 731, 743, 745, 750, 752, 754, 755, 759, 762, 763, 766, 767, 775, 778, 786, 798, 799, 813, 816, 824, 829, 837, 839, 841, 842, 843, 844, 851, 863], "readi": [1, 38, 64, 260, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543], "If": [1, 9, 11, 13, 23, 30, 31, 35, 36, 38, 43, 47, 49, 52, 61, 63, 64, 70, 73, 77, 81, 83, 84, 87, 88, 90, 120, 122, 123, 124, 125, 126, 127, 128, 131, 133, 139, 146, 150, 153, 154, 155, 160, 163, 169, 171, 177, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 262, 264, 265, 268, 270, 271, 272, 273, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 335, 336, 337, 338, 339, 340, 341, 366, 395, 400, 404, 409, 415, 417, 418, 426, 428, 430, 436, 439, 481, 482, 505, 506, 512, 513, 519, 524, 533, 534, 541, 542, 556, 557, 558, 560, 561, 564, 565, 566, 569, 575, 580, 583, 584, 588, 591, 592, 593, 594, 595, 596, 597, 604, 605, 606, 614, 616, 619, 620, 622, 628, 630, 633, 634, 636, 642, 644, 646, 647, 650, 654, 655, 659, 662, 663, 671, 673, 674, 676, 677, 678, 679, 686, 688, 689, 691, 692, 693, 695, 700, 702, 703, 705, 706, 707, 709, 714, 716, 717, 719, 720, 721, 728, 730, 731, 733, 734, 742, 743, 744, 745, 750, 753, 754, 756, 759, 761, 762, 763, 766, 769, 771, 775, 777, 779, 780, 782, 787, 788, 807, 816, 819, 828, 836, 839, 841, 842, 843, 844, 845, 850, 851, 852, 855], "method": [1, 3, 13, 14, 30, 31, 32, 35, 36, 37, 38, 42, 43, 44, 46, 51, 52, 57, 64, 153, 160, 170, 177, 178, 180, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 346, 348, 349, 352, 357, 358, 360, 361, 363, 364, 365, 367, 370, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 393, 394, 398, 399, 401, 403, 405, 406, 408, 411, 412, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 555, 556, 557, 564, 565, 579, 580, 585, 589, 595, 596, 597, 602, 608, 614, 616, 622, 628, 630, 636, 642, 644, 652, 656, 660, 665, 671, 673, 675, 681, 686, 688, 690, 695, 700, 702, 704, 709, 714, 716, 718, 723, 728, 730, 731, 732, 735, 742, 743, 748, 763, 779, 780, 786, 788, 789, 790, 810, 836, 841, 842, 843, 844, 846, 850, 855, 857, 859], "copi": [1, 35, 36, 37, 38, 41, 43, 44, 55, 61, 64, 142, 143, 150, 153, 154, 169, 186, 189, 191, 218, 219, 222, 223, 224, 225, 258, 369, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 404, 409, 545, 558, 561, 564, 572, 573, 580, 582, 584, 588, 590, 593, 603, 605, 612, 614, 616, 618, 620, 626, 628, 630, 632, 634, 640, 642, 644, 645, 647, 650, 653, 655, 659, 661, 663, 669, 671, 673, 674, 677, 684, 686, 688, 689, 692, 698, 700, 702, 703, 706, 712, 714, 716, 717, 720, 726, 728, 730, 731, 732, 734, 742, 745, 746, 747, 750, 751, 754, 758, 759, 761, 763, 765, 766, 769, 771, 772, 775, 777, 778, 780, 803, 806, 809, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 830, 843, 850, 851, 855, 858], "necessari": [1, 44, 57, 61, 152, 158, 160, 162, 169, 171, 180, 258, 569, 696, 816, 842], "order": [1, 9, 23, 26, 40, 44, 52, 55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 180, 224, 255, 257, 258, 261, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 333, 334, 335, 337, 339, 355, 390, 413, 414, 432, 433, 434, 435, 444, 445, 446, 447, 454, 556, 558, 560, 562, 566, 645, 696, 710, 744, 747, 752, 755, 771, 772, 777, 786, 795, 796, 802, 816, 835], "soon": [1, 767], "prior": [1, 154, 180, 258, 259, 748], "finish": [1, 26, 62, 64, 150, 180, 253, 254, 421, 843], "you": [1, 38, 50, 59, 151, 158, 171, 272, 273, 280, 290, 293, 313, 323, 327, 353, 388, 395, 404, 478, 479, 481, 529, 530, 531, 533, 538, 539, 541, 547, 564, 565, 576, 577, 802, 816, 836, 839, 844, 846, 863, 864], "must": [1, 9, 17, 23, 38, 56, 57, 59, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 157, 158, 160, 162, 163, 165, 166, 167, 169, 171, 177, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 415, 420, 422, 423, 454, 482, 519, 523, 550, 551, 552, 553, 555, 557, 558, 559, 560, 561, 564, 565, 566, 578, 582, 583, 588, 590, 592, 597, 603, 604, 606, 614, 616, 618, 619, 628, 630, 632, 633, 642, 644, 645, 646, 650, 653, 654, 659, 661, 662, 671, 673, 674, 676, 678, 686, 688, 689, 691, 700, 702, 703, 705, 714, 716, 717, 719, 728, 730, 731, 732, 733, 745, 747, 748, 750, 752, 754, 755, 758, 759, 761, 763, 764, 766, 769, 771, 772, 774, 777, 778, 779, 780, 785, 787, 806, 808, 810, 811, 812, 814, 815, 820, 821, 822, 823, 824, 825, 826, 827, 840, 841, 843, 845, 846, 850, 852, 853, 858, 863], "specifi": [1, 9, 13, 17, 20, 21, 23, 26, 28, 30, 45, 49, 51, 53, 55, 57, 59, 61, 62, 63, 68, 69, 70, 78, 83, 84, 85, 86, 87, 88, 99, 100, 108, 109, 110, 111, 114, 118, 122, 123, 124, 125, 126, 127, 128, 131, 141, 142, 143, 144, 150, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 182, 183, 184, 191, 192, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 258, 259, 260, 263, 265, 266, 267, 269, 270, 271, 273, 274, 275, 277, 278, 279, 281, 282, 283, 285, 286, 287, 288, 289, 291, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 322, 324, 326, 327, 328, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 365, 395, 403, 404, 414, 415, 416, 417, 418, 419, 426, 427, 428, 429, 430, 431, 436, 439, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 549, 552, 556, 558, 560, 561, 564, 569, 570, 571, 572, 576, 744, 745, 750, 754, 755, 756, 758, 761, 763, 766, 767, 775, 778, 782, 783, 785, 816, 829, 836, 839, 840, 843, 844, 845, 858, 861, 863], "set": [1, 13, 14, 20, 21, 23, 26, 28, 30, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 54, 61, 63, 64, 65, 69, 82, 101, 102, 115, 122, 123, 124, 125, 126, 127, 128, 131, 150, 152, 153, 154, 155, 156, 158, 162, 163, 165, 168, 169, 176, 177, 209, 210, 212, 213, 214, 215, 216, 217, 219, 222, 225, 228, 229, 248, 250, 251, 255, 256, 257, 258, 259, 260, 261, 342, 343, 346, 348, 349, 352, 357, 360, 361, 365, 367, 370, 371, 372, 374, 375, 377, 378, 379, 382, 383, 384, 385, 387, 392, 394, 395, 398, 400, 401, 404, 405, 406, 408, 409, 413, 421, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 556, 560, 561, 562, 571, 578, 580, 588, 594, 596, 597, 679, 693, 707, 721, 743, 744, 745, 747, 750, 752, 753, 754, 755, 759, 761, 765, 766, 767, 769, 772, 777, 780, 784, 785, 791, 802, 816, 828, 829, 839, 841, 843, 850, 854, 855, 858, 863], "event": [1, 3, 4, 5, 9, 12, 35, 36, 38, 42, 44, 151, 160, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 381, 410, 415, 416, 417, 418, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 569], "complet": [1, 9, 15, 41, 44, 59, 61, 148, 150, 153, 156, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 258, 259, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 365, 371, 381, 415, 416, 417, 418, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 475, 482, 500, 527, 731, 744, 749, 750, 752, 756, 823, 837, 839, 841, 842, 843, 844, 846, 847], "synchron": [1, 3, 9, 13, 14, 59, 61, 62, 791, 798, 799, 843], "coordin": [1, 59, 99, 100, 227, 229, 414, 415], "destruct": [1, 558, 580, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 769, 780, 828, 839, 842, 843, 851], "advanc": [1, 160, 342, 422, 423, 565, 744], "requir": [1, 9, 11, 20, 23, 30, 39, 40, 41, 45, 47, 49, 50, 51, 52, 54, 55, 56, 59, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 166, 168, 169, 171, 174, 177, 178, 180, 228, 229, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 355, 388, 390, 410, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 564, 565, 566, 568, 569, 570, 571, 572, 573, 581, 582, 583, 584, 585, 588, 590, 592, 593, 595, 597, 600, 603, 604, 605, 606, 607, 613, 614, 616, 618, 619, 620, 621, 627, 628, 630, 632, 633, 634, 635, 641, 642, 644, 645, 646, 647, 650, 653, 654, 655, 656, 659, 661, 662, 663, 664, 670, 671, 673, 674, 675, 676, 677, 678, 680, 685, 686, 688, 689, 690, 691, 692, 694, 699, 700, 702, 703, 704, 705, 706, 708, 713, 714, 716, 717, 718, 719, 720, 722, 727, 728, 730, 732, 733, 734, 736, 740, 744, 745, 747, 748, 750, 754, 755, 758, 759, 761, 763, 764, 766, 769, 771, 772, 774, 777, 778, 779, 780, 783, 784, 786, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 833, 834, 840, 843, 845, 846, 850, 852, 854, 858, 863], "strategi": [1, 38, 558, 784], "In": [1, 9, 11, 20, 31, 35, 36, 40, 41, 44, 47, 48, 49, 50, 51, 52, 55, 57, 59, 61, 62, 63, 82, 83, 107, 150, 151, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 211, 221, 222, 224, 228, 229, 241, 255, 259, 261, 268, 284, 293, 305, 306, 317, 339, 341, 342, 343, 347, 367, 373, 413, 416, 422, 423, 454, 459, 482, 483, 497, 515, 519, 537, 553, 558, 560, 564, 571, 575, 578, 584, 593, 605, 614, 618, 620, 632, 634, 647, 655, 663, 671, 674, 677, 686, 689, 692, 703, 706, 717, 720, 728, 734, 735, 744, 752, 753, 759, 765, 775, 779, 788, 789, 804, 807, 816, 840, 842, 863], "we": [1, 55, 57, 59, 82, 83, 131, 153, 155, 158, 159, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 180, 219, 222, 225, 256, 259, 863, 864], "onemkl": [1, 2, 185, 192, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 259, 260, 292, 341, 343, 345, 363, 365, 367, 411, 413, 422, 423, 444, 447, 454, 862], "matrix": [1, 23, 24, 47, 54, 57, 59, 107, 153, 160, 161, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 380, 391, 392, 400, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 436, 439, 454, 564], "multipli": [1, 44, 54, 61, 64, 149, 153, 154, 171, 174, 198, 250, 251, 290, 292, 301, 302, 303, 304, 305, 306, 323, 335, 336, 337, 338, 339, 340, 479, 481, 506, 531, 533, 539, 541, 546, 755], "routin": [1, 2, 11, 40, 52, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 365, 367, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 548, 575, 785, 862], "gemm": [1, 153, 158, 180, 188, 198, 416, 424], "write": [1, 32, 38, 42, 61, 177, 180, 255, 258, 471, 472, 484, 485, 486, 487, 491, 505, 542, 558, 560, 591, 791, 794, 797, 801, 802, 829, 836, 863], "omit": [1, 13, 40, 52, 59, 152, 153, 160, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 369, 415, 417, 418, 426, 428, 430, 558, 816, 843], "irrelev": [1, 255, 836], "detail": [1, 20, 21, 23, 26, 32, 44, 49, 55, 61, 64, 151, 152, 153, 161, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 258, 259, 261, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 347, 350, 359, 363, 367, 381, 411, 415, 422, 423, 444, 454, 499, 674, 689, 703, 717, 731, 784, 802], "initi": [1, 6, 19, 20, 23, 24, 26, 38, 41, 42, 43, 45, 46, 49, 53, 54, 59, 61, 155, 158, 162, 163, 165, 168, 170, 171, 177, 180, 197, 198, 199, 200, 207, 237, 248, 250, 251, 256, 258, 261, 353, 354, 355, 356, 362, 369, 388, 389, 390, 391, 392, 395, 397, 400, 402, 404, 409, 410, 413, 420, 421, 424, 425, 451, 482, 553, 554, 557, 569, 592, 646, 676, 691, 705, 719, 743, 745, 750, 754, 759, 761, 763, 766, 769, 778, 780, 802, 811, 843, 845, 864], "gpu_selector": [1, 50, 151], "want": [1, 153, 395, 404], "comput": [1, 3, 6, 13, 20, 23, 26, 29, 30, 31, 41, 44, 45, 46, 51, 52, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 67, 69, 71, 75, 77, 79, 80, 81, 82, 83, 84, 90, 94, 96, 98, 100, 101, 102, 106, 107, 108, 113, 116, 120, 133, 135, 137, 139, 146, 147, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 367, 381, 386, 392, 413, 415, 417, 418, 426, 428, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 548, 556, 560, 564, 565, 744, 752, 754, 777, 780, 813, 815, 837, 840, 846, 850, 852, 861, 863], "perform": [1, 2, 9, 11, 20, 23, 26, 30, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 51, 52, 53, 57, 59, 61, 65, 66, 68, 69, 71, 79, 82, 86, 87, 88, 99, 101, 102, 104, 108, 110, 111, 112, 114, 115, 117, 122, 123, 124, 125, 126, 127, 128, 131, 138, 140, 141, 144, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 180, 184, 186, 187, 188, 191, 192, 193, 194, 195, 198, 202, 211, 212, 215, 218, 219, 221, 222, 223, 224, 225, 226, 228, 232, 234, 241, 242, 243, 251, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 277, 278, 279, 281, 282, 283, 285, 287, 289, 291, 292, 294, 296, 297, 298, 300, 302, 304, 306, 308, 309, 310, 312, 314, 315, 316, 318, 320, 322, 324, 326, 328, 330, 331, 332, 334, 336, 338, 340, 342, 365, 376, 392, 416, 419, 420, 427, 429, 431, 459, 475, 476, 478, 479, 481, 483, 497, 499, 500, 502, 506, 515, 516, 524, 527, 528, 529, 530, 531, 533, 535, 537, 538, 539, 541, 544, 546, 548, 554, 558, 564, 565, 569, 571, 575, 585, 588, 589, 595, 602, 614, 616, 628, 630, 642, 644, 650, 652, 656, 659, 660, 671, 673, 686, 688, 700, 702, 714, 716, 728, 730, 732, 735, 742, 750, 754, 767, 775, 782, 785, 786, 798, 799, 821, 822, 826, 828, 842, 843, 855, 857, 862, 863], "hold": [1, 9, 14, 38, 43, 59, 61, 62, 122, 123, 124, 125, 126, 127, 128, 150, 153, 159, 177, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 363, 411, 421, 439, 570, 588, 590, 601, 615, 629, 643, 672, 675, 687, 690, 701, 704, 715, 718, 729, 731, 741, 757, 769, 780, 828, 829, 842, 850], "alloc": [1, 3, 11, 31, 32, 35, 36, 38, 46, 61, 150, 152, 153, 169, 180, 182, 184, 191, 222, 225, 253, 254, 255, 256, 257, 258, 260, 420, 422, 423, 451, 454, 482, 545, 580, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 598, 599, 602, 603, 604, 605, 609, 610, 611, 612, 614, 616, 617, 618, 619, 620, 623, 624, 625, 626, 628, 630, 631, 632, 633, 634, 637, 638, 639, 640, 642, 644, 645, 646, 647, 648, 649, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 666, 667, 668, 669, 671, 673, 674, 676, 677, 682, 683, 684, 686, 688, 689, 691, 692, 696, 697, 698, 700, 702, 703, 705, 706, 710, 711, 712, 714, 716, 717, 719, 720, 724, 725, 726, 728, 730, 731, 733, 734, 737, 738, 739, 741, 742, 786, 787, 788, 789, 790, 831, 834, 851, 853], "compar": [1, 44, 55, 61, 64, 131, 177, 566, 581, 590, 592, 595, 596, 597, 603, 605, 608, 609, 610, 611, 612, 617, 618, 620, 622, 623, 624, 625, 626, 631, 632, 634, 636, 637, 638, 639, 640, 645, 646, 647, 648, 649, 661, 663, 665, 666, 667, 668, 669, 676, 691, 705, 719, 767, 771, 787, 789, 802, 819], "add": [1, 61, 64, 69, 70, 74, 79, 80, 81, 82, 83, 84, 108, 109, 149, 150, 156, 158, 160, 162, 165, 169, 182, 183, 184, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 230, 233, 234, 235, 237, 238, 239, 240, 250, 546, 555, 557, 747, 755, 765, 771, 772, 777, 786, 807, 816, 842, 846], "paramet": [1, 9, 20, 21, 23, 26, 30, 35, 36, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 57, 59, 61, 62, 63, 64, 82, 83, 101, 102, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 552, 558, 559, 561, 564, 565, 614, 628, 642, 671, 674, 686, 689, 700, 703, 714, 717, 728, 743, 755, 758, 763, 767, 779, 785, 808, 811, 812, 814, 815, 816, 829, 839, 843, 845, 850, 851, 852, 854], "replac": [1, 38, 43, 76, 77, 154, 171, 172, 180, 228, 236, 384, 564, 583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733, 775, 786, 848], "otherwis": [1, 9, 35, 36, 38, 61, 64, 77, 90, 96, 120, 122, 123, 124, 125, 126, 127, 128, 133, 139, 146, 155, 159, 160, 176, 177, 178, 180, 192, 209, 210, 214, 215, 219, 223, 224, 227, 366, 421, 493, 495, 496, 506, 512, 513, 522, 534, 546, 552, 555, 567, 575, 576, 578, 580, 581, 586, 588, 589, 591, 596, 597, 598, 601, 602, 608, 609, 614, 615, 616, 617, 622, 623, 628, 629, 630, 631, 636, 637, 642, 643, 644, 648, 650, 651, 652, 657, 659, 660, 665, 666, 671, 672, 673, 674, 681, 682, 686, 687, 688, 689, 695, 696, 700, 701, 702, 703, 709, 710, 714, 715, 716, 717, 723, 724, 728, 729, 730, 731, 737, 738, 741, 742, 745, 754, 756, 759, 761, 762, 766, 769, 771, 779, 780, 790, 792, 797, 798, 799, 800, 801, 828, 829, 841, 842, 843, 844, 846, 848, 850, 855, 856, 859, 864], "namespac": [1, 5, 12, 20, 21, 23, 26, 30, 33, 35, 36, 38, 39, 40, 42, 43, 45, 49, 50, 52, 53, 161, 176, 177, 178, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 581, 582, 590, 591, 603, 617, 618, 631, 632, 645, 653, 661, 674, 689, 703, 717, 731, 743, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 786, 787, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 831, 834, 835, 836, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 850, 851, 858, 861], "cl": [1, 35, 36, 38, 61, 62, 160, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "declar": [1, 20, 21, 23, 26, 30, 35, 36, 38, 39, 40, 42, 43, 49, 50, 52, 153, 180, 752, 782, 816, 836, 860], "doubl": [1, 9, 10, 20, 21, 23, 26, 35, 36, 42, 44, 49, 51, 181, 182, 183, 184, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 348, 349, 352, 357, 360, 365, 371, 372, 374, 375, 377, 378, 379, 380, 383, 385, 387, 393, 394, 398, 399, 401, 405, 408, 410, 425, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 553, 767, 861], "new": [1, 13, 20, 21, 23, 26, 29, 35, 36, 38, 39, 41, 42, 43, 44, 45, 61, 64, 150, 152, 160, 177, 180, 454, 527, 528, 556, 557, 588, 606, 650, 659, 678, 731, 732, 742, 743, 745, 750, 754, 759, 763, 766, 777, 780, 824, 836, 843, 850, 855], "m": [1, 20, 23, 26, 47, 59, 107, 165, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 218, 219, 221, 222, 223, 224, 225, 237, 238, 248, 250, 251, 255, 256, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 290, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 323, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 352, 353, 354, 366, 372, 384, 387, 388, 389, 393, 415, 430, 454, 590, 603, 618, 632, 661, 674, 689, 703, 717, 828, 829, 836], "n": [1, 20, 21, 23, 26, 41, 47, 57, 59, 69, 70, 71, 72, 74, 78, 82, 99, 100, 101, 102, 105, 107, 108, 143, 151, 153, 154, 155, 157, 158, 162, 163, 164, 165, 166, 167, 169, 170, 171, 174, 177, 178, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 354, 355, 356, 358, 362, 369, 372, 375, 380, 381, 384, 388, 389, 390, 391, 392, 393, 395, 397, 399, 400, 402, 403, 404, 409, 410, 439, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 556, 558, 560, 564, 565, 566, 590, 592, 594, 674, 675, 679, 689, 690, 693, 703, 704, 707, 717, 718, 721, 731, 732, 733, 742, 748, 751, 752, 760, 761, 765, 768, 769, 777, 786, 787, 788, 790, 836, 840], "b": [1, 47, 54, 59, 150, 165, 171, 177, 192, 197, 198, 199, 200, 207, 211, 221, 222, 223, 224, 225, 227, 237, 241, 243, 245, 247, 248, 250, 251, 252, 255, 262, 270, 280, 281, 282, 283, 286, 287, 289, 313, 314, 315, 316, 319, 320, 325, 326, 342, 343, 349, 352, 356, 360, 361, 365, 371, 374, 383, 385, 387, 397, 401, 402, 405, 406, 408, 415, 416, 459, 465, 466, 477, 483, 493, 495, 496, 497, 501, 506, 512, 513, 515, 516, 518, 519, 522, 523, 524, 537, 546, 565, 752, 767, 813, 858], "p": [1, 20, 21, 23, 26, 29, 38, 41, 47, 160, 168, 262, 272, 292, 293, 294, 295, 296, 327, 328, 329, 330, 342, 346, 355, 357, 361, 366, 370, 371, 372, 382, 390, 393, 394, 398, 399, 406, 506, 556, 558, 560, 564, 603, 614, 618, 628, 674, 686, 689, 700, 764, 774, 786, 787, 788, 790, 826, 836, 839], "q": [1, 180, 259, 262, 264, 268, 288, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 321, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 362, 366, 371, 410], "1d": [1, 59, 74, 87, 88, 99, 100, 101, 102, 107, 115, 116, 122, 123, 124, 125, 126, 127, 128, 155, 158, 162, 164, 166, 170, 180], "matric": [1, 23, 29, 41, 180, 188, 189, 192, 197, 198, 199, 200, 202, 207, 211, 218, 219, 221, 222, 223, 224, 225, 237, 241, 243, 248, 250, 251, 261, 262, 265, 266, 273, 274, 277, 278, 281, 282, 286, 287, 288, 289, 290, 292, 293, 296, 297, 308, 309, 314, 315, 319, 320, 321, 322, 323, 325, 327, 330, 331, 341, 414, 415, 422, 423, 424], "bound": [1, 3, 38, 64, 76, 77, 153, 349, 360, 361, 405, 406, 552, 557, 558, 559, 560, 564, 569, 582, 600, 613, 627, 641, 670, 685, 699, 713, 727, 740, 748, 756, 785, 837, 841, 854], "mkl": [1, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545], "transpos": [1, 59, 107, 172, 180, 189, 196, 197, 198, 199, 200, 201, 202, 211, 212, 218, 219, 221, 222, 223, 224, 225, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 280, 281, 282, 283, 301, 302, 303, 304, 305, 306, 325, 326, 335, 336, 337, 338, 339, 340, 415, 416, 417, 418, 419, 428, 429, 430, 431], "nt": [1, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "nontran": [1, 180, 211, 212, 218, 221, 222, 223, 224, 241, 242, 280, 281, 282, 283, 301, 302, 303, 304, 305, 306, 325, 326, 335, 336, 337, 338, 339, 340, 415], "syntax": [1, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 758, 761, 831], "void": [1, 9, 10, 12, 13, 14, 15, 38, 42, 44, 61, 64, 153, 154, 160, 169, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 358, 381, 386, 403, 415, 417, 418, 420, 422, 423, 426, 428, 430, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 553, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 580, 582, 583, 587, 588, 589, 590, 591, 594, 597, 599, 602, 603, 611, 614, 616, 618, 625, 628, 630, 632, 639, 642, 644, 645, 646, 649, 650, 652, 653, 654, 658, 659, 660, 661, 668, 671, 673, 674, 679, 683, 686, 688, 689, 693, 697, 700, 702, 703, 707, 711, 714, 716, 717, 721, 725, 728, 730, 731, 733, 739, 742, 743, 748, 750, 752, 756, 759, 764, 767, 769, 774, 780, 785, 786, 787, 788, 790, 792, 793, 794, 797, 800, 801, 802, 803, 805, 806, 808, 810, 813, 820, 823, 826, 828, 829, 830, 840, 841, 842, 843, 844, 845, 846, 850, 851, 852, 857], "exec_queu": [1, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543], "transa": [1, 197, 198, 199, 200, 221, 222, 248, 250, 325], "transb": [1, 197, 198, 199, 200, 221, 222], "int64_t": [1, 20, 21, 23, 26, 30, 35, 36, 38, 42, 43, 44, 50, 60, 160, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 381, 415, 416, 425, 436, 439, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543], "k": [1, 19, 24, 25, 27, 45, 53, 107, 153, 160, 164, 165, 188, 192, 197, 198, 199, 200, 206, 211, 212, 230, 241, 242, 243, 244, 245, 247, 255, 273, 290, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 323, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 356, 357, 361, 366, 369, 372, 382, 384, 393, 394, 397, 398, 399, 400, 402, 406, 415, 551, 581, 590, 595, 596, 597, 603, 608, 616, 618, 622, 630, 632, 636, 644, 661, 665, 673, 674, 681, 688, 689, 695, 702, 703, 709, 716, 717, 723, 730, 731, 761, 762, 803, 809, 819, 825, 836], "t": [1, 20, 23, 29, 35, 36, 41, 54, 59, 61, 63, 64, 101, 102, 150, 153, 154, 160, 163, 171, 177, 178, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 380, 415, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 561, 565, 582, 586, 587, 588, 590, 591, 593, 598, 599, 603, 605, 609, 610, 611, 614, 617, 618, 620, 623, 624, 625, 628, 631, 632, 637, 638, 639, 642, 645, 647, 648, 649, 650, 653, 657, 658, 659, 661, 666, 667, 668, 671, 674, 677, 682, 683, 686, 689, 692, 696, 697, 700, 703, 706, 710, 711, 714, 717, 720, 724, 725, 728, 731, 737, 738, 739, 746, 747, 748, 756, 758, 761, 763, 769, 771, 772, 773, 776, 777, 779, 780, 786, 788, 790, 802, 807, 823, 827, 850, 851, 852, 853], "alpha": [1, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 182, 183, 184, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 248, 250, 251, 261, 366, 371, 378, 401, 408, 415, 417, 418, 426, 428, 430, 454], "lda": [1, 59, 180, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 221, 222, 223, 224, 225, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 454], "ldb": [1, 197, 198, 199, 200, 207, 211, 221, 222, 223, 224, 225, 237, 241, 248, 250, 251, 280, 281, 282, 283, 286, 287, 313, 314, 315, 316, 319, 320, 325, 326, 415], "beta": [1, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 182, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 211, 212, 213, 221, 222, 230, 233, 237, 238, 241, 242, 243, 248, 250, 261, 348, 352, 365, 366, 374, 377, 378, 383, 385, 387, 401, 408, 415, 417, 418, 426, 428, 454], "ldc": [1, 192, 197, 198, 199, 200, 207, 211, 212, 221, 222, 237, 241, 242, 243, 248, 250, 301, 302, 303, 304, 305, 306, 335, 336, 337, 338, 339, 340, 415], "bla": [1, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 261, 341, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 863], "0": [1, 12, 13, 18, 20, 21, 23, 26, 30, 34, 35, 36, 38, 39, 42, 43, 47, 50, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 154, 156, 157, 158, 159, 160, 162, 163, 165, 167, 169, 170, 171, 172, 174, 177, 178, 180, 184, 191, 192, 197, 198, 199, 200, 202, 207, 216, 217, 219, 222, 225, 227, 228, 229, 232, 237, 243, 248, 250, 251, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 348, 349, 352, 353, 354, 355, 356, 357, 358, 360, 361, 366, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 413, 414, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 517, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 550, 551, 553, 560, 564, 565, 575, 576, 590, 594, 596, 616, 673, 688, 730, 750, 752, 755, 761, 763, 764, 765, 767, 769, 774, 777, 780, 785, 836, 839, 840, 841, 842, 843, 845, 864], "exit": [1, 270, 284, 286, 288, 317, 319, 321, 828, 844, 845], "destructor": [1, 731, 757, 778, 803, 806, 809, 810, 816, 819, 820, 821, 822, 824, 825, 826, 827, 836, 846, 861], "result": [1, 9, 13, 31, 39, 41, 44, 46, 48, 50, 51, 53, 54, 55, 56, 57, 59, 122, 123, 124, 125, 126, 127, 128, 141, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 164, 165, 167, 168, 169, 171, 173, 177, 181, 183, 189, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 216, 217, 220, 221, 222, 229, 230, 232, 233, 234, 237, 238, 239, 240, 253, 254, 255, 258, 260, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 292, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 395, 418, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 553, 556, 564, 565, 582, 590, 596, 597, 601, 615, 629, 643, 651, 653, 672, 687, 701, 715, 729, 744, 748, 752, 754, 755, 759, 763, 765, 780, 785, 786, 788, 790, 810, 811, 812, 813, 814, 815, 816, 843, 844, 850, 852, 853], "back": [1, 9, 41, 61, 63, 69, 70, 79, 80, 81, 82, 83, 84, 108, 109, 158, 166, 169, 177, 259, 731, 735, 788], "With": [1, 55, 61, 150, 171, 180, 744, 785, 839], "do": [1, 9, 13, 41, 44, 55, 57, 59, 61, 62, 69, 108, 153, 154, 155, 170, 180, 248, 250, 251, 258, 292, 341, 478, 479, 481, 529, 530, 531, 533, 538, 539, 541, 557, 558, 565, 569, 571, 572, 576, 580, 614, 671, 686, 728, 744, 745, 750, 754, 759, 766, 777, 780, 785, 799, 829, 842, 843, 859], "addit": [1, 6, 11, 40, 41, 43, 44, 52, 54, 56, 59, 61, 68, 79, 80, 81, 83, 107, 128, 150, 155, 156, 158, 165, 176, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 367, 392, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 459, 555, 557, 565, 569, 571, 578, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 744, 802, 807, 843], "simpl": [1, 38, 154, 752, 765], "should": [1, 9, 12, 13, 14, 23, 32, 35, 40, 41, 57, 59, 61, 63, 64, 68, 70, 71, 73, 74, 78, 81, 83, 84, 86, 87, 88, 99, 100, 110, 111, 114, 122, 123, 124, 125, 126, 127, 128, 131, 144, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 395, 403, 404, 416, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 560, 561, 563, 564, 568, 569, 570, 571, 572, 597, 614, 616, 622, 628, 630, 632, 636, 642, 644, 671, 673, 686, 688, 695, 700, 702, 709, 714, 716, 728, 730, 761, 775, 781, 783, 785, 788, 805, 807, 810, 816, 817, 819, 837, 839, 842, 843, 845, 850, 852], "read": [1, 32, 35, 36, 37, 38, 41, 42, 50, 61, 180, 255, 256, 258, 260, 552, 580, 591, 777, 794, 797, 801], "lambda": [1, 259, 284, 286, 287, 317, 319, 320, 344, 357, 366, 398, 399], "element": [1, 9, 23, 28, 29, 30, 35, 38, 41, 42, 43, 44, 47, 59, 63, 64, 66, 68, 76, 82, 85, 86, 87, 88, 89, 92, 93, 95, 97, 101, 102, 103, 104, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 136, 138, 140, 141, 142, 143, 144, 145, 147, 150, 153, 158, 159, 160, 166, 177, 178, 180, 181, 182, 183, 184, 186, 190, 191, 192, 193, 194, 195, 198, 199, 202, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 222, 224, 225, 226, 228, 229, 231, 232, 236, 243, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 354, 355, 356, 358, 364, 384, 412, 414, 422, 423, 439, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 564, 565, 566, 585, 586, 591, 595, 596, 598, 600, 601, 602, 603, 607, 608, 609, 613, 615, 618, 621, 622, 623, 627, 629, 632, 635, 636, 637, 641, 643, 648, 651, 652, 656, 657, 661, 664, 665, 666, 670, 672, 674, 675, 679, 680, 681, 682, 685, 687, 689, 690, 693, 694, 695, 696, 699, 701, 703, 704, 707, 708, 709, 710, 713, 715, 717, 718, 721, 722, 723, 724, 727, 729, 731, 732, 736, 737, 740, 741, 742, 748, 758, 761, 778, 782, 805, 807, 813, 818, 824, 825, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 863], "parallel_for": [1, 38, 362, 363, 549, 552, 564, 572, 573, 803, 806, 808, 809, 816, 818, 840, 842], "map": [1, 12, 13, 49, 61, 85, 87, 88, 118, 148, 152, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 556, 560, 561, 580, 748, 783, 837, 850, 863], "leav": [1, 575, 844], "scope": [1, 13, 37, 42, 43, 150, 152, 153, 180, 255, 256, 257, 258, 505, 542, 797, 801, 828, 829, 839, 845], "includ": [1, 3, 13, 24, 30, 35, 36, 38, 41, 44, 46, 49, 50, 56, 63, 150, 151, 153, 158, 160, 175, 176, 177, 178, 180, 186, 187, 188, 189, 261, 286, 292, 319, 362, 363, 410, 411, 414, 422, 423, 451, 454, 544, 553, 559, 564, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 747, 752, 755, 765, 767, 769, 771, 772, 777, 780, 783, 786, 787, 829, 836, 837, 842, 843, 863, 864], "hpp": [1, 20, 21, 23, 26, 30, 32, 35, 36, 38, 39, 42, 43, 50, 362, 410, 451], "int": [1, 9, 10, 12, 13, 35, 36, 38, 59, 61, 151, 153, 154, 156, 157, 160, 172, 173, 174, 177, 178, 342, 356, 362, 369, 371, 375, 378, 379, 397, 402, 410, 451, 550, 551, 552, 553, 559, 565, 578, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 750, 752, 755, 765, 767, 769, 777, 780, 782, 785, 802, 809, 836, 840, 842, 843, 845], "main": [1, 12, 13, 31, 32, 35, 36, 38, 41, 48, 55, 59, 150, 152, 154, 341, 362, 363, 410, 451, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 752, 755, 765, 767, 769, 777, 780, 842, 843], "ahost": 1, "bhost": 1, "chost": 1, "2d": [1, 59, 107, 153, 155, 158, 159, 162, 163, 164, 165, 166, 167, 170, 172], "2": [1, 20, 21, 26, 29, 30, 35, 36, 38, 47, 61, 71, 72, 73, 79, 81, 82, 83, 84, 87, 88, 100, 101, 102, 107, 113, 115, 116, 123, 131, 141, 154, 155, 159, 160, 163, 164, 171, 180, 185, 186, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 224, 228, 229, 230, 233, 234, 235, 238, 239, 240, 244, 245, 246, 247, 249, 252, 255, 256, 257, 259, 270, 284, 286, 287, 290, 301, 303, 317, 319, 320, 323, 335, 337, 341, 342, 344, 345, 349, 352, 353, 354, 355, 356, 357, 358, 366, 367, 369, 374, 375, 379, 380, 382, 385, 386, 387, 388, 389, 390, 391, 394, 395, 397, 399, 400, 401, 402, 403, 404, 409, 410, 414, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 477, 479, 481, 483, 484, 485, 486, 487, 490, 493, 495, 496, 497, 501, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 519, 521, 522, 524, 525, 530, 531, 532, 533, 537, 539, 541, 546, 550, 551, 552, 559, 560, 565, 576, 605, 620, 634, 663, 755, 767, 780], "handler": [1, 38, 362, 363, 456, 457, 458, 459, 461, 463, 467, 471, 472, 474, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 515, 516, 518, 519, 520, 521, 522, 523, 524, 529, 530, 531, 532, 533, 536, 537, 538, 539, 541, 542, 544, 547], "h": [1, 54, 59, 71, 72, 74, 151, 153, 155, 158, 162, 164, 166, 167, 169, 196, 197, 198, 199, 200, 201, 202, 204, 209, 210, 211, 212, 214, 215, 218, 219, 221, 222, 223, 224, 225, 228, 229, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 270, 271, 284, 286, 288, 290, 291, 301, 303, 307, 308, 313, 314, 315, 316, 325, 327, 333, 335, 336, 337, 338, 339, 340, 342, 415, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 578, 581, 582, 584, 590, 593, 605, 620, 632, 634, 647, 653, 655, 661, 663, 674, 677, 689, 692, 703, 706, 717, 720, 731, 734, 743, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 777, 778, 779, 780, 782, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 819, 836, 839, 840, 841, 842, 843, 844, 845, 846, 848, 850, 851, 858, 860], "from": [1, 2, 9, 11, 12, 13, 20, 21, 26, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 54, 59, 61, 62, 63, 64, 75, 99, 100, 101, 102, 107, 115, 116, 122, 123, 124, 125, 126, 127, 128, 129, 131, 136, 137, 142, 143, 147, 150, 151, 152, 153, 157, 160, 161, 164, 166, 169, 171, 172, 177, 178, 180, 219, 222, 224, 225, 228, 255, 256, 258, 259, 265, 281, 282, 286, 292, 295, 296, 301, 302, 303, 304, 305, 306, 308, 309, 314, 315, 319, 329, 330, 335, 336, 337, 338, 339, 340, 341, 345, 350, 351, 354, 363, 364, 365, 366, 367, 368, 369, 381, 384, 386, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 404, 409, 411, 412, 413, 422, 423, 439, 448, 495, 496, 512, 513, 518, 526, 537, 545, 546, 550, 551, 553, 555, 556, 557, 558, 560, 561, 564, 565, 566, 568, 569, 570, 571, 572, 573, 576, 577, 578, 580, 582, 585, 586, 588, 589, 590, 595, 597, 598, 602, 603, 606, 607, 614, 616, 618, 621, 628, 630, 632, 635, 642, 643, 644, 645, 648, 650, 651, 652, 653, 656, 657, 659, 660, 661, 664, 671, 672, 673, 674, 675, 678, 680, 682, 686, 687, 688, 689, 690, 694, 700, 701, 702, 703, 704, 708, 714, 716, 717, 718, 722, 724, 728, 729, 730, 731, 732, 736, 742, 744, 745, 747, 748, 750, 751, 752, 753, 754, 755, 758, 759, 761, 762, 763, 764, 766, 767, 769, 771, 772, 774, 775, 777, 778, 779, 780, 782, 783, 784, 785, 786, 788, 790, 794, 800, 801, 802, 805, 809, 813, 817, 828, 829, 836, 839, 840, 841, 843, 844, 850, 853, 858, 859, 862, 864], "auto": [1, 12, 20, 21, 23, 26, 35, 36, 38, 39, 49, 50, 63, 68, 86, 110, 111, 114, 131, 141, 142, 144, 153, 158, 171, 177, 350, 410, 451, 553, 558, 843, 845], "get_access": 1, "mode": [1, 44, 45, 46, 51, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 180, 365, 366, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 560, 561, 562, 785], "widtha": 1, "get_rang": 1, "id": [1, 38, 42, 43, 64, 150, 180, 273, 281, 308, 314, 565, 595, 596, 597, 608, 616, 622, 630, 636, 644, 665, 673, 674, 681, 688, 689, 695, 702, 703, 709, 716, 717, 723, 730, 764, 774, 777, 782, 843, 851], "index": [1, 20, 30, 31, 35, 38, 54, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 186, 216, 217, 224, 255, 256, 259, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 341, 386, 392, 409, 414, 422, 423, 482, 557, 558, 731, 758, 778, 779, 782, 808, 809, 843, 845], "row": [1, 20, 21, 23, 30, 35, 37, 41, 42, 43, 44, 45, 47, 50, 59, 107, 150, 179, 180, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 230, 233, 234, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281, 282, 283, 284, 286, 290, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 317, 319, 323, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 414, 415, 417, 418, 422, 423, 426, 428, 430, 534, 550, 551], "col": [1, 199, 550, 551], "sum": [1, 17, 23, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181, 186, 221, 226, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 372, 384, 393, 394, 414, 434, 435, 444, 446, 447, 501, 546, 560, 564, 565, 765, 809, 813, 815, 858, 861], "oneapi": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864], "softwar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864], "onedpl": [2, 175, 177, 178, 862], "companion": [2, 176, 862], "compil": [2, 38, 44, 49, 52, 63, 64, 65, 107, 575, 576, 578, 836, 862], "program": [2, 5, 33, 37, 40, 41, 44, 45, 46, 61, 65, 152, 158, 161, 162, 171, 176, 259, 341, 544, 575, 577, 674, 689, 703, 717, 783, 807, 816, 840, 842, 860, 862, 863], "api": [2, 12, 38, 39, 43, 44, 45, 46, 60, 63, 64, 65, 151, 160, 161, 176, 184, 191, 192, 198, 202, 219, 222, 225, 243, 251, 261, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 413, 416, 422, 423, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 548, 577, 744, 783, 837, 843, 860, 862, 863], "stl": [2, 180, 552, 803, 862], "extens": [2, 45, 51, 63, 150, 151, 176, 180, 182, 184, 185, 191, 192, 198, 199, 200, 202, 218, 219, 221, 222, 223, 224, 225, 243, 251, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 551, 783, 798, 799, 836, 862], "onednn": [2, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 149, 150, 152, 153, 158, 161, 162, 169, 170, 171, 862], "high": [2, 44, 151, 152, 158, 166, 342, 356, 365, 397, 478, 479, 481, 499, 528, 529, 530, 531, 533, 538, 539, 541, 548, 828, 843, 862, 863], "implement": [2, 11, 20, 21, 23, 24, 26, 29, 30, 31, 32, 37, 40, 41, 42, 43, 44, 45, 46, 49, 51, 52, 53, 55, 56, 57, 59, 60, 63, 64, 85, 87, 88, 107, 118, 148, 149, 150, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 172, 176, 177, 178, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 353, 367, 376, 388, 396, 404, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 454, 506, 519, 553, 562, 565, 578, 582, 590, 603, 618, 632, 645, 653, 661, 674, 676, 689, 691, 703, 705, 717, 719, 731, 744, 745, 750, 754, 755, 760, 761, 766, 768, 770, 775, 778, 782, 783, 784, 786, 788, 790, 798, 799, 802, 828, 829, 836, 837, 839, 840, 841, 851, 858, 861, 862, 863], "primit": [2, 3, 6, 54, 55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 791, 862], "learn": [2, 6, 29, 50, 51, 53, 56, 63, 150, 151, 154, 862], "framework": [2, 46, 63, 148, 150, 151, 862], "oneccl": [2, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 862], "scale": [2, 6, 29, 44, 54, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 182, 184, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 248, 250, 251, 259, 352, 366, 371, 374, 378, 387, 392, 506, 788, 862, 863], "multipl": [2, 3, 6, 9, 12, 13, 17, 44, 54, 56, 57, 59, 61, 63, 64, 127, 150, 152, 153, 154, 155, 156, 160, 161, 163, 168, 180, 184, 191, 192, 198, 199, 202, 207, 211, 219, 222, 225, 237, 241, 243, 248, 251, 259, 261, 280, 281, 292, 313, 314, 325, 342, 345, 353, 354, 355, 367, 388, 389, 390, 392, 409, 422, 423, 482, 515, 516, 556, 561, 562, 564, 565, 579, 582, 591, 592, 597, 604, 614, 618, 619, 622, 630, 632, 633, 636, 644, 645, 653, 662, 671, 676, 686, 689, 691, 695, 702, 703, 709, 716, 719, 728, 731, 744, 758, 761, 765, 778, 786, 798, 799, 809, 826, 829, 841, 850, 853, 862], "languag": [2, 3, 44, 176, 783, 862, 863], "algorithm": [2, 6, 20, 21, 23, 26, 29, 31, 32, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 258, 260, 261, 284, 286, 292, 317, 319, 353, 354, 355, 356, 366, 369, 388, 389, 390, 391, 392, 395, 397, 400, 402, 404, 409, 410, 451, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 674, 689, 703, 717, 783, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 833, 834, 835, 837, 842, 845, 862, 863], "scienc": [2, 342, 391, 862], "onetbb": [2, 553, 574, 577, 578, 579, 743, 744, 767, 781, 783, 784, 789, 790, 802, 837, 839, 840, 842, 843, 844, 862], "ad": [2, 41, 44, 64, 71, 72, 73, 74, 101, 102, 150, 153, 177, 182, 189, 232, 250, 415, 416, 417, 418, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 557, 759, 762, 771, 772, 846, 862], "base": [2, 11, 30, 31, 43, 44, 49, 53, 55, 56, 57, 59, 102, 103, 112, 115, 117, 152, 154, 155, 156, 158, 159, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 177, 178, 180, 216, 217, 228, 229, 255, 341, 345, 356, 366, 367, 369, 395, 397, 403, 404, 414, 422, 423, 489, 490, 508, 510, 546, 569, 744, 757, 761, 773, 776, 836, 843, 862, 863], "complex": [2, 41, 46, 48, 152, 158, 161, 180, 181, 182, 183, 184, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 301, 303, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 425, 455, 456, 457, 459, 460, 461, 462, 464, 467, 474, 476, 478, 480, 482, 483, 488, 507, 508, 515, 516, 519, 523, 529, 532, 534, 536, 537, 538, 540, 546, 556, 558, 564, 565, 566, 862], "multiprocessor": [2, 367, 862], "engin": [2, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 347, 350, 351, 353, 354, 355, 356, 358, 359, 362, 363, 364, 368, 369, 373, 376, 381, 386, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 403, 404, 407, 409, 410, 411, 412, 837, 862], "financi": [2, 544, 862], "low": [3, 44, 153, 158, 166, 342, 356, 397, 478, 479, 481, 499, 528, 529, 530, 531, 533, 538, 539, 541, 785, 843], "direct": [3, 23, 35, 36, 44, 46, 61, 68, 86, 110, 111, 114, 141, 144, 151, 158, 160, 171, 255, 259, 395, 404, 511, 518, 546, 769, 780, 816, 863], "metal": 3, "tailor": [3, 152, 161], "platform": [3, 6, 150, 178, 783, 785, 863], "broader": [3, 179], "virtual": [3, 13, 731, 748, 757, 844], "o": [3, 31, 54, 59, 153, 171, 255, 342, 556, 558, 564, 566, 575, 785, 843, 851], "while": [3, 9, 38, 39, 41, 44, 51, 54, 55, 64, 107, 153, 158, 169, 171, 180, 193, 219, 221, 222, 225, 255, 259, 284, 286, 317, 319, 341, 373, 564, 569, 600, 608, 614, 622, 628, 636, 642, 665, 671, 681, 686, 695, 700, 709, 714, 723, 728, 732, 735, 744, 763, 767, 771, 777, 783, 828, 837, 845, 846], "fine": [3, 153, 569], "grain": [3, 550, 551, 552, 556, 565, 569, 570, 571, 818], "explicit": [3, 9, 20, 21, 23, 26, 38, 40, 52, 177, 346, 348, 349, 352, 357, 360, 361, 370, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 393, 394, 398, 399, 401, 405, 406, 408, 414, 422, 423, 436, 572, 580, 582, 583, 584, 590, 592, 593, 603, 604, 605, 618, 619, 620, 632, 633, 634, 645, 646, 647, 653, 654, 655, 661, 662, 663, 674, 676, 677, 689, 691, 692, 703, 705, 706, 717, 719, 720, 731, 733, 734, 743, 746, 747, 750, 757, 761, 769, 771, 772, 778, 780, 787, 842, 843, 844, 848, 850, 851, 853, 858, 861], "control": [3, 6, 13, 44, 51, 56, 62, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 99, 100, 107, 108, 109, 142, 152, 153, 155, 163, 180, 260, 499, 528, 575, 576, 744, 767, 816, 835, 839, 863], "need": [3, 9, 41, 44, 47, 51, 57, 59, 61, 62, 63, 64, 150, 152, 153, 154, 171, 197, 198, 199, 200, 207, 213, 214, 215, 237, 248, 250, 251, 253, 254, 257, 258, 293, 327, 359, 395, 404, 414, 454, 482, 552, 565, 679, 693, 707, 721, 744, 757, 765, 783, 785, 793, 794, 816, 824, 836], "higher": [3, 31, 55, 57, 155, 158, 163, 166, 167, 170, 180, 767, 816, 843], "discoveri": [3, 24], "peer": [3, 9], "inter": [3, 863], "process": [3, 9, 12, 13, 32, 39, 41, 44, 45, 46, 48, 63, 153, 171, 177, 342, 426, 427, 428, 429, 430, 431, 436, 439, 475, 482, 500, 527, 555, 557, 560, 562, 564, 565, 744, 745, 753, 754, 755, 765, 769, 777, 805, 807, 817, 839, 840, 843, 844, 845, 864], "submiss": [3, 864], "asynchron": [3, 14, 422, 423, 454], "metric": [3, 41], "report": [3, 11, 29, 31, 52, 153, 169, 180, 255, 546], "architectur": [3, 59, 548, 863], "expos": [3, 6, 41, 44, 49, 152, 153, 155, 163, 580], "physic": [3, 41, 44, 61, 63, 342], "logic": [3, 31, 41, 43, 44, 59, 60, 61, 63, 88, 148, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 564, 783, 785, 786, 792, 797, 839, 843], "sub": [3, 41, 43, 65, 160, 171, 196, 244, 245, 258, 262, 341, 546], "entiti": [3, 13, 20, 21, 23, 26, 32, 41, 44, 556, 558, 564, 565], "model": [3, 5, 24, 44, 45, 46, 50, 53, 54, 56, 65, 85, 118, 151, 152, 153, 158, 161, 162, 171, 342, 363, 411, 413, 444, 548, 783, 786, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 809, 816, 854, 863], "latenc": 3, "well": [3, 13, 24, 30, 38, 43, 49, 52, 53, 57, 59, 153, 161, 185, 258, 292, 343, 365, 413, 534, 546, 565, 571, 590, 603, 618, 632, 661, 674, 689, 703, 717, 744, 752, 785, 807, 844, 863], "construct": [3, 13, 30, 38, 41, 44, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 259, 260, 454, 550, 551, 552, 553, 554, 557, 561, 572, 576, 580, 582, 588, 590, 597, 603, 606, 614, 617, 618, 628, 631, 632, 642, 645, 650, 653, 659, 661, 671, 674, 678, 686, 689, 700, 703, 714, 717, 728, 731, 732, 735, 742, 743, 745, 746, 747, 748, 750, 752, 754, 756, 758, 759, 761, 762, 763, 765, 766, 767, 769, 771, 772, 775, 777, 778, 779, 780, 787, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 816, 817, 820, 821, 822, 824, 825, 826, 827, 828, 829, 837, 838, 839, 841, 843, 844, 845, 846, 848, 850, 851, 855, 856, 858, 861, 863], "work": [3, 29, 41, 46, 48, 57, 61, 152, 153, 154, 156, 159, 163, 167, 168, 169, 172, 173, 174, 177, 180, 219, 222, 225, 258, 262, 264, 265, 268, 284, 286, 288, 317, 319, 321, 363, 367, 411, 549, 555, 556, 557, 565, 568, 569, 571, 731, 785, 816, 823, 837, 839, 840, 842, 843, 844, 864], "simultan": [3, 169, 180, 579, 744, 745, 765, 783, 786, 829, 842, 843, 851], "heavili": 3, "influenc": [3, 785], "opencl": [3, 29, 44, 840], "design": [3, 13, 32, 37, 44, 46, 78, 163, 172, 359, 367, 407, 413, 528, 548, 564, 565, 744, 785, 828, 843], "evolv": 3, "independ": [3, 44, 107, 153, 165, 171, 173, 189, 198, 292, 363, 367, 372, 393, 411, 413, 511, 518], "differ": [3, 9, 41, 44, 46, 51, 55, 57, 58, 59, 61, 62, 63, 64, 68, 86, 107, 110, 111, 114, 129, 141, 142, 143, 144, 151, 152, 153, 154, 160, 161, 165, 169, 171, 180, 184, 191, 192, 198, 202, 219, 222, 225, 243, 251, 255, 256, 292, 342, 343, 353, 363, 365, 388, 409, 411, 416, 454, 475, 482, 493, 500, 518, 527, 546, 556, 565, 578, 600, 601, 613, 615, 627, 629, 641, 643, 651, 653, 670, 672, 674, 685, 687, 689, 699, 701, 703, 713, 715, 717, 727, 729, 740, 744, 784, 786, 802, 803, 818, 839, 842, 845, 851, 854, 859, 861], "specif": [3, 5, 9, 10, 11, 12, 13, 14, 16, 17, 29, 30, 32, 33, 37, 41, 43, 45, 46, 49, 51, 52, 56, 59, 60, 61, 62, 64, 131, 150, 151, 152, 153, 159, 161, 164, 168, 176, 179, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 348, 349, 360, 365, 369, 407, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 459, 461, 464, 475, 478, 482, 483, 500, 515, 519, 523, 527, 529, 537, 538, 548, 578, 580, 676, 688, 691, 702, 705, 716, 719, 730, 733, 742, 743, 744, 748, 758, 760, 761, 768, 783, 785, 802, 828, 829, 838, 839, 840, 841, 843, 850, 851, 852, 864], "found": [3, 55, 166, 180, 216, 217, 258, 367, 369, 596, 616, 622, 630, 636, 644, 673, 688, 695, 702, 709, 716, 730], "onlin": [3, 41, 44, 45, 46, 51], "concept": [4, 5, 30, 32, 38, 40, 43, 44, 46, 150, 152, 180, 565, 781, 793, 796, 804], "context": [4, 5, 9, 12, 14, 47, 59, 61, 62, 150, 151, 152, 178, 256, 259, 552, 556, 557, 558, 559, 560, 564, 756, 816, 817, 840, 841, 846], "kei": [4, 5, 12, 32, 150, 177, 356, 369, 397, 566, 580, 581, 590, 592, 593, 595, 596, 597, 598, 599, 603, 604, 605, 606, 608, 609, 610, 611, 612, 614, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 628, 630, 631, 632, 633, 634, 636, 640, 644, 661, 662, 663, 665, 669, 671, 673, 674, 675, 676, 677, 678, 681, 682, 683, 684, 686, 688, 689, 690, 691, 692, 695, 696, 697, 698, 700, 702, 703, 704, 709, 710, 712, 716, 717, 718, 723, 726, 730, 761, 762, 819, 825, 851, 853], "store": [4, 5, 9, 12, 20, 21, 23, 26, 28, 35, 36, 38, 39, 41, 42, 43, 44, 49, 50, 54, 56, 57, 58, 59, 61, 64, 142, 152, 153, 154, 158, 161, 171, 177, 180, 181, 192, 193, 194, 195, 197, 198, 199, 200, 207, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 232, 237, 241, 242, 243, 248, 250, 251, 253, 254, 255, 256, 261, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 299, 301, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 329, 330, 333, 335, 337, 339, 341, 414, 415, 416, 418, 419, 422, 423, 425, 427, 429, 431, 482, 544, 583, 592, 603, 604, 617, 618, 619, 631, 632, 633, 646, 654, 662, 674, 675, 676, 679, 689, 690, 691, 693, 703, 704, 705, 707, 718, 719, 721, 733, 753, 761, 769, 771, 779, 780, 853], "stream": [4, 5, 9, 12, 41, 46, 48, 55, 56, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 367, 386, 400, 403, 560, 563, 805], "oper": [4, 5, 6, 10, 11, 12, 17, 31, 37, 38, 41, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 59, 61, 62, 63, 65, 117, 151, 152, 153, 154, 160, 161, 177, 178, 184, 186, 187, 188, 189, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 342, 369, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 404, 409, 415, 416, 417, 418, 419, 420, 422, 423, 424, 428, 429, 430, 431, 544, 554, 555, 556, 557, 558, 559, 560, 561, 564, 565, 566, 567, 572, 576, 580, 582, 586, 588, 590, 591, 598, 603, 609, 610, 617, 618, 623, 624, 631, 632, 637, 638, 645, 648, 651, 653, 657, 661, 666, 667, 674, 682, 689, 696, 703, 710, 717, 724, 731, 735, 737, 738, 752, 755, 756, 765, 767, 785, 786, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 833, 842, 848, 850, 851, 858, 859, 861, 863], "attribut": [4, 5, 9, 10, 16, 17, 39, 44, 57, 117, 149, 150, 152, 154, 160, 161, 163, 864], "datatyp": [4, 5, 9, 14, 16, 57, 153, 192, 196, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "custom": [4, 5, 9, 14, 17, 32, 38, 46, 153, 744, 783, 863], "reduct": [4, 5, 9, 14, 16, 23, 44, 122, 123, 124, 125, 126, 127, 128, 153, 160, 161, 177, 262, 556, 564, 565, 812, 850, 852], "allgatherv": [4, 5, 6], "allreduc": [4, 5, 6, 12, 14, 17], "alltoallv": [4, 5, 6], "barrier": [4, 5], "broadcast": [4, 5, 6, 61, 68, 74, 86, 107, 110, 111, 114, 131, 141, 142, 144, 149, 153, 154, 156, 157, 165, 167, 169, 174, 745, 746, 750, 752, 753, 754, 758, 759, 761, 762, 763, 765, 766, 767, 769, 778, 780, 823], "reduc": [4, 5, 6, 14, 17, 50, 55, 57, 122, 123, 124, 125, 126, 127, 128, 150, 152, 153, 158, 168, 257, 262, 288, 292, 293, 299, 305, 321, 328, 333, 339, 366, 564, 742, 755, 767, 785], "reducescatt": [4, 5, 14, 17], "point": [4, 5, 10, 11, 20, 21, 23, 26, 28, 30, 31, 35, 36, 38, 42, 51, 55, 56, 57, 63, 64, 87, 151, 154, 156, 158, 160, 162, 165, 168, 169, 170, 171, 178, 180, 186, 219, 221, 222, 225, 226, 227, 228, 258, 259, 260, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 342, 350, 368, 381, 420, 421, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 469, 482, 518, 525, 534, 546, 558, 564, 565, 591, 614, 616, 628, 630, 642, 644, 671, 673, 686, 688, 700, 702, 714, 716, 728, 730, 785, 786, 787, 788, 790, 830, 839, 840, 841, 842, 843, 846, 854, 858], "send": [4, 5, 744, 776, 778], "recv": [4, 5], "progress": [4, 5, 9, 13, 16, 26, 150, 253, 254, 258], "track": [4, 5, 9, 13, 16, 91, 150, 253, 254, 422, 423], "error": [4, 5, 33, 45, 52, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 575, 782], "handl": [4, 5, 9, 10, 13, 33, 45, 61, 154, 169, 179, 255, 261, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 456, 457, 458, 459, 461, 463, 467, 471, 472, 474, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 515, 516, 518, 519, 520, 521, 522, 523, 524, 529, 530, 531, 532, 533, 536, 537, 538, 539, 541, 542, 548, 576, 579, 603, 614, 616, 618, 628, 630, 632, 642, 644, 661, 671, 673, 674, 686, 688, 689, 700, 702, 703, 714, 716, 717, 728, 730, 753, 754, 755, 756, 842], "except": [4, 5, 13, 15, 33, 38, 52, 61, 62, 64, 78, 79, 99, 150, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 348, 349, 352, 357, 360, 361, 365, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 392, 393, 394, 398, 399, 401, 405, 406, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 553, 565, 576, 588, 606, 676, 678, 688, 691, 702, 705, 716, 719, 730, 733, 742, 756, 771, 772, 777, 779, 783, 785, 828, 839, 841, 842, 843, 844, 845, 846, 850, 851, 855], "classif": [4, 5, 24, 25, 33, 44, 45, 46, 49, 51], "introduct": [5, 38, 45, 151, 169, 255, 260, 802, 833, 834], "ccl": [5, 9, 10, 11, 12, 13, 14], "current": [5, 9, 20, 26, 33, 41, 45, 153, 169, 171, 287, 289, 318, 363, 369, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 403, 404, 409, 411, 422, 423, 499, 511, 517, 518, 525, 546, 578, 597, 743, 747, 750, 763, 771, 772, 775, 779, 782, 785, 792, 794, 797, 800, 801, 829, 830, 839, 840, 841, 843, 845, 850, 855, 861], "version": [5, 20, 29, 33, 45, 59, 152, 155, 157, 174, 179, 269, 353, 388, 416, 454, 499, 519, 528, 552, 565, 574, 576, 783, 835, 843, 845], "gener": [5, 8, 11, 20, 40, 44, 45, 46, 49, 51, 53, 54, 59, 61, 64, 117, 155, 158, 161, 163, 165, 166, 167, 170, 171, 173, 176, 180, 186, 187, 188, 189, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 211, 212, 218, 219, 221, 222, 223, 224, 225, 237, 241, 242, 243, 248, 250, 251, 255, 259, 262, 264, 265, 268, 270, 272, 273, 276, 277, 286, 292, 293, 294, 295, 296, 299, 308, 314, 319, 327, 328, 329, 330, 333, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 418, 424, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 549, 558, 560, 564, 565, 574, 575, 578, 584, 593, 605, 620, 634, 647, 655, 663, 674, 677, 689, 692, 703, 706, 717, 720, 734, 759, 761, 766, 778, 783, 787, 816, 824, 834, 836, 837, 843, 845, 858, 862], "workflow": [5, 8, 46, 50, 257], "pattern": [6, 30, 63, 150, 152, 154, 261, 416, 553, 565, 568, 571, 802, 828], "occur": [6, 11, 31, 48, 180, 272, 273, 290, 323, 459, 482, 483, 515, 518, 519, 537, 558, 731, 753, 782], "up": [6, 13, 30, 45, 49, 59, 154, 166, 367, 391, 432, 433, 434, 435, 444, 445, 446, 447, 565, 588, 752, 763, 765, 844, 860], "out": [6, 9, 12, 13, 23, 31, 41, 42, 43, 57, 59, 62, 79, 80, 81, 82, 83, 84, 150, 152, 153, 155, 157, 160, 163, 166, 169, 172, 174, 180, 189, 221, 222, 223, 224, 225, 253, 254, 255, 256, 258, 260, 475, 482, 500, 527, 560, 580, 582, 653, 752, 762, 772, 828, 841], "cluster": [6, 20, 21, 24, 44, 45, 46], "node": [6, 26, 28, 46, 48, 142, 386, 579, 603, 618, 632, 661, 674, 689, 703, 717, 745, 746, 747, 748, 750, 751, 752, 753, 754, 756, 757, 759, 761, 763, 764, 765, 766, 769, 771, 772, 773, 774, 775, 776, 777, 778, 780, 782, 835, 842, 843], "dl": [6, 150], "reduce_scatt": [6, 9], "over": [6, 26, 38, 44, 57, 70, 78, 81, 83, 84, 101, 102, 122, 123, 124, 125, 126, 127, 128, 153, 157, 160, 161, 163, 171, 173, 177, 180, 301, 303, 335, 337, 360, 361, 405, 406, 413, 426, 428, 556, 557, 558, 564, 565, 767, 785, 787, 843, 850, 852, 854, 863], "optim": [6, 32, 45, 46, 51, 60, 61, 64, 87, 88, 150, 151, 152, 155, 158, 159, 162, 163, 164, 165, 166, 169, 171, 172, 261, 416, 419, 424, 427, 429, 431, 568, 569, 755], "priorit": [6, 767], "persist": [6, 14], "decoupl": 6, "time": [6, 20, 21, 23, 41, 44, 46, 47, 49, 52, 57, 59, 61, 64, 82, 83, 85, 114, 150, 152, 153, 155, 158, 160, 161, 162, 163, 164, 165, 166, 170, 172, 255, 256, 258, 259, 260, 261, 262, 264, 265, 268, 270, 272, 273, 276, 277, 290, 293, 294, 295, 296, 299, 301, 303, 323, 327, 328, 329, 330, 333, 335, 337, 369, 415, 416, 454, 562, 565, 566, 578, 750, 752, 755, 761, 765, 767, 780, 785, 792, 797, 826, 829, 831, 834, 836, 837, 839, 843, 845, 850, 853, 861], "repetit": 6, "section": [7, 16, 20, 21, 23, 26, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 64, 151, 152, 153, 155, 158, 160, 165, 180, 257, 261, 363, 367, 411, 546, 553, 555, 556, 557, 559, 564, 565, 566, 567, 568, 569, 570, 571, 574, 576, 577, 582, 583, 584, 585, 588, 589, 590, 592, 593, 595, 596, 597, 602, 603, 604, 605, 606, 607, 608, 614, 616, 618, 619, 620, 621, 622, 628, 630, 632, 633, 634, 635, 636, 642, 644, 645, 646, 647, 650, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665, 671, 673, 674, 675, 676, 677, 678, 680, 681, 686, 688, 689, 690, 691, 692, 694, 695, 700, 702, 703, 704, 705, 706, 708, 709, 714, 716, 717, 718, 719, 720, 722, 723, 728, 730, 731, 732, 733, 734, 735, 736, 742, 745, 747, 748, 750, 754, 755, 758, 759, 761, 763, 766, 769, 771, 772, 777, 779, 780, 781, 784, 786, 787, 788, 790, 792, 794, 797, 798, 799, 800, 801, 802, 807, 809, 843, 845, 846, 849, 850, 852, 855, 857, 858, 863], "describ": [7, 13, 23, 30, 32, 40, 43, 44, 52, 53, 54, 57, 58, 59, 61, 63, 64, 99, 100, 143, 150, 152, 153, 161, 169, 171, 178, 180, 186, 187, 188, 199, 211, 241, 261, 293, 327, 353, 354, 355, 356, 362, 391, 392, 402, 415, 416, 417, 418, 419, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 546, 548, 553, 559, 574, 577, 578, 584, 593, 597, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 781, 784, 785, 792, 797, 802, 807, 836, 837, 843, 845, 846, 849, 850, 852], "convent": [7, 61, 66, 69, 76, 78, 82, 89, 92, 93, 97, 103, 104, 107, 108, 119, 132, 134, 136, 145, 151, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 256, 341, 460, 577, 781, 802, 816, 833, 834, 859], "shall": [7, 9, 11, 13, 14, 15, 20, 21, 23, 26, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 52, 57, 150, 153, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431], "public": [7, 13, 20, 21, 23, 26, 29, 30, 31, 32, 35, 36, 38, 39, 40, 42, 43, 49, 52, 61, 62, 63, 64, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 258, 342, 346, 348, 349, 352, 353, 354, 355, 356, 357, 360, 361, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 469, 550, 551, 552, 553, 554, 555, 559, 561, 563, 565, 568, 569, 570, 571, 572, 577, 580, 582, 590, 603, 617, 618, 631, 632, 645, 653, 661, 674, 689, 703, 717, 743, 745, 746, 747, 748, 750, 754, 756, 757, 758, 759, 761, 763, 765, 766, 769, 771, 772, 777, 778, 779, 780, 786, 787, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 828, 829, 836, 839, 841, 842, 843, 844, 846, 848, 850, 851, 858, 861], "altern": [7, 20, 62, 150, 152, 170, 178, 179, 478, 529, 530, 538], "consid": [7, 44, 57, 59, 61, 62, 155, 158, 163, 179, 255, 256, 259, 260, 384, 577, 767, 816, 843], "alia": [7, 20, 21, 23, 26, 40, 49, 52, 59, 152, 160, 171, 561, 577, 582, 584, 590, 603, 618, 632, 634, 645, 647, 653, 655, 661, 663, 674, 689, 703, 706, 717, 720, 731, 734, 750, 754, 758, 759, 761, 766, 777, 786, 788, 790, 861], "pointtopoint": 9, "These": [9, 24, 37, 46, 51, 57, 59, 159, 177, 178, 180, 189, 256, 292, 341, 363, 367, 391, 411, 413, 454, 478, 529, 530, 538, 547, 560, 571, 580, 582, 590, 593, 600, 603, 605, 608, 613, 618, 620, 622, 627, 632, 634, 636, 641, 645, 647, 653, 661, 663, 665, 670, 674, 677, 681, 685, 689, 690, 692, 695, 699, 703, 704, 706, 709, 713, 717, 720, 723, 727, 731, 740, 744, 777, 785, 786, 788, 790, 858, 861], "mean": [9, 19, 23, 24, 41, 44, 45, 49, 52, 53, 54, 57, 59, 61, 63, 64, 71, 72, 73, 79, 80, 81, 82, 83, 84, 101, 102, 108, 109, 125, 142, 143, 150, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 172, 173, 174, 349, 352, 365, 379, 380, 385, 387, 399, 445, 447, 451, 482, 499, 560, 562, 755, 759, 775, 836, 843], "particip": [9, 13, 556, 571, 584, 593, 595, 596, 597, 605, 608, 614, 616, 620, 622, 628, 630, 634, 636, 644, 647, 655, 663, 665, 673, 677, 681, 686, 688, 692, 695, 700, 702, 706, 709, 716, 720, 723, 730, 732, 733, 734, 785, 840, 843, 844, 846, 853], "rank": [9, 12, 13, 59, 78, 85, 87, 88, 101, 102, 107, 118, 122, 123, 124, 125, 126, 127, 128, 150, 187, 188, 203, 204, 205, 209, 210, 211, 212, 214, 215, 234, 235, 239, 240, 241, 242, 243], "make": [9, 38, 40, 45, 46, 50, 52, 59, 107, 148, 152, 153, 154, 161, 255, 258, 259, 363, 391, 556, 558, 564, 565, 570, 572, 744, 748, 764, 767, 783, 837, 863, 864], "abil": [9, 13, 15, 38, 41, 180], "either": [9, 13, 35, 36, 38, 41, 44, 49, 55, 57, 61, 70, 71, 73, 81, 83, 84, 99, 100, 131, 150, 152, 155, 156, 157, 160, 161, 163, 164, 166, 167, 168, 170, 173, 174, 177, 180, 207, 216, 217, 237, 248, 250, 251, 255, 261, 288, 290, 305, 306, 307, 308, 323, 339, 340, 415, 454, 482, 519, 523, 550, 551, 560, 585, 589, 595, 602, 616, 630, 644, 652, 656, 660, 673, 675, 688, 690, 702, 704, 716, 718, 730, 742, 745, 754, 766, 837, 844, 846, 857], "addition": [9, 23, 107, 150, 152, 154, 177, 178, 255, 817], "accept": [9, 31, 40, 44, 49, 52, 57, 65, 70, 83, 84, 109, 148, 152, 177, 180, 344, 366, 454, 557, 558, 559, 564, 569, 734, 744, 745, 753, 754, 755, 759, 762, 763, 764, 766, 774, 779, 802, 807, 830, 840], "mai": [9, 10, 13, 14, 20, 38, 41, 47, 49, 51, 56, 57, 59, 61, 63, 64, 142, 143, 149, 150, 152, 153, 154, 156, 158, 161, 162, 168, 169, 170, 171, 177, 178, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 353, 354, 355, 356, 365, 376, 386, 388, 403, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 454, 519, 523, 556, 557, 558, 559, 561, 564, 565, 566, 569, 570, 572, 575, 576, 578, 580, 582, 590, 601, 603, 615, 618, 629, 632, 643, 645, 651, 653, 661, 672, 674, 687, 689, 701, 703, 715, 717, 729, 731, 744, 745, 752, 754, 759, 761, 762, 765, 766, 767, 773, 775, 776, 777, 785, 786, 787, 788, 790, 798, 799, 802, 807, 817, 824, 826, 837, 839, 843, 845, 851, 858, 861, 864], "vector": [9, 12, 13, 20, 21, 23, 26, 28, 38, 41, 44, 47, 60, 61, 64, 82, 83, 151, 153, 157, 158, 160, 162, 166, 170, 171, 174, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262, 264, 265, 268, 270, 271, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 341, 347, 353, 354, 355, 356, 366, 373, 380, 381, 391, 393, 395, 399, 400, 404, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 731, 732, 735, 736, 741, 742, 757, 782, 843], "input": [9, 13, 32, 39, 41, 44, 51, 53, 54, 57, 59, 63, 64, 65, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 350, 353, 354, 355, 356, 358, 365, 369, 381, 386, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 403, 404, 409, 415, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 556, 557, 560, 561, 563, 583, 584, 592, 593, 597, 604, 605, 614, 619, 620, 628, 633, 634, 642, 646, 647, 654, 655, 662, 663, 671, 676, 677, 686, 691, 692, 700, 705, 706, 714, 719, 720, 728, 732, 733, 734, 744, 745, 748, 750, 754, 755, 758, 759, 760, 761, 762, 764, 765, 766, 774, 777, 778, 804, 805, 807, 820, 822, 825, 826], "output": [9, 32, 44, 52, 54, 55, 57, 59, 61, 63, 64, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 343, 356, 365, 369, 380, 381, 395, 397, 402, 403, 404, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 556, 560, 561, 563, 578, 744, 745, 748, 750, 753, 754, 758, 759, 764, 765, 766, 768, 774, 778, 779, 821, 822, 823, 824, 826], "option": [9, 10, 13, 14, 39, 40, 41, 49, 56, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 221, 261, 270, 271, 284, 286, 292, 317, 319, 381, 415, 416, 417, 418, 419, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 558, 576, 614, 628, 642, 671, 686, 700, 714, 728, 807, 816, 817, 836, 864], "buffertyp": 9, "type": [9, 13, 20, 21, 23, 26, 31, 32, 33, 35, 36, 38, 39, 41, 42, 44, 45, 46, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 149, 150, 151, 152, 153, 154, 160, 177, 178, 180, 226, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 346, 347, 348, 349, 350, 352, 357, 359, 360, 361, 363, 365, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 393, 394, 398, 399, 401, 403, 405, 406, 407, 408, 411, 415, 417, 418, 422, 423, 426, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 480, 482, 488, 489, 490, 492, 501, 506, 521, 522, 532, 546, 549, 552, 553, 555, 556, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 571, 572, 573, 580, 582, 583, 584, 585, 588, 590, 592, 593, 595, 596, 597, 600, 603, 604, 605, 606, 607, 608, 613, 614, 616, 618, 619, 620, 621, 622, 627, 628, 630, 632, 633, 634, 635, 636, 641, 642, 644, 645, 646, 647, 650, 653, 654, 655, 656, 659, 661, 662, 663, 664, 665, 670, 671, 673, 674, 675, 676, 677, 678, 680, 681, 685, 686, 688, 689, 690, 691, 692, 694, 695, 699, 700, 702, 703, 704, 705, 706, 708, 709, 713, 714, 716, 717, 718, 719, 720, 722, 723, 727, 728, 730, 731, 732, 733, 734, 736, 740, 746, 747, 748, 750, 752, 754, 759, 762, 763, 764, 765, 767, 769, 771, 772, 773, 774, 776, 777, 778, 779, 780, 783, 786, 788, 790, 794, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 836, 840, 845, 846, 847, 848, 850, 852, 853, 854, 858, 861], "buf": [9, 177], "send_buf": 9, "recv_buf": 9, "At": [9, 41, 46, 78, 165], "least": [9, 29, 35, 36, 42, 44, 49, 61, 78, 153, 161, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 261, 262, 264, 265, 266, 268, 269, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 284, 286, 288, 290, 292, 293, 296, 297, 299, 301, 303, 305, 307, 308, 309, 311, 313, 314, 315, 317, 319, 321, 323, 325, 327, 330, 331, 333, 335, 337, 339, 341, 415, 417, 418, 426, 428, 430, 482, 622, 630, 636, 695, 702, 709, 742, 762, 772, 782, 842], "u": [9, 54, 160, 171, 172, 180, 270, 271, 272, 280, 286, 290, 307, 313, 316, 319, 323, 342, 413, 561, 786, 788, 790, 802, 864], "8": [9, 10, 30, 55, 56, 63, 64, 151, 153, 154, 342, 353, 354, 355, 356, 402], "16": [9, 10, 30, 55, 56, 63, 64, 151, 353, 354, 355, 356, 560], "32": [9, 10, 30, 55, 56, 63, 64, 151, 153, 341, 343, 345, 353, 355, 356, 359, 365, 367, 369, 390, 391, 395, 397, 400, 402, 404, 407], "64": [9, 10, 30, 180, 343, 355, 356, 358, 359, 365, 369, 397, 403, 407], "_t": [9, 171], "float": [9, 10, 20, 21, 23, 26, 30, 35, 36, 38, 42, 44, 50, 51, 55, 56, 57, 63, 64, 72, 85, 118, 151, 154, 155, 158, 159, 160, 163, 164, 168, 169, 170, 171, 174, 178, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 346, 348, 349, 352, 360, 362, 370, 371, 374, 375, 377, 378, 379, 380, 382, 383, 385, 387, 401, 405, 408, 425, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 560, 564, 565, 593, 605, 620, 674, 677, 679, 689, 692, 693, 703, 707, 717, 721, 841, 843], "cannot": [9, 31, 43, 44, 59, 61, 62, 64, 129, 152, 165, 166, 169, 177, 180, 258, 270, 570, 753, 754, 755, 763, 780, 792, 797, 824, 837, 843, 845, 863], "infer": [9, 29, 40, 44, 47, 49, 50, 51, 52, 56, 57, 61, 64, 150, 154, 160, 171], "argument": [9, 11, 13, 31, 40, 52, 57, 59, 61, 62, 117, 149, 153, 154, 177, 178, 180, 182, 183, 184, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 248, 250, 251, 253, 254, 258, 259, 261, 263, 266, 267, 269, 271, 274, 275, 278, 279, 282, 283, 285, 287, 289, 291, 293, 294, 297, 298, 300, 302, 304, 306, 309, 310, 312, 315, 316, 318, 320, 322, 324, 326, 327, 328, 331, 332, 334, 336, 338, 340, 356, 369, 397, 422, 423, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 552, 556, 557, 560, 564, 565, 566, 570, 572, 573, 582, 583, 584, 590, 592, 593, 603, 604, 605, 618, 619, 620, 632, 633, 634, 645, 646, 647, 653, 654, 655, 661, 662, 663, 674, 676, 677, 689, 691, 692, 703, 705, 706, 717, 719, 720, 731, 733, 734, 745, 750, 754, 759, 761, 763, 766, 770, 771, 777, 779, 782, 786, 788, 790, 807, 816, 817, 820, 821, 822, 823, 824, 825, 826, 827, 839, 840, 853, 861], "native_device_typ": [9, 13], "translat": 9, "native_stream_typ": [9, 13], "correspond": [9, 13, 14, 20, 28, 38, 49, 52, 56, 57, 59, 61, 62, 82, 83, 107, 122, 123, 124, 125, 126, 127, 128, 142, 150, 152, 153, 155, 156, 158, 159, 161, 162, 163, 165, 167, 168, 169, 172, 177, 178, 180, 255, 256, 258, 265, 288, 290, 296, 308, 314, 321, 323, 330, 341, 343, 365, 367, 393, 395, 404, 466, 477, 493, 495, 496, 497, 506, 512, 513, 518, 522, 524, 545, 546, 565, 575, 674, 689, 696, 703, 710, 717, 744, 758, 778, 779, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 807, 808, 811, 812, 813, 814, 815, 823, 825, 828, 829, 843, 850, 851, 852, 853, 855], "miss": [9, 41, 64, 788], "default": [9, 20, 21, 23, 26, 38, 39, 42, 43, 44, 45, 49, 61, 62, 64, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 118, 120, 122, 123, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 137, 139, 141, 142, 144, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 260, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 346, 348, 349, 352, 353, 354, 355, 356, 357, 360, 361, 367, 370, 371, 372, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 387, 388, 394, 395, 398, 401, 404, 405, 406, 408, 415, 417, 418, 420, 421, 426, 428, 430, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 557, 558, 559, 560, 561, 564, 568, 569, 570, 571, 575, 576, 580, 731, 732, 733, 742, 743, 745, 750, 754, 755, 756, 759, 763, 766, 767, 782, 786, 788, 790, 816, 838, 839, 842, 843, 844, 850, 851, 853, 855], "default_": 9, "operation_nam": 9, "_attr": 9, "compli": 9, "behavior": [9, 13, 14, 41, 43, 51, 62, 153, 155, 158, 160, 164, 165, 171, 177, 178, 255, 256, 259, 422, 423, 506, 556, 570, 580, 583, 585, 589, 591, 592, 595, 600, 602, 604, 614, 616, 619, 628, 630, 633, 642, 644, 646, 652, 654, 656, 660, 662, 671, 673, 675, 676, 686, 688, 690, 691, 700, 702, 704, 705, 714, 716, 718, 719, 728, 730, 731, 733, 735, 742, 748, 755, 761, 763, 767, 771, 777, 785, 786, 788, 790, 839, 841, 842, 843, 844, 845, 846, 857], "undefin": [9, 43, 56, 57, 59, 63, 64, 160, 171, 177, 255, 258, 259, 555, 561, 575, 580, 583, 585, 589, 591, 592, 595, 600, 602, 604, 614, 616, 619, 628, 630, 633, 642, 644, 646, 652, 654, 656, 660, 662, 671, 673, 675, 676, 686, 688, 690, 691, 700, 702, 704, 705, 714, 716, 718, 719, 728, 730, 731, 733, 735, 742, 748, 771, 777, 786, 788, 790, 829, 841, 843, 844, 845, 846, 857], "unless": [9, 30, 59, 61, 153, 160, 163, 176, 177, 180, 522, 546, 569, 859, 864], "within": [9, 32, 35, 36, 37, 38, 41, 42, 43, 46, 49, 61, 62, 150, 154, 160, 161, 177, 178, 180, 198, 219, 222, 225, 255, 260, 365, 506, 528, 553, 745, 750, 754, 759, 766, 840, 842, 843, 845, 858, 860], "singl": [9, 10, 13, 37, 41, 44, 55, 56, 57, 61, 63, 64, 117, 122, 123, 124, 125, 126, 127, 128, 150, 152, 153, 155, 158, 160, 161, 163, 169, 171, 180, 184, 191, 192, 198, 202, 219, 224, 225, 232, 243, 251, 255, 256, 257, 258, 259, 260, 261, 346, 353, 354, 355, 356, 370, 372, 382, 392, 409, 454, 475, 478, 479, 480, 481, 482, 488, 489, 490, 492, 500, 501, 506, 521, 522, 527, 529, 530, 531, 532, 533, 538, 539, 541, 546, 565, 747, 752, 753, 759, 765, 766, 769, 770, 771, 772, 777, 778, 780, 782, 783, 837, 839], "contribut": [9, 179, 864], "segment": [9, 341], "size": [9, 10, 12, 13, 35, 36, 38, 44, 55, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 353, 354, 355, 356, 359, 376, 380, 384, 393, 399, 400, 404, 414, 415, 417, 418, 422, 423, 426, 428, 430, 436, 439, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 550, 551, 552, 556, 558, 564, 565, 569, 570, 571, 572, 582, 589, 590, 603, 618, 632, 645, 661, 674, 679, 689, 693, 703, 707, 717, 721, 731, 732, 735, 742, 785, 818, 839, 843, 851, 858], "templat": [9, 14, 20, 21, 23, 26, 35, 36, 38, 39, 40, 42, 49, 52, 53, 61, 64, 160, 177, 178, 180, 253, 254, 255, 258, 259, 260, 263, 266, 267, 269, 271, 274, 275, 278, 279, 282, 283, 285, 287, 289, 291, 294, 297, 298, 300, 302, 304, 306, 309, 310, 312, 315, 316, 318, 320, 322, 324, 326, 328, 331, 332, 334, 336, 338, 340, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 393, 394, 398, 399, 401, 403, 405, 406, 407, 408, 411, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 454, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 570, 583, 584, 586, 587, 588, 591, 592, 593, 595, 596, 597, 598, 599, 604, 605, 608, 609, 610, 611, 614, 616, 617, 619, 620, 622, 623, 624, 625, 628, 630, 631, 633, 634, 636, 637, 638, 639, 642, 644, 646, 647, 648, 649, 650, 654, 655, 657, 658, 659, 662, 663, 665, 666, 667, 668, 671, 673, 676, 677, 681, 682, 683, 686, 688, 691, 692, 695, 696, 697, 700, 702, 705, 706, 709, 710, 711, 714, 716, 719, 720, 723, 724, 725, 728, 730, 732, 733, 734, 737, 738, 739, 745, 746, 747, 748, 750, 751, 754, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 780, 783, 786, 787, 788, 790, 793, 794, 802, 804, 807, 808, 811, 812, 814, 815, 816, 820, 821, 822, 823, 824, 825, 826, 827, 837, 840, 843, 845, 846, 849, 850, 851, 852, 853, 854, 858], "class": [9, 10, 11, 13, 14, 15, 17, 20, 21, 23, 24, 26, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49, 52, 56, 59, 61, 62, 64, 152, 153, 161, 171, 175, 176, 178, 179, 180, 253, 254, 255, 259, 260, 358, 363, 386, 403, 411, 415, 416, 417, 418, 419, 422, 423, 426, 427, 428, 429, 430, 431, 550, 551, 552, 554, 555, 559, 561, 562, 563, 568, 569, 570, 571, 572, 573, 584, 593, 605, 612, 620, 626, 634, 640, 647, 655, 663, 669, 677, 692, 706, 720, 734, 743, 745, 746, 747, 748, 749, 750, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 765, 766, 768, 769, 771, 772, 773, 776, 777, 778, 779, 780, 784, 786, 787, 788, 790, 803, 805, 807, 816, 817, 821, 827, 828, 829, 831, 835, 836, 839, 841, 842, 843, 844, 846, 848, 849, 850, 851, 854, 858, 859], "const": [9, 10, 13, 14, 20, 21, 23, 26, 30, 35, 36, 38, 39, 40, 42, 43, 44, 49, 50, 52, 53, 61, 62, 64, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 346, 348, 349, 352, 357, 360, 361, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 415, 416, 417, 418, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 564, 565, 566, 572, 578, 580, 581, 582, 583, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 648, 650, 651, 653, 654, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 745, 746, 747, 750, 752, 754, 755, 758, 759, 761, 763, 766, 767, 769, 771, 772, 777, 778, 779, 780, 786, 787, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 841, 842, 843, 844, 846, 848, 850, 851, 852, 853, 854, 856, 858, 861], "size_t": [9, 10, 12, 13, 14, 61, 62, 64, 160, 177, 198, 362, 451, 552, 560, 564, 572, 581, 590, 600, 745, 754, 758, 760, 763, 766, 768, 770, 777, 785, 786, 787, 788, 790, 803, 809, 819, 827, 839, 851, 854], "send_count": 9, "vector_class": [9, 13, 42, 180, 225], "recv_count": 9, "comm": [9, 12], "allgatherv_attr": [9, 14], "attr": [9, 10, 64, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "default_allgatherv_attr": 9, "dep": 9, "dtype": [9, 10, 43, 64], "local": [9, 13, 37, 41, 59, 150, 160, 161, 456, 457, 458, 459, 461, 463, 467, 471, 472, 474, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 515, 516, 518, 519, 520, 521, 522, 523, 524, 529, 530, 531, 532, 533, 536, 537, 538, 539, 541, 542, 547, 771, 834, 835, 850, 851, 852, 853, 855, 856, 858], "gather": 9, "number": [9, 13, 20, 21, 23, 26, 30, 38, 41, 42, 43, 44, 46, 47, 49, 60, 61, 62, 64, 69, 70, 71, 72, 73, 79, 80, 81, 82, 83, 84, 85, 87, 88, 108, 109, 118, 148, 150, 153, 154, 155, 156, 158, 160, 163, 165, 166, 167, 168, 171, 172, 173, 176, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 422, 423, 426, 428, 430, 436, 439, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 548, 556, 558, 560, 564, 566, 569, 571, 578, 586, 588, 592, 594, 598, 601, 608, 609, 615, 622, 623, 629, 630, 636, 637, 643, 644, 648, 651, 657, 665, 666, 672, 674, 676, 679, 681, 682, 687, 689, 691, 693, 695, 696, 701, 702, 703, 705, 707, 709, 710, 715, 716, 717, 719, 721, 723, 724, 729, 737, 741, 744, 745, 748, 750, 763, 770, 777, 788, 803, 809, 827, 839, 843, 845, 851, 856, 861], "larg": [9, 29, 257, 258, 366, 392, 459, 480, 482, 483, 488, 515, 519, 532, 537, 769], "enough": [9, 35, 36, 153, 482, 565, 863], "receiv": [9, 21, 150, 178, 553, 569, 744, 745, 746, 747, 748, 750, 752, 754, 758, 761, 763, 764, 766, 769, 771, 772, 774, 777, 778, 780, 805, 807, 841, 844, 847], "equal": [9, 10, 14, 26, 30, 38, 42, 43, 44, 59, 61, 64, 69, 87, 88, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 131, 142, 153, 155, 157, 160, 162, 163, 166, 167, 170, 177, 198, 199, 211, 255, 258, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 367, 402, 414, 417, 418, 426, 428, 430, 436, 439, 495, 496, 512, 513, 524, 546, 556, 558, 564, 566, 571, 575, 576, 578, 581, 586, 592, 597, 598, 604, 609, 610, 614, 617, 618, 619, 623, 624, 631, 633, 637, 638, 648, 657, 662, 666, 667, 671, 674, 676, 682, 684, 686, 689, 691, 696, 698, 703, 705, 709, 710, 712, 717, 719, 724, 726, 728, 737, 738, 750, 763, 767, 782, 785, 789, 809, 816, 819, 843, 851, 856], "expect": [9, 61, 63, 150, 151, 152, 153, 155, 158, 160, 161, 162, 163, 164, 165, 166, 170, 178, 180, 258, 259, 558, 731, 758, 761, 793, 794, 863], "posit": [9, 20, 21, 30, 61, 69, 70, 71, 72, 73, 79, 80, 81, 82, 83, 84, 99, 100, 101, 102, 103, 108, 109, 177, 180, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 221, 222, 223, 224, 225, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 263, 266, 267, 269, 271, 273, 274, 275, 278, 279, 282, 283, 285, 286, 287, 289, 291, 292, 294, 297, 298, 300, 302, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 324, 326, 328, 331, 332, 334, 336, 338, 340, 341, 380, 414, 415, 477, 491, 519, 523, 533, 534, 552, 558, 609, 623, 637, 666, 735, 737, 748, 763, 818, 828, 829], "caller": 9, "skip": [9, 353, 354, 355, 356, 358, 364, 386, 412], "explicitli": [9, 28, 40, 52, 63, 153, 156, 158, 168, 171, 177, 180, 255, 262, 263, 264, 265, 267, 268, 269, 271, 275, 279, 283, 285, 287, 288, 289, 291, 294, 298, 299, 300, 302, 304, 306, 310, 312, 316, 318, 320, 321, 322, 324, 326, 328, 332, 333, 334, 336, 338, 340, 454, 783, 785, 816, 841, 843, 846, 863], "return": [9, 10, 13, 14, 15, 20, 21, 23, 26, 35, 36, 37, 38, 40, 41, 42, 43, 44, 49, 52, 61, 62, 63, 64, 131, 142, 143, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 360, 361, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 393, 394, 397, 398, 399, 401, 405, 406, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 550, 551, 552, 553, 557, 558, 559, 560, 561, 563, 564, 565, 566, 572, 578, 580, 581, 583, 585, 586, 588, 589, 591, 592, 594, 595, 596, 597, 598, 600, 601, 604, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 619, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 633, 635, 636, 637, 638, 640, 641, 642, 643, 644, 646, 648, 650, 651, 654, 656, 657, 659, 660, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 690, 691, 693, 694, 695, 696, 698, 699, 700, 701, 702, 704, 705, 707, 708, 709, 710, 712, 713, 714, 715, 716, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 730, 732, 733, 735, 736, 737, 738, 740, 741, 745, 746, 747, 748, 750, 751, 752, 754, 755, 756, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 771, 772, 777, 778, 779, 780, 782, 785, 786, 787, 788, 789, 790, 792, 794, 797, 800, 801, 802, 803, 804, 805, 814, 815, 818, 819, 821, 822, 824, 825, 827, 828, 829, 839, 841, 842, 843, 844, 845, 846, 848, 850, 851, 852, 853, 854, 855, 856, 858, 861], "global": [9, 12, 150, 153, 160, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 771, 844, 845], "distribut": [9, 12, 13, 41, 45, 46, 51, 151, 176, 178, 261, 342, 346, 347, 348, 349, 350, 351, 352, 353, 357, 359, 360, 361, 362, 363, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 398, 399, 401, 405, 406, 407, 408, 410, 411, 413, 471, 472, 484, 485, 487, 546, 565, 571, 864], "count": [9, 38, 43, 44, 62, 69, 70, 142, 143, 255, 590, 603, 618, 632, 661, 674, 689, 703, 717, 731, 733, 750, 763, 769], "rtype": 9, "allreduce_attr": [9, 14], "default_allreduce_attr": 9, "have": [9, 32, 37, 41, 42, 43, 49, 51, 53, 55, 56, 57, 59, 61, 64, 82, 142, 143, 147, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 256, 258, 260, 264, 290, 293, 314, 315, 323, 327, 395, 413, 415, 454, 482, 499, 564, 565, 580, 586, 609, 623, 637, 648, 657, 666, 744, 752, 753, 755, 756, 759, 762, 764, 767, 771, 774, 786, 828, 829, 839, 841, 842, 843, 844, 845, 847, 851, 853, 856, 863], "dimens": [9, 59, 60, 61, 63, 64, 69, 70, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 99, 101, 102, 107, 108, 109, 115, 116, 118, 122, 123, 124, 125, 126, 127, 128, 131, 136, 142, 143, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 221, 222, 223, 224, 225, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 255, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 367, 380, 395, 404, 415, 422, 423, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453], "appli": [9, 20, 23, 39, 44, 49, 51, 52, 57, 59, 64, 66, 68, 76, 85, 86, 87, 88, 89, 92, 93, 95, 97, 103, 104, 105, 107, 110, 111, 114, 115, 118, 119, 122, 123, 124, 125, 126, 127, 128, 132, 134, 136, 141, 143, 144, 145, 153, 155, 156, 158, 159, 160, 162, 165, 168, 171, 177, 178, 180, 196, 197, 198, 199, 200, 201, 202, 211, 212, 218, 219, 221, 222, 223, 224, 225, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 261, 301, 302, 303, 304, 305, 306, 335, 336, 337, 338, 339, 340, 342, 358, 369, 381, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 404, 409, 413, 415, 416, 556, 557, 564, 755, 762, 779, 806, 808, 824, 839, 843, 845], "alltoal": 9, "separ": [9, 39, 44, 153, 155, 158, 163, 255, 256, 260, 261, 786, 813, 836, 840], "j": [9, 20, 23, 26, 29, 50, 59, 61, 105, 136, 164, 184, 191, 192, 198, 202, 219, 222, 225, 243, 251, 255, 258, 259, 341, 342, 392, 409, 414, 550, 551, 552, 803, 809], "th": [9, 20, 23, 26, 47, 50, 122, 123, 124, 125, 126, 127, 128, 153, 259, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 356, 369, 397, 402, 778, 803, 809], "sent": [9, 758, 759, 763], "place": [9, 37, 59, 142, 143, 150, 154, 155, 156, 157, 159, 160, 163, 173, 174, 177, 189, 218, 219, 221, 222, 223, 224, 225, 253, 254, 255, 256, 260, 544, 575, 597, 606, 614, 628, 642, 671, 674, 678, 686, 689, 700, 703, 714, 717, 728, 732, 733, 742, 843], "alltoallv_attr": [9, 14], "default_alltoallv_attr": 9, "onli": [9, 13, 20, 35, 36, 37, 38, 39, 41, 44, 49, 51, 55, 56, 57, 59, 61, 62, 63, 85, 87, 88, 102, 115, 116, 118, 150, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 177, 178, 180, 184, 189, 191, 192, 198, 200, 202, 219, 222, 225, 243, 251, 253, 254, 255, 256, 258, 259, 260, 265, 273, 277, 281, 284, 285, 286, 287, 296, 308, 314, 317, 318, 319, 320, 325, 330, 363, 366, 411, 416, 420, 459, 482, 506, 515, 519, 537, 552, 553, 554, 556, 561, 564, 569, 580, 582, 584, 585, 589, 590, 591, 593, 595, 596, 597, 600, 602, 603, 605, 608, 613, 614, 616, 618, 620, 622, 627, 628, 630, 632, 634, 636, 641, 644, 645, 647, 652, 653, 655, 656, 660, 661, 663, 665, 670, 673, 674, 675, 677, 681, 685, 686, 688, 689, 690, 692, 695, 699, 700, 702, 703, 704, 706, 709, 713, 716, 717, 718, 720, 723, 727, 730, 731, 732, 733, 734, 740, 742, 748, 750, 752, 759, 761, 765, 770, 780, 785, 786, 788, 790, 807, 837, 841, 843, 845, 854, 857, 858, 861], "after": [9, 21, 30, 38, 41, 44, 49, 52, 53, 57, 141, 150, 153, 154, 158, 180, 258, 259, 260, 296, 299, 305, 330, 333, 339, 454, 482, 550, 551, 558, 745, 750, 752, 754, 759, 766, 767, 775, 780, 792, 797, 803, 809, 817, 840, 843, 844, 848, 856], "barrier_attr": [9, 14], "default_barrier_attr": 9, "denot": [9, 20, 21, 23, 26, 47, 57, 59, 60, 70, 81, 83, 84, 108, 109, 115, 116, 157, 159, 305, 306, 339, 359, 472, 486, 534, 546, 595, 596, 597, 608, 616, 622, 630, 636, 644, 665, 673, 674, 681, 688, 689, 695, 702, 703, 709, 716, 717, 723, 730, 764, 774, 803, 836], "root": [9, 28, 123, 138, 160, 168, 470, 501, 503, 504, 520, 521, 536, 546, 560, 841], "broadcast_attr": [9, 14], "default_broadcast_attr": 9, "reduce_attr": [9, 14], "default_reduce_attr": 9, "ignor": [9, 61, 69, 70, 73, 83, 84, 99, 100, 108, 109, 153, 158, 159, 356, 369, 397, 559, 743, 803, 839, 843], "get": [9, 13, 14, 23, 44, 50, 64, 150, 171, 362, 410, 499, 500, 544, 547, 748, 758, 761, 763, 765, 769, 780, 851], "scatter": 9, "reduce_scatter_attr": [9, 14], "default_reduce_scatter_attr": 9, "comm_siz": 9, "two": [9, 28, 31, 40, 44, 47, 52, 59, 60, 61, 62, 63, 64, 68, 86, 107, 110, 111, 114, 129, 131, 141, 144, 152, 153, 165, 166, 169, 171, 180, 182, 189, 192, 193, 194, 195, 202, 210, 215, 221, 224, 226, 228, 232, 235, 236, 240, 248, 250, 253, 254, 255, 256, 258, 259, 261, 344, 355, 356, 363, 365, 366, 367, 390, 397, 411, 413, 414, 416, 422, 423, 454, 465, 466, 495, 496, 501, 512, 513, 519, 522, 524, 526, 546, 550, 551, 552, 557, 560, 561, 564, 565, 598, 609, 623, 637, 666, 682, 696, 710, 724, 737, 748, 753, 767, 785, 786, 788, 790, 802, 816, 817, 818, 819, 828, 836, 845, 851, 859, 861], "so": [9, 20, 52, 57, 61, 63, 150, 153, 154, 161, 165, 171, 180, 197, 199, 200, 211, 212, 219, 222, 225, 241, 242, 255, 256, 261, 265, 266, 270, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 341, 403, 413, 415, 454, 459, 480, 483, 488, 515, 519, 532, 537, 552, 557, 558, 559, 564, 565, 752, 753, 777, 813, 850, 863], "post": [9, 52, 56, 57, 153, 160], "doe": [9, 11, 13, 15, 23, 38, 40, 42, 48, 49, 51, 52, 53, 57, 59, 61, 63, 66, 67, 91, 92, 93, 94, 97, 98, 104, 112, 113, 119, 121, 129, 130, 132, 138, 140, 141, 145, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 197, 198, 199, 200, 207, 237, 255, 257, 259, 262, 264, 265, 268, 353, 388, 455, 459, 460, 462, 464, 465, 466, 468, 473, 476, 477, 480, 483, 488, 493, 494, 495, 496, 498, 501, 505, 512, 513, 514, 515, 517, 519, 525, 526, 532, 535, 537, 540, 542, 543, 556, 557, 564, 565, 571, 588, 591, 593, 603, 605, 614, 618, 620, 628, 632, 634, 642, 647, 650, 659, 661, 663, 671, 674, 677, 686, 689, 692, 700, 703, 706, 714, 717, 720, 728, 731, 748, 750, 758, 763, 771, 780, 785, 793, 794, 807, 828, 829, 839, 842, 843, 844, 845, 850, 853, 864], "proce": [9, 358, 364, 386, 403, 412, 798, 799], "concurr": [9, 153, 180, 553, 560, 564, 566, 580, 582, 583, 585, 590, 591, 592, 595, 596, 600, 601, 603, 604, 608, 615, 618, 619, 622, 629, 632, 633, 636, 643, 645, 646, 651, 653, 654, 656, 661, 662, 665, 672, 674, 675, 676, 681, 687, 689, 690, 691, 695, 701, 703, 704, 705, 709, 715, 717, 718, 719, 723, 729, 731, 733, 735, 744, 745, 752, 754, 755, 756, 759, 765, 766, 778, 782, 798, 799, 810, 817, 818, 841, 843, 845, 846, 850, 851, 853, 858, 859], "destin": [9, 31, 54, 55, 57, 59, 61, 79, 91, 150, 153, 154, 156, 157, 158, 159, 160, 162, 165, 168, 169, 170, 171, 172], "sourc": [9, 32, 44, 45, 46, 50, 54, 55, 57, 59, 61, 79, 150, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 168, 169, 170, 171, 172, 177, 224, 363, 396, 411, 603, 614, 618, 628, 632, 642, 661, 671, 674, 686, 689, 700, 703, 714, 717, 728, 836, 863], "As": [9, 55, 57, 59, 150, 153, 154, 155, 169, 178, 180, 255, 258, 342, 548, 556, 762, 843, 863], "For": [9, 20, 21, 23, 26, 29, 30, 32, 41, 44, 45, 51, 53, 54, 55, 56, 57, 59, 61, 63, 64, 85, 87, 88, 99, 100, 107, 118, 122, 123, 124, 125, 126, 127, 128, 150, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 177, 178, 180, 184, 191, 192, 193, 198, 202, 219, 222, 224, 225, 243, 250, 251, 255, 256, 257, 259, 260, 261, 286, 319, 327, 341, 342, 344, 363, 365, 366, 367, 392, 451, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 556, 558, 564, 565, 576, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 744, 752, 755, 757, 767, 783, 784, 785, 786, 788, 790, 799, 802, 813, 816, 829, 836, 837, 844, 859, 861], "inform": [9, 29, 38, 41, 43, 44, 45, 52, 53, 54, 61, 64, 150, 160, 165, 177, 179, 261, 342, 425, 436, 444, 469, 556, 565, 574, 577, 782, 785, 787, 809, 834, 835, 836, 864], "ccl_api": 9, "pt2pt_attr": 9, "default_pt2pt_attr": 9, "enum": [10, 14, 17, 33, 39, 43, 56, 59, 61, 62, 63, 153, 160, 171, 180, 260, 415, 416, 417, 418, 419, 422, 423, 426, 427, 428, 429, 430, 431, 562, 775, 785, 790, 839, 841, 843, 847, 851], "int8": [10, 30, 56, 58, 63, 85, 118, 153, 154, 158, 162, 165, 168, 169, 171], "unspecifi": [10, 11, 14, 17, 62, 177, 180, 506, 582, 583, 588, 590, 592, 597, 603, 604, 614, 618, 619, 622, 628, 630, 632, 633, 636, 642, 644, 645, 646, 650, 653, 654, 659, 661, 662, 671, 674, 676, 686, 689, 691, 695, 700, 702, 703, 705, 709, 714, 716, 717, 719, 728, 731, 732, 733, 745, 750, 754, 755, 766, 773, 776, 786, 788, 790, 838, 843, 850, 853, 861], "uint8": [10, 30], "int16": [10, 30, 57], "uint16": [10, 30], "int32": [10, 30, 57], "uint32": [10, 30], "int64": [10, 30], "uint64": [10, 30], "float16": [10, 49], "float32": [10, 30, 44], "float64": [10, 30, 44], "bfloat16": [10, 30, 49, 51, 56, 58, 64, 151, 183, 193, 197, 198, 220, 226, 231], "last_predefin": 10, "largest": [10, 14, 23, 216, 386, 771, 777, 786], "abov": [10, 14, 23, 59, 107, 131, 150, 153, 155, 159, 162, 211, 241, 255, 258, 259, 262, 264, 265, 268, 288, 321, 555, 557, 765, 767, 802, 807, 828, 829, 836, 843], "bit": [10, 30, 55, 56, 63, 64, 151, 153, 154, 178, 180, 342, 343, 345, 353, 354, 355, 356, 359, 365, 367, 369, 388, 389, 390, 391, 395, 397, 400, 402, 404, 407, 506], "sign": [10, 29, 30, 47, 56, 57, 63, 64, 153, 154, 177, 477, 482, 497, 498, 524, 534, 541, 546, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731], "integ": [10, 20, 21, 30, 42, 56, 57, 60, 63, 64, 130, 151, 153, 154, 177, 180, 184, 189, 191, 192, 198, 199, 202, 243, 251, 256, 259, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 343, 344, 347, 356, 365, 369, 370, 372, 373, 382, 384, 391, 393, 394, 397, 398, 399, 400, 402, 406, 414, 425, 473, 481, 494, 497, 505, 514, 517, 519, 523, 524, 525, 526, 533, 541, 542, 543, 546, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 777, 816, 818, 845], "unsign": [10, 30, 56, 62, 63, 64, 153, 154, 160, 171, 178, 391, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 761, 767, 779, 818, 843], "half": [10, 55, 56, 63, 64, 183, 193, 197, 198, 220, 226, 231, 259, 550, 551, 552, 583, 592, 597, 604, 614, 616, 619, 628, 630, 633, 642, 644, 646, 654, 662, 671, 673, 676, 686, 688, 691, 700, 702, 705, 714, 716, 719, 728, 730, 732, 733, 858], "precis": [10, 51, 55, 56, 57, 59, 61, 64, 147, 153, 158, 169, 181, 182, 183, 184, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546], "non": [10, 13, 14, 15, 28, 31, 41, 43, 56, 57, 59, 63, 64, 69, 79, 80, 81, 82, 83, 84, 89, 90, 99, 103, 108, 109, 152, 158, 160, 161, 163, 169, 171, 177, 221, 222, 223, 224, 244, 245, 246, 247, 249, 252, 255, 256, 259, 260, 261, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 367, 386, 396, 414, 422, 423, 439, 475, 480, 482, 488, 500, 515, 519, 522, 527, 532, 546, 558, 580, 747, 750, 755, 767, 769, 780, 783, 792, 793, 794, 797, 798, 799, 800, 801, 807, 837, 843, 860], "7": [10, 55, 56, 63, 64, 391, 392, 403, 454, 767], "mantissa": [10, 55, 56, 63, 64, 153], "wai": [10, 13, 23, 37, 38, 41, 55, 61, 65, 131, 152, 153, 157, 158, 160, 161, 169, 174, 177, 180, 258, 356, 369, 397, 414, 550, 551, 568, 788, 798, 799, 802, 816], "regist": [10, 342, 367, 391, 395, 400, 404, 475, 500, 527, 744, 778], "deregist": 10, "datatype_attr": 10, "list": [10, 13, 14, 37, 38, 41, 43, 52, 56, 64, 69, 70, 79, 80, 81, 82, 83, 84, 85, 99, 100, 108, 109, 118, 122, 123, 124, 125, 126, 127, 128, 143, 150, 159, 160, 171, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 292, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 358, 365, 381, 403, 415, 416, 417, 418, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 746, 753, 758, 761, 763, 769, 777, 780, 783], "fill": [10, 14, 38, 131, 177, 178, 410, 420, 421, 422, 423, 424, 430, 451, 454, 731], "datatype_attr_id": 10, "byte": [10, 38, 41, 44, 61, 64, 153, 785, 786, 787, 788, 790], "create_datatype_attr": 10, "register_datatyp": 10, "deregister_datatyp": 10, "retriev": [10, 13, 15, 40, 151, 180, 260], "get_datatype_s": 10, "reli": [11, 23, 30, 31, 39, 51, 54, 169, 180, 558, 564], "propag": [11, 31, 54, 60, 61, 102, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 180], "where": [11, 13, 20, 21, 23, 26, 28, 30, 31, 41, 44, 46, 49, 54, 57, 59, 61, 65, 69, 72, 78, 82, 83, 85, 87, 88, 101, 102, 113, 118, 121, 122, 123, 124, 125, 126, 127, 128, 136, 142, 153, 154, 155, 156, 157, 158, 162, 163, 164, 166, 168, 170, 171, 172, 173, 177, 178, 180, 181, 182, 183, 184, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 348, 349, 352, 356, 357, 358, 360, 361, 369, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 387, 391, 393, 394, 397, 398, 399, 401, 402, 403, 405, 406, 408, 413, 415, 417, 418, 422, 423, 426, 428, 430, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 550, 551, 553, 556, 558, 561, 564, 565, 566, 569, 571, 576, 578, 582, 584, 590, 593, 603, 605, 606, 608, 614, 618, 620, 622, 628, 632, 634, 636, 642, 645, 647, 653, 655, 661, 663, 665, 671, 674, 677, 678, 681, 686, 689, 692, 695, 700, 703, 706, 709, 714, 717, 720, 723, 728, 731, 734, 750, 754, 758, 759, 761, 777, 783, 786, 788, 790, 802, 813, 836, 843, 849, 853, 861, 863], "caught": [11, 31, 180, 843, 844], "align": [11, 31, 131, 175, 176, 179, 180, 255, 258, 413, 785, 786, 787], "introduc": [11, 31, 37, 180, 261, 343, 365, 546, 829, 836, 863], "hierarchi": [11, 31, 32, 180], "throw": [11, 13, 15, 31, 38, 52, 61, 64, 150, 152, 153, 155, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 348, 349, 352, 357, 360, 361, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 392, 393, 394, 398, 399, 401, 405, 406, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 545, 576, 606, 678, 731, 735, 742, 761, 771, 777, 828, 839, 842, 846], "inherit": [11, 59, 61, 62, 64, 180, 744, 758, 761, 836, 841], "std": [11, 12, 20, 21, 23, 26, 30, 31, 35, 36, 38, 39, 42, 43, 44, 50, 60, 61, 64, 151, 152, 153, 157, 160, 170, 174, 175, 177, 178, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 350, 353, 354, 355, 356, 357, 358, 359, 361, 369, 370, 372, 373, 375, 380, 381, 382, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 406, 407, 409, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 553, 557, 566, 572, 580, 581, 582, 583, 584, 589, 590, 591, 592, 593, 595, 597, 600, 602, 603, 604, 605, 606, 608, 614, 616, 618, 619, 620, 622, 628, 630, 632, 633, 634, 636, 642, 644, 645, 646, 647, 652, 653, 654, 655, 660, 661, 662, 663, 665, 671, 673, 674, 676, 677, 678, 681, 686, 688, 689, 691, 692, 695, 700, 702, 703, 705, 706, 709, 714, 716, 717, 719, 720, 723, 728, 730, 731, 732, 733, 734, 735, 742, 745, 748, 750, 752, 754, 758, 759, 761, 765, 766, 767, 770, 771, 777, 778, 779, 782, 784, 786, 787, 788, 789, 790, 804, 807, 819, 842, 843, 845, 848, 851], "deriv": [11, 31, 43, 52, 156, 157, 160, 161, 166, 168, 174, 180, 844], "check": [11, 15, 35, 36, 38, 42, 61, 64, 129, 150, 153, 164, 343, 344, 575, 586, 648, 657, 848], "howev": [11, 55, 56, 57, 59, 61, 150, 153, 155, 157, 159, 163, 165, 166, 172, 173, 180, 258, 284, 317, 353, 363, 388, 416, 422, 423, 478, 479, 481, 529, 530, 531, 533, 538, 539, 541, 552, 556, 558, 565, 731, 785, 786, 829, 839, 840, 842, 843, 846, 853], "condit": [11, 20, 26, 44, 52, 131, 171, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 350, 353, 354, 355, 356, 369, 388, 389, 390, 391, 392, 397, 400, 402, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 545, 570, 598, 674, 682, 688, 689, 696, 703, 710, 716, 717, 724, 798, 799, 828, 839, 842, 846, 864], "fit": [11, 41, 44, 48, 180, 459, 483, 515, 519, 537, 837], "ani": [11, 13, 14, 30, 32, 38, 44, 49, 55, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 341, 376, 381, 414, 421, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 455, 459, 460, 462, 464, 465, 466, 468, 473, 476, 477, 481, 482, 493, 494, 495, 496, 498, 501, 512, 513, 514, 515, 517, 519, 522, 525, 526, 534, 535, 537, 540, 543, 545, 558, 564, 565, 578, 580, 588, 591, 600, 674, 689, 703, 717, 731, 744, 746, 747, 748, 753, 755, 758, 761, 765, 771, 772, 777, 783, 785, 786, 787, 802, 803, 809, 816, 824, 826, 829, 837, 839, 840, 842, 843, 845, 848, 853, 864], "invalid_argu": [11, 31, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 348, 349, 352, 357, 360, 361, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 392, 393, 394, 398, 399, 401, 405, 406, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 545], "were": [11, 62, 177, 180, 255, 265, 273, 277, 281, 286, 296, 308, 314, 319, 330, 400, 422, 423, 557, 771, 785, 786, 842, 853], "reject": [11, 180, 344, 366, 745, 753, 754, 759, 763, 766, 777], "host_bad_alloc": [11, 31, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 262, 264, 268, 270, 272, 276, 280, 284, 286, 288, 290, 293, 295, 299, 301, 303, 305, 307, 311, 313, 317, 319, 321, 323, 325, 327, 329, 333, 335, 337, 339, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 545], "dure": [11, 13, 26, 31, 38, 39, 41, 44, 51, 57, 59, 61, 64, 142, 147, 150, 152, 153, 154, 155, 158, 159, 161, 163, 164, 165, 166, 180, 261, 262, 264, 265, 268, 270, 272, 276, 280, 281, 284, 286, 288, 290, 293, 295, 299, 301, 303, 305, 307, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 395, 404, 422, 423, 425, 475, 482, 500, 527, 756, 775, 782, 785, 820, 821, 822, 824, 825, 826, 827, 837, 850], "unimpl": [11, 31, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431], "request": [11, 35, 36, 150, 152, 160, 258, 284, 317, 785, 787, 795, 796, 829, 840, 841, 846, 847, 851], "unsupport": [11, 31, 150], "built": [12, 13, 150], "Its": [12, 13, 37, 178, 562, 731, 775], "band": [12, 13, 187, 196, 206, 230, 244, 245, 246, 247, 249, 252, 341], "exampl": [12, 13, 30, 32, 37, 40, 43, 44, 45, 46, 49, 51, 55, 56, 59, 61, 63, 64, 85, 87, 88, 91, 107, 118, 122, 123, 124, 125, 126, 127, 128, 131, 142, 150, 151, 152, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 175, 219, 222, 225, 257, 363, 365, 386, 396, 403, 411, 454, 525, 550, 551, 552, 567, 576, 580, 582, 584, 590, 593, 603, 605, 618, 620, 632, 634, 645, 647, 653, 655, 661, 663, 674, 677, 689, 692, 703, 706, 717, 720, 731, 734, 757, 783, 786, 788, 790, 802, 803, 809, 813, 816, 828, 835, 836, 837, 846, 859, 861, 864], "mpi": 12, "mpi_rank": 12, "mpi_siz": 12, "mpi_init": 12, "argc": 12, "argv": 12, "mpi_comm_rank": 12, "mpi_comm_world": 12, "mpi_comm_s": 12, "shared_ptr_class": [12, 13], "kv": [12, 13], "address_typ": [12, 13], "kvs_addr": 12, "create_main_kv": [12, 13], "get_address": [12, 13], "mpi_bcast": 12, "address_max_s": [12, 13], "mpi_byt": 12, "els": [12, 99, 100, 192, 251, 560], "create_kv": [12, 13], "create_commun": [12, 13], "per": [12, 13, 63, 79, 80, 81, 83, 85, 87, 88, 101, 102, 116, 118, 177, 178, 180, 679, 693, 707, 721, 849, 851, 853], "sycl_context": 12, "sycl_devic": 12, "sycl_queu": 12, "ccl_context": 12, "create_context": [12, 13], "ccl_devic": 12, "idx": [12, 38, 156, 157, 160, 174, 184, 191, 192, 198, 202, 219, 222, 225, 243, 251, 362, 386, 392, 409], "push_back": [12, 731], "create_devic": [12, 13], "r2d_map": 12, "dev": [12, 151], "uniqu": [12, 14, 23, 42, 43, 44, 64, 122, 123, 124, 125, 126, 127, 128, 150, 153, 255, 256, 590, 603, 661, 674, 717, 843, 845, 851], "ccl_stream": 12, "create_stream": [12, 13], "choic": [12, 258, 376, 550, 551, 564, 836], "wait": [12, 15, 38, 61, 62, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 381, 410, 415, 416, 417, 418, 419, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 558, 588, 744, 750, 752, 792, 797, 837, 842, 843, 844, 846], "e": [12, 20, 29, 32, 41, 43, 44, 47, 51, 57, 59, 89, 92, 101, 102, 105, 112, 113, 132, 134, 136, 150, 153, 155, 157, 159, 162, 163, 173, 177, 180, 255, 258, 259, 260, 261, 262, 288, 321, 342, 357, 375, 378, 422, 423, 471, 484, 485, 486, 487, 491, 546, 752, 780, 842, 858], "here": [13, 55, 57, 59, 61, 78, 82, 99, 100, 153, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 783, 828, 836, 842, 864], "nativ": [13, 15, 153, 258, 260, 851, 853], "native_context_typ": 13, "native_event_typ": [13, 15], "card": [13, 62, 150, 152], "instanc": [13, 20, 21, 23, 26, 38, 39, 40, 42, 43, 44, 45, 51, 54, 153, 158, 160, 169, 177, 178, 180, 224, 253, 254, 258, 259, 572, 580, 743, 744, 764, 771, 774, 777, 786, 788, 790, 793, 794, 816, 817, 820, 821, 822, 823, 824, 825, 826, 827, 842, 843, 844, 848, 850, 851, 852, 853], "native_devic": 13, "exist": [13, 38, 61, 151, 152, 154, 177, 596, 597, 608, 614, 616, 622, 630, 636, 644, 665, 671, 673, 681, 686, 688, 695, 702, 709, 716, 723, 728, 730, 731, 743, 839, 842, 843, 848, 850, 851, 855, 863], "get_n": [13, 15], "wrap": [13, 15, 35, 36, 38, 41, 42, 43, 558, 843], "respons": [13, 38, 40, 42, 44, 47, 52, 57, 59, 61, 63, 150, 160, 161, 180, 257, 259, 564, 744, 745, 755], "manag": [13, 32, 38, 45, 46, 150, 180, 257, 454, 679, 693, 707, 721, 744, 745, 747, 772, 789, 840, 843], "resourc": [13, 150, 180, 787, 789, 831], "native_context": 13, "kvs_interfac": 13, "establish": [13, 161, 863], "connect": [13, 41, 44, 148, 150, 162, 580, 743, 744, 763, 778, 780, 843], "between": [13, 26, 38, 39, 44, 55, 57, 59, 61, 62, 63, 64, 69, 82, 108, 109, 129, 150, 152, 153, 156, 161, 169, 180, 182, 184, 191, 192, 193, 194, 195, 198, 202, 219, 222, 224, 225, 232, 243, 251, 255, 260, 261, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 343, 365, 512, 513, 525, 526, 546, 565, 580, 744, 745, 752, 754, 764, 766, 774, 786, 788, 790, 791, 818, 845, 861], "creation": [13, 38, 40, 41, 44, 52, 57, 64, 152, 153, 154, 158, 160, 165, 177, 342, 451, 844], "record": [13, 39, 44, 150], "char": [13, 14, 39, 160, 550, 551, 578, 752], "string_class": 13, "given": [13, 20, 21, 23, 26, 28, 30, 39, 44, 47, 61, 66, 68, 86, 104, 110, 111, 112, 114, 115, 117, 122, 123, 124, 125, 126, 127, 128, 138, 140, 141, 144, 147, 150, 153, 154, 177, 180, 184, 186, 191, 192, 198, 202, 219, 222, 225, 226, 227, 228, 229, 236, 243, 251, 253, 254, 257, 258, 259, 260, 261, 262, 313, 314, 346, 348, 349, 350, 351, 352, 357, 360, 361, 363, 364, 365, 368, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 411, 412, 471, 472, 475, 484, 486, 487, 499, 500, 527, 528, 547, 550, 551, 552, 556, 564, 565, 760, 762, 768, 782, 785, 816, 829, 837, 843, 844, 861], "empti": [13, 38, 41, 43, 56, 61, 62, 63, 64, 115, 122, 123, 124, 125, 126, 127, 128, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 482, 534, 550, 551, 552, 580, 582, 588, 589, 590, 596, 597, 603, 614, 616, 618, 628, 630, 632, 642, 644, 645, 650, 653, 659, 660, 661, 671, 673, 674, 686, 688, 689, 700, 702, 703, 714, 716, 717, 728, 730, 731, 747, 749, 759, 761, 771, 772, 775, 777, 816, 841, 842, 843, 845, 846, 848, 851, 856], "save": [13, 164, 166, 261, 482, 565, 762, 775], "remov": [13, 61, 122, 123, 124, 125, 126, 127, 128, 180, 589, 597, 602, 616, 630, 644, 652, 660, 673, 688, 702, 716, 730, 742, 747, 753, 762, 774, 775, 777, 843, 850, 851], "static": [13, 38, 42, 57, 62, 63, 353, 354, 355, 356, 369, 388, 389, 390, 391, 392, 395, 397, 400, 402, 404, 409, 436, 565, 567, 571, 581, 767, 780, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 828, 829, 839, 843, 861], "constexpr": [13, 35, 36, 38, 39, 177, 178, 353, 354, 355, 356, 369, 388, 389, 390, 391, 392, 395, 397, 400, 402, 404, 409, 436, 451, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 828, 829], "256": 13, "array_class": 13, "overrid": [13, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 787, 843, 844], "addr": 13, "homogen": [13, 32, 35, 36, 37, 38, 41, 43, 44, 45], "user": [13, 17, 20, 38, 40, 41, 42, 44, 51, 52, 55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 219, 222, 225, 253, 254, 255, 257, 258, 259, 260, 261, 363, 395, 404, 413, 416, 421, 454, 482, 556, 564, 744, 745, 754, 759, 762, 763, 765, 766, 777, 784, 837, 840, 841, 842, 843, 863], "suppli": [13, 180, 213, 214, 215, 233, 234, 235, 246, 247, 263, 265, 266, 267, 269, 271, 273, 274, 275, 277, 278, 279, 281, 282, 283, 285, 287, 289, 291, 294, 296, 297, 298, 299, 300, 302, 304, 305, 306, 308, 309, 310, 312, 314, 315, 316, 318, 320, 322, 324, 326, 328, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 784], "thei": [13, 14, 31, 38, 41, 57, 59, 61, 62, 99, 101, 102, 150, 152, 153, 154, 155, 158, 159, 162, 163, 166, 171, 178, 180, 219, 222, 225, 260, 270, 454, 479, 481, 531, 533, 539, 541, 544, 567, 586, 590, 598, 603, 609, 618, 623, 632, 637, 644, 645, 648, 657, 661, 666, 674, 682, 689, 696, 702, 703, 710, 717, 724, 731, 737, 744, 752, 758, 761, 762, 765, 783, 786, 788, 790, 795, 796, 802, 829, 837, 859, 861], "map_class": 13, "rank_device_map": 13, "total": [13, 63, 83, 153, 184, 191, 192, 198, 202, 219, 222, 225, 243, 251, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 358, 403, 564, 565, 765, 802, 839, 843], "wire": 13, "wa": [13, 31, 150, 163, 166, 180, 258, 259, 272, 273, 290, 323, 402, 578, 580, 588, 597, 616, 630, 644, 650, 659, 673, 688, 702, 716, 730, 745, 746, 748, 754, 756, 758, 759, 766, 777, 778, 785, 813, 829, 843, 844, 850, 855, 856], "get_devic": [13, 62], "get_context": [13, 62], "encapsul": [13, 44, 61, 62, 150, 151, 152, 161, 179, 180, 256, 258, 259, 748], "native_stream": 13, "create_ev": 13, "native_ev": 13, "modifi": [14, 23, 153, 158, 160, 165, 177, 186, 228, 229, 258, 363, 411, 415, 430, 580, 590, 596, 603, 608, 618, 622, 632, 636, 645, 661, 665, 674, 681, 689, 695, 703, 709, 717, 723, 839, 851, 864], "operation_attr_id": 14, "prioriti": [14, 31, 645, 646, 648, 650, 744, 745, 750, 754, 766, 771, 785, 843], "to_cach": 14, "match_id": 14, "last_valu": 14, "conjunct": [14, 57, 561, 564, 567], "cach": [14, 64, 150, 152, 161, 568, 786, 787], "extend": [14, 30, 41, 43, 151, 180, 189, 292, 353, 354, 355, 356, 369, 390, 391, 392, 395, 397, 400, 402, 404, 409, 755, 829], "allreduce_attr_id": 14, "reduction_fn": [14, 17], "reduce_attr_id": 14, "reduce_scatter_attr_id": 14, "signatur": [14, 454, 567, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 850, 852], "typedef": [14, 748, 767, 780, 785, 836], "in_buf": 14, "in_count": 14, "inout_buf": 14, "out_count": 14, "fn_context": 14, "struct": [14, 20, 21, 23, 26, 30, 49, 61, 62, 64, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 436, 557, 564, 567, 677, 692, 706, 720, 743, 752, 762, 765, 767, 777, 843], "offset": [14, 30, 38, 59, 61, 85, 87, 88, 118, 152, 180, 184, 191, 192, 198, 199, 202, 219, 222, 225, 243, 251, 255, 260, 353, 354, 355, 356, 359, 366, 403], "opattrtyp": 14, "create_operation_attr": 14, "manner": [15, 61, 475, 500, 527], "statu": [15, 64, 150, 152, 180, 260, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 846, 847], "signal": [15, 534, 744, 840], "bool": [15, 23, 38, 43, 61, 64, 69, 70, 77, 90, 101, 102, 107, 115, 120, 122, 123, 124, 125, 126, 127, 128, 133, 139, 142, 146, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 482, 550, 551, 552, 565, 567, 580, 581, 582, 586, 588, 589, 590, 591, 596, 597, 598, 601, 603, 608, 609, 610, 614, 615, 617, 618, 622, 623, 624, 628, 629, 631, 632, 636, 637, 638, 642, 643, 645, 648, 650, 651, 653, 657, 659, 660, 661, 665, 666, 667, 671, 672, 674, 681, 682, 686, 687, 689, 695, 696, 700, 701, 703, 709, 710, 714, 715, 717, 723, 724, 728, 729, 731, 737, 738, 741, 745, 746, 747, 750, 754, 756, 758, 759, 761, 763, 766, 769, 771, 772, 777, 778, 779, 780, 786, 787, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 809, 815, 816, 819, 823, 828, 829, 841, 842, 843, 844, 846, 848, 850, 851, 855, 856], "test": [15, 61, 342], "true": [15, 20, 21, 23, 26, 38, 42, 43, 50, 61, 64, 69, 70, 77, 90, 101, 102, 107, 115, 120, 122, 123, 124, 125, 126, 127, 128, 133, 139, 142, 146, 155, 160, 169, 177, 482, 550, 551, 552, 566, 567, 580, 581, 583, 586, 588, 589, 591, 592, 596, 597, 598, 601, 602, 604, 608, 609, 610, 614, 615, 616, 617, 619, 622, 623, 624, 628, 629, 630, 631, 633, 636, 637, 638, 642, 643, 644, 646, 648, 650, 651, 652, 654, 657, 659, 660, 662, 665, 666, 667, 671, 672, 673, 676, 681, 682, 686, 687, 688, 691, 695, 696, 700, 701, 702, 705, 709, 710, 714, 715, 716, 719, 723, 724, 728, 729, 730, 733, 737, 738, 741, 742, 745, 746, 747, 750, 754, 756, 759, 761, 763, 766, 769, 771, 772, 777, 778, 779, 780, 786, 788, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 815, 816, 819, 828, 829, 841, 842, 843, 844, 846, 848, 850, 855, 856], "been": [15, 61, 64, 154, 180, 258, 272, 273, 290, 311, 312, 313, 314, 315, 316, 323, 454, 499, 554, 753, 762, 763, 771, 786, 788, 790, 823, 842, 843], "fals": [15, 38, 43, 61, 64, 69, 70, 77, 90, 101, 102, 107, 115, 120, 122, 123, 124, 125, 126, 127, 128, 133, 139, 142, 146, 150, 152, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 482, 552, 558, 564, 567, 580, 581, 586, 588, 589, 591, 596, 597, 598, 601, 608, 609, 614, 615, 616, 617, 622, 623, 629, 630, 631, 636, 637, 643, 644, 648, 650, 651, 657, 659, 660, 665, 666, 671, 672, 673, 681, 682, 686, 687, 688, 695, 696, 701, 702, 709, 710, 715, 716, 723, 724, 728, 729, 730, 737, 738, 741, 745, 746, 747, 750, 754, 756, 758, 759, 761, 762, 763, 766, 769, 771, 772, 777, 779, 780, 786, 787, 788, 790, 792, 793, 795, 796, 797, 798, 799, 800, 801, 828, 829, 841, 842, 843, 844, 848, 850, 855, 856], "cover": [16, 46, 150, 151, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431], "prod": [17, 127, 153], "min": [17, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 262, 264, 265, 268, 270, 271, 272, 273, 293, 294, 327, 328, 341, 366, 384, 443, 447, 836], "max": [17, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 199, 218, 219, 262, 264, 268, 269, 270, 272, 273, 276, 280, 284, 286, 288, 290, 299, 301, 303, 305, 306, 307, 311, 313, 317, 319, 321, 323, 325, 326, 327, 333, 335, 337, 339, 340, 341, 361, 366, 384, 406, 443, 447], "elementwis": [17, 54, 56, 57, 59, 151, 154, 156, 158, 160, 161, 162, 165, 168], "summat": [17, 160, 171, 174], "actual": [17, 42, 46, 57, 59, 61, 152, 153, 154, 158, 161, 162, 171, 258, 576, 580, 601, 615, 629, 643, 651, 672, 687, 701, 715, 729, 748, 793, 794, 803, 836, 837, 843, 851], "solv": [20, 21, 23, 26, 29, 51, 188, 189, 245, 247, 250, 251, 252, 261, 265, 266, 272, 273, 274, 277, 278, 280, 281, 282, 283, 286, 287, 290, 292, 296, 297, 308, 309, 313, 314, 315, 319, 320, 323, 325, 326, 330, 331, 424, 430], "problem": [20, 21, 23, 26, 29, 44, 51, 153, 169, 180, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 299, 300, 301, 303, 305, 306, 307, 308, 309, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 333, 334, 335, 337, 339, 340, 851, 863], "partit": [20, 21, 26, 28, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 180, 358, 549, 550, 551, 552, 558, 571, 816, 817], "minim": [20, 217, 255, 564, 569, 732, 761, 863], "some": [20, 23, 41, 44, 46, 49, 51, 52, 55, 57, 59, 61, 153, 154, 156, 159, 164, 165, 166, 169, 255, 257, 259, 260, 261, 265, 273, 277, 281, 296, 308, 314, 330, 365, 367, 416, 419, 427, 429, 431, 497, 558, 565, 575, 839, 842, 843, 859, 863], "criterion": 20, "character": 20, "repres": [20, 30, 31, 32, 38, 39, 40, 41, 43, 49, 52, 57, 60, 63, 64, 76, 82, 105, 106, 136, 137, 148, 150, 152, 154, 158, 161, 177, 180, 219, 222, 225, 255, 258, 259, 260, 262, 264, 265, 266, 268, 288, 321, 341, 372, 391, 403, 414, 422, 423, 425, 436, 444, 454, 534, 550, 551, 552, 558, 560, 561, 562, 564, 565, 578, 580, 600, 603, 613, 618, 627, 632, 641, 661, 670, 674, 685, 689, 699, 703, 713, 717, 727, 731, 740, 749, 755, 775, 782, 802, 804, 816, 817, 818, 828, 829, 841, 843, 844, 846, 847, 849, 854, 858, 861], "centroid": [20, 21], "train_input": [20, 23, 26], "train_result": [20, 23, 26, 50], "infer_input": [20, 23, 26], "infer_result": [20, 23, 26], "x": [20, 21, 23, 26, 47, 49, 54, 55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 280, 283, 286, 287, 313, 319, 320, 325, 326, 341, 346, 348, 349, 352, 357, 360, 361, 366, 370, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 394, 398, 399, 400, 401, 405, 406, 408, 417, 418, 426, 428, 430, 436, 454, 456, 457, 459, 460, 462, 466, 467, 471, 472, 480, 483, 484, 485, 486, 487, 491, 507, 508, 515, 519, 534, 537, 539, 541, 550, 551, 557, 560, 564, 566, 578, 765, 785, 802, 811, 812, 817, 836, 850, 852], "x_1": [20, 21, 23, 26, 47, 344, 366, 393], "ldot": [20, 21, 23, 26, 59, 156, 157, 159, 169, 255, 258, 259, 260, 341, 357, 361], "x_n": [20, 21, 23, 26, 156, 159, 169, 353, 354, 355, 388, 389, 390, 395, 400, 404, 409], "dimension": [20, 21, 23, 26, 30, 44, 47, 50, 57, 59, 105, 152, 153, 180, 255, 256, 258, 259, 260, 261, 341, 342, 391, 395, 404, 415, 436, 444, 451, 550, 551], "find": [20, 21, 26, 44, 50, 122, 123, 124, 125, 126, 177, 216, 217, 590, 603, 618, 632, 661, 674, 689, 703, 717], "c_1": [20, 21, 78, 157], "c_k": [20, 21], "phi_": 20, "sum_": [20, 23, 59, 82, 105, 107, 136, 158, 162, 165, 181, 184, 191, 192, 193, 194, 195, 198, 202, 219, 222, 225, 232, 243, 251, 259, 357, 398, 399], "d": [20, 27, 38, 39, 45, 47, 54, 59, 74, 107, 122, 123, 124, 125, 126, 127, 128, 153, 158, 159, 162, 164, 166, 178, 255, 258, 259, 260, 262, 288, 290, 321, 323, 342, 356, 366, 380, 397, 402, 413, 418, 471, 484, 485, 486, 487, 491, 752, 765, 769, 777, 803, 809], "x_i": [20, 26, 47, 181, 194, 228, 281, 282, 314, 393, 399], "squar": [20, 29, 64, 123, 138, 141, 149, 160, 261, 280, 281, 292, 365, 366, 375, 430, 501, 504, 520, 521, 535, 536, 546, 560, 765, 836], "euclidean": [20, 26, 186, 220], "distanc": [20, 26, 108, 109, 177, 180, 219, 222, 224, 225, 255, 256, 260, 341], "closest": [20, 26], "min_": 20, "leq": [20, 23, 26, 59, 119, 159, 167, 172, 255, 259, 260, 346, 348, 349, 352, 357, 360, 361, 366, 370, 371, 372, 374, 377, 378, 379, 380, 382, 383, 384, 385, 387, 393, 394, 398, 399, 401, 405, 406, 408, 436, 439], "c_j": [20, 392], "quad": [20, 23, 26, 341], "express": [20, 38, 59, 177, 180, 255, 256, 349, 560, 561, 590, 603, 618, 632, 661, 674, 689, 703, 717, 786, 788, 790, 802, 803, 809, 850, 853, 861, 863], "cdot": [20, 23, 54, 57, 69, 72, 82, 85, 87, 88, 93, 96, 101, 107, 108, 118, 122, 123, 124, 125, 126, 127, 128, 154, 155, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 255, 256, 259, 260, 264, 265, 276, 290, 308, 314, 323, 356, 358, 369, 397, 403, 415, 430, 457, 507], "l_2": [20, 47], "norm": [20, 47, 122, 123, 168, 186, 220], "case": [20, 23, 35, 36, 37, 38, 47, 49, 50, 55, 57, 61, 63, 64, 66, 67, 69, 89, 96, 103, 115, 116, 119, 121, 142, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 346, 348, 352, 353, 354, 355, 356, 357, 360, 361, 392, 395, 401, 404, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 454, 459, 480, 482, 483, 488, 498, 506, 514, 515, 519, 532, 537, 543, 545, 553, 558, 560, 583, 585, 589, 592, 595, 600, 601, 602, 604, 614, 615, 616, 619, 629, 630, 633, 643, 644, 646, 651, 652, 654, 656, 660, 662, 671, 672, 673, 674, 675, 676, 686, 687, 688, 689, 690, 691, 701, 702, 703, 704, 705, 715, 716, 717, 718, 719, 728, 729, 730, 733, 735, 742, 759, 767, 775, 807, 828, 829, 833, 836, 843, 857, 863], "arbitrari": [20, 23, 38, 52, 76, 77, 89, 90, 95, 96, 101, 102, 103, 105, 106, 117, 134, 135, 136, 137, 148, 156, 157, 159, 163, 167, 168, 169, 170, 172, 173, 174, 177, 224, 367, 413, 519, 523, 747], "spec": [20, 23], "lloyd82": [20, 29], "consist": [20, 24, 46, 54, 59, 61, 150, 153, 171, 255, 258, 260, 262, 356, 369, 397, 444, 836, 862], "iter": [20, 26, 29, 44, 51, 64, 150, 155, 160, 161, 171, 176, 413, 552, 557, 558, 566, 568, 582, 583, 584, 590, 592, 593, 597, 603, 604, 605, 608, 614, 616, 618, 619, 620, 622, 628, 630, 632, 633, 634, 636, 642, 644, 646, 647, 653, 654, 655, 661, 662, 663, 665, 671, 673, 674, 675, 676, 677, 681, 686, 688, 689, 690, 691, 692, 695, 700, 702, 703, 704, 705, 706, 709, 714, 716, 717, 718, 719, 720, 723, 728, 730, 731, 732, 733, 734, 752, 803, 804, 807, 818, 851, 852, 858], "updat": [20, 26, 48, 54, 55, 59, 150, 158, 162, 171, 177, 180, 182, 183, 187, 188, 189, 190, 196, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 226, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 249, 415, 416, 417, 418, 419, 420, 421, 426, 427, 428, 429, 431, 550, 551, 552, 564, 565, 745, 750, 754, 759, 765, 766, 769, 780, 816, 843], "assign": [20, 31, 38, 43, 44, 49, 64, 150, 157, 160, 177, 369, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 404, 409, 436, 454, 565, 568, 571, 582, 588, 645, 650, 653, 659, 731, 747, 769, 772, 777, 780, 803, 809, 813, 845, 848, 851, 861], "step": [20, 23, 26, 41, 50, 131, 150, 161, 260, 369, 413, 558, 748], "g": [20, 32, 41, 43, 44, 47, 57, 59, 82, 101, 102, 150, 153, 155, 158, 162, 163, 172, 178, 180, 258, 259, 261, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 413, 422, 423, 552, 559, 560, 745, 746, 747, 748, 750, 752, 754, 755, 757, 758, 759, 761, 763, 765, 766, 767, 769, 771, 772, 777, 778, 780, 842], "begin": [20, 23, 47, 66, 67, 89, 96, 103, 115, 119, 121, 159, 167, 172, 177, 180, 226, 227, 228, 229, 236, 262, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 341, 346, 348, 352, 357, 360, 361, 370, 371, 372, 375, 377, 378, 382, 384, 385, 387, 391, 392, 394, 398, 399, 401, 403, 405, 406, 408, 414, 415, 498, 514, 543, 552, 553, 557, 564, 565, 566, 583, 584, 590, 592, 593, 597, 603, 604, 605, 614, 618, 619, 620, 628, 632, 633, 634, 642, 646, 647, 654, 655, 661, 662, 663, 671, 674, 676, 677, 686, 689, 691, 692, 700, 703, 705, 706, 714, 717, 719, 720, 728, 731, 732, 733, 734, 750, 752, 804, 807, 818, 851, 854, 858], "nearest": [20, 24, 45, 64, 99, 100, 130, 147, 160, 524, 525, 526, 546, 816], "y_i": [20, 26, 47, 194, 228, 473, 487, 494, 498, 514, 543], "label": [20, 23, 26, 44, 72, 82, 129, 253, 254, 258], "mathrm": [20, 23, 26, 47, 54, 159], "arg": [20, 26, 41, 52, 153, 160, 177, 546, 553, 559, 568, 569, 570, 571, 582, 588, 590, 597, 603, 614, 618, 628, 632, 642, 645, 650, 653, 659, 661, 671, 674, 686, 689, 700, 703, 714, 717, 728, 731, 732, 780, 851, 853], "exactli": [20, 122, 123, 124, 125, 126, 127, 128, 180, 258, 272, 273, 290, 323, 384, 553, 841], "disjoint": 20, "s_j": 20, "big": [20, 26, 35, 36, 44, 45, 105, 519], "recalcul": 20, "averag": [20, 69, 160, 166, 352, 385, 566, 679, 693, 707, 721], "frac": [20, 23, 26, 57, 69, 71, 72, 82, 97, 101, 105, 113, 125, 132, 136, 155, 158, 159, 163, 164, 166, 168, 170, 172, 173, 255, 259, 348, 349, 352, 357, 360, 361, 366, 371, 374, 375, 377, 378, 379, 380, 383, 384, 385, 387, 393, 398, 399, 401, 405, 406, 408, 457, 471, 484, 485, 486, 487, 491, 507, 508, 546], "until": [20, 61, 180, 258, 410, 451, 556, 570, 588, 753, 756, 759, 816, 837, 842, 845, 846], "stop": [20, 560, 563, 575, 759, 769, 805, 824, 844], "varepsilon": [20, 72, 155, 163], "satisfi": [20, 38, 40, 49, 52, 177, 178, 222, 255, 259, 270, 568, 569, 570, 571, 572, 755, 792, 794, 797, 800, 801, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 846], "exce": [20, 552, 843], "maxim": [20, 30, 65, 216, 843], "x_m": [20, 23, 26], "produc": [20, 23, 26, 39, 46, 48, 51, 56, 61, 103, 150, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 256, 259, 344, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 359, 360, 361, 365, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 393, 394, 398, 399, 401, 402, 405, 407, 408, 413, 475, 482, 500, 527, 556, 837], "stage": [20, 23, 26, 32, 41, 44, 45, 46, 49, 50, 51, 53, 142, 150, 158, 165, 261, 425, 748], "predict": [20, 24, 26, 29, 44, 46, 47], "y_j": [20, 26], "accord": [20, 23, 26, 44, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 171, 177, 258, 344, 366, 395, 400, 413, 455, 459, 461, 464, 478, 483, 506, 515, 527, 528, 529, 537, 538, 544, 546, 754, 756, 816], "rule": [20, 24, 68, 86, 107, 110, 111, 114, 131, 141, 142, 144, 149, 755, 839, 850, 852, 859], "x_j": [20, 26], "l": [20, 26, 29, 153, 164, 171, 180, 255, 272, 286, 290, 307, 313, 316, 319, 323, 342, 345, 353, 355, 367, 384, 388, 390, 608, 622, 636, 665, 681, 695, 709, 723], "c_l": 20, "kmean": [20, 32], "run_train": [20, 23, 26], "tabl": [20, 21, 23, 26, 30, 32, 35, 36, 37, 39, 40, 44, 45, 50, 52, 53, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 186, 187, 188, 189, 255, 258, 260, 292, 342, 343, 365, 366, 460, 475, 482, 500, 506, 522, 527, 534, 545, 546, 547, 575, 753, 762, 785, 802, 828, 829], "initial_centroid": 20, "kmeans_desc": [20, 21], "set_cluster_count": [20, 21], "10": [20, 21, 26, 55, 178, 345, 356, 367, 369, 397, 489, 508, 546, 550, 551, 578, 755, 765, 767], "set_max_iteration_count": 20, "50": 20, "set_accuracy_threshold": 20, "1e": [20, 101, 102], "4": [20, 29, 30, 35, 36, 38, 71, 72, 73, 102, 113, 131, 159, 160, 228, 229, 257, 353, 354, 355, 356, 369, 390, 409, 414, 456, 457, 460, 462, 465, 466, 507, 508, 576, 780, 864], "print_tabl": [20, 21, 23, 26], "get_label": [20, 26], "get_model": [20, 23, 26, 50], "get_centroid": [20, 21], "print_valu": 20, "get_objective_function_valu": 20, "run_infer": [20, 23, 26], "new_data": [20, 23, 26], "get_cluster_count": [20, 21], "dal": [20, 21, 23, 26, 30, 31, 32, 35, 36, 38, 40, 41, 42, 43, 49, 50, 52, 53], "via": [20, 21, 23, 26, 30, 31, 35, 36, 38, 39, 40, 41, 42, 43, 52, 59, 61, 88, 142, 150, 152, 153, 154, 158, 160, 161, 165, 166, 177, 180, 255, 258, 260, 565, 582, 588, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 783, 786, 788, 790, 839, 861], "inclus": [20, 21, 23, 26, 30, 35, 36, 38, 39, 42, 43, 395, 404, 552], "algo": [20, 21, 23, 26, 32], "header": [20, 21, 23, 26, 30, 33, 35, 36, 38, 39, 42, 43, 45, 50, 177, 178, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 578, 581, 582, 590, 632, 653, 661, 674, 689, 703, 717, 731, 743, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 766, 768, 769, 770, 771, 772, 774, 775, 777, 778, 779, 780, 782, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 839, 840, 841, 842, 843, 844, 845, 846, 850, 851, 858], "file": [20, 21, 23, 26, 30, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 50, 575, 775], "typenam": [20, 21, 23, 26, 35, 36, 38, 39, 40, 42, 49, 52, 53, 61, 64, 160, 177, 178, 253, 254, 263, 266, 267, 269, 271, 274, 275, 278, 279, 282, 283, 285, 287, 289, 291, 294, 297, 298, 300, 302, 304, 306, 309, 310, 312, 315, 316, 318, 320, 322, 324, 326, 328, 331, 332, 334, 336, 338, 340, 346, 347, 348, 349, 350, 352, 357, 358, 359, 360, 361, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 393, 394, 398, 399, 401, 403, 405, 406, 407, 408, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 550, 551, 552, 553, 555, 556, 557, 558, 559, 561, 564, 565, 566, 581, 582, 583, 584, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 599, 603, 604, 605, 608, 609, 610, 611, 614, 616, 617, 618, 619, 620, 622, 623, 624, 625, 628, 630, 631, 632, 633, 634, 636, 637, 638, 639, 642, 644, 645, 646, 647, 648, 649, 650, 653, 654, 655, 657, 658, 659, 661, 662, 663, 665, 666, 667, 668, 671, 673, 674, 676, 677, 681, 682, 683, 686, 688, 689, 691, 692, 695, 696, 697, 700, 702, 703, 705, 706, 709, 710, 711, 714, 716, 717, 719, 720, 723, 724, 725, 728, 730, 731, 732, 733, 734, 737, 738, 739, 745, 746, 747, 748, 750, 751, 754, 758, 759, 760, 761, 762, 763, 764, 766, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 780, 786, 788, 790, 840, 843, 845, 846, 850, 851, 852, 853, 858], "by_default": [20, 21, 23, 26, 49, 52, 346, 348, 349, 352, 357, 360, 361, 370, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 393, 394, 398, 399, 401, 405, 406, 408], "cluster_count": [20, 21], "get_max_iteration_count": 20, "get_accuracy_threshold": 20, "intermedi": [20, 21, 23, 26, 44, 50, 54, 56, 57, 154, 159, 164, 169, 257, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 747, 771, 772], "constructor": [20, 21, 23, 26, 30, 35, 36, 37, 38, 39, 42, 43, 49, 52, 59, 61, 64, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 180, 259, 346, 348, 349, 352, 353, 354, 355, 356, 357, 360, 361, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 436, 454, 550, 551, 552, 555, 556, 564, 572, 573, 584, 593, 605, 614, 616, 620, 628, 630, 634, 642, 644, 647, 655, 663, 671, 673, 677, 686, 688, 692, 700, 702, 706, 714, 716, 720, 728, 730, 731, 734, 743, 761, 767, 770, 775, 779, 803, 806, 809, 810, 813, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 830, 839, 841, 843, 851, 855], "properti": [20, 21, 23, 26, 38, 40, 41, 42, 43, 44, 45, 49, 52, 64, 150, 153, 177, 178, 261, 353, 367, 388, 391, 395, 745, 746, 747, 750, 754, 758, 759, 761, 763, 766, 769, 771, 772, 778, 780, 828, 841, 864], "accuracy_threshold": 20, "threshold": [20, 480, 488, 489, 490, 492, 501, 505, 506, 521, 522, 532, 542, 546, 550, 560, 745, 750, 754, 763, 766, 785], "getter": [20, 21, 23, 26, 39, 40, 44, 49, 52], "setter": [20, 21, 23, 26, 40, 44, 49, 52, 153], "invari": [20, 21, 23, 26, 31], "max_iteration_count": 20, "maximum": [20, 57, 64, 124, 149, 152, 156, 166, 186, 216, 444, 506, 546, 588, 601, 615, 629, 643, 672, 675, 679, 687, 690, 693, 701, 704, 707, 715, 718, 721, 729, 741, 839, 843], "100": [20, 44, 342, 366, 576, 734, 777, 780], "parameter": [20, 21, 23, 26], "get_data": [20, 21, 23, 26, 38, 41, 42, 43], "set_data": [20, 21, 23, 26], "get_initial_centroid": 20, "set_initial_centroid": 20, "get_iteration_count": 20, "sampl": [20, 40, 44, 49, 52, 155, 166, 353, 384, 388, 864], "phi_x": 20, "desc": [20, 21, 23, 26, 49, 52, 53, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 253, 254, 255, 256, 257, 259], "precondit": [20, 21, 23, 26, 31, 35, 36, 38, 43, 52, 180], "has_data": [20, 21, 23, 26, 41, 43], "row_count": [20, 21, 23, 26, 35, 36, 42, 43, 44, 50], "column_count": [20, 21, 23, 26, 35, 36, 42, 43, 50], "postcondit": [20, 21, 23, 26, 31, 38, 52, 180], "iteration_count": 20, "set_model": [20, 23, 26], "choos": [21, 23, 38, 59, 153, 157, 165, 174, 180, 255, 767], "compute_input": 21, "compute_result": 21, "train": [21, 24, 28, 44, 46, 47, 49, 50, 51, 55, 56, 59, 71, 103, 160, 164], "first": [21, 23, 29, 30, 35, 39, 41, 44, 49, 59, 61, 63, 82, 131, 153, 158, 159, 162, 171, 177, 180, 194, 216, 217, 229, 255, 258, 262, 270, 271, 273, 281, 288, 314, 321, 341, 394, 403, 414, 477, 493, 518, 541, 546, 557, 558, 560, 562, 563, 582, 583, 585, 590, 592, 595, 597, 603, 604, 607, 608, 614, 616, 617, 618, 619, 621, 622, 628, 630, 631, 632, 633, 635, 636, 642, 644, 645, 646, 653, 654, 656, 661, 662, 664, 665, 671, 673, 674, 675, 676, 680, 686, 688, 689, 690, 691, 694, 695, 700, 702, 703, 704, 705, 708, 709, 714, 716, 717, 718, 719, 722, 728, 730, 731, 732, 733, 736, 742, 748, 752, 755, 762, 767, 772, 780, 785, 816, 841, 843, 844, 851, 853, 858], "run_comput": 21, "kmeans_init": 21, "init": [21, 177, 564, 582, 583, 590, 592, 597, 603, 604, 614, 618, 619, 628, 632, 633, 642, 645, 646, 653, 654, 661, 662, 671, 674, 676, 686, 689, 691, 700, 703, 705, 714, 717, 719, 728, 731, 732, 733], "obtain": [21, 35, 36, 37, 41, 50, 53, 161, 169, 180, 257, 258, 261, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 346, 348, 349, 350, 351, 352, 356, 357, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 411, 425, 556, 576, 578, 583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733, 745, 750, 754, 759, 762, 763, 766, 785, 787, 818, 843], "princip": [22, 24, 45, 50], "compon": [22, 24, 45, 46, 50, 176, 228, 229, 355, 390, 439, 617, 631, 744, 775, 783, 863], "analysi": [22, 24, 45, 46, 50, 150, 261, 342, 425, 575], "pca": [22, 24, 45, 50, 53], "exploratori": 23, "transform": [23, 39, 40, 41, 44, 45, 46, 52, 59, 61, 99, 100, 152, 153, 161, 180, 218, 219, 228, 229, 253, 254, 255, 256, 258, 260, 262, 288, 321, 346, 348, 349, 352, 357, 360, 361, 363, 366, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 393, 394, 398, 399, 401, 405, 406, 408, 411, 413, 506, 546, 548], "possibli": [23, 177, 189, 255, 256, 422, 423, 559, 571, 762, 785, 798, 799, 804, 842], "correl": [23, 400], "uncorrel": 23, "varianc": [23, 41, 71, 72, 73, 101, 102, 155, 160, 380], "mostli": [23, 59, 798, 799], "spread": 23, "r": [23, 29, 47, 54, 78, 85, 87, 88, 101, 102, 118, 122, 123, 124, 125, 126, 127, 128, 160, 168, 171, 180, 227, 264, 268, 305, 306, 339, 340, 346, 348, 349, 352, 357, 360, 361, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 408, 409, 455, 460, 474, 550, 551, 552, 553, 564, 565, 570, 779, 787, 813, 815, 816], "eigenvector": [23, 50, 284, 285, 286, 287, 292, 317, 318, 319, 320], "lang87": [23, 29], "eigenvalu": [23, 261, 262, 263, 270, 271, 284, 285, 286, 287, 288, 289, 293, 294, 299, 300, 305, 306, 317, 318, 319, 320, 321, 322, 327, 328, 333, 334, 339, 340], "decomposit": [23, 24, 29, 45, 264, 265, 268, 270, 288, 292, 321, 344, 366], "dataset": [23, 26, 39, 44, 47, 261, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453], "format": [23, 37, 39, 41, 43, 44, 46, 57, 58, 60, 61, 79, 80, 81, 82, 83, 84, 99, 100, 115, 116, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 260, 261, 341, 391, 392, 415, 422, 423, 424, 425], "column": [23, 30, 37, 41, 42, 43, 45, 47, 59, 107, 180, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 281, 284, 286, 290, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 313, 314, 317, 319, 323, 325, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 414, 415, 416, 417, 418, 422, 423, 426, 428, 430, 534, 550, 551, 753], "s_i": [23, 413], "x_": [23, 57, 341, 355, 371, 379, 390, 391, 392, 395, 400, 404, 409], "cross": [23, 46, 129], "product": [23, 44, 54, 59, 61, 107, 142, 151, 160, 161, 165, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 246, 248, 249, 252, 262, 264, 265, 268, 288, 290, 295, 296, 297, 298, 301, 302, 303, 304, 305, 321, 323, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 342, 356, 397, 415, 417, 418, 424, 426, 428, 550, 551, 575, 863, 864], "tx": [23, 280, 283, 325, 326], "sigma": [23, 59, 71, 72, 73, 101, 102, 155, 163, 171, 259, 260, 270, 349, 352, 379, 385, 387], "lambda_i": [23, 284, 317, 399], "upsilon_i": 23, "ping14": [23, 29], "final": [23, 26, 46, 48, 55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 180, 259, 410, 565, 765, 842, 850], "sort": [23, 59, 270, 414, 566, 603, 618, 632, 645, 661, 771, 782, 802], "pair": [23, 26, 52, 62, 150, 160, 177, 259, 344, 366, 495, 496, 512, 513, 546, 550, 551, 558, 590, 593, 595, 603, 605, 608, 614, 618, 620, 622, 628, 632, 636, 642, 661, 665, 671, 674, 677, 681, 686, 689, 692, 695, 700, 703, 709, 714, 717, 723, 728], "descend": [23, 270], "form": [23, 38, 54, 59, 150, 173, 180, 184, 197, 198, 199, 202, 213, 214, 215, 219, 222, 225, 233, 234, 235, 243, 246, 247, 251, 262, 264, 265, 268, 270, 280, 281, 282, 283, 284, 286, 288, 290, 292, 293, 295, 296, 299, 301, 303, 305, 307, 308, 317, 319, 321, 323, 326, 327, 329, 330, 333, 335, 337, 339, 550, 551, 556, 557, 558, 578, 590, 603, 618, 632, 661, 674, 689, 703, 717, 750, 764, 774, 785, 807, 829, 841], "upsilon_": 23, "singular": [23, 29, 261, 262, 263, 270, 271, 272, 273, 284, 285, 286, 287, 288, 289, 290, 293, 294, 299, 300, 305, 306, 317, 318, 319, 320, 321, 322, 323, 327, 328, 333, 334, 339, 340, 475, 482, 500, 527], "its": [23, 32, 35, 36, 38, 41, 43, 44, 47, 49, 50, 51, 52, 59, 61, 62, 63, 116, 117, 150, 152, 153, 154, 156, 162, 164, 165, 176, 180, 200, 207, 211, 212, 237, 241, 242, 243, 253, 254, 255, 258, 264, 265, 268, 343, 365, 414, 436, 546, 549, 550, 551, 552, 557, 558, 559, 560, 561, 563, 564, 569, 570, 731, 742, 744, 745, 746, 747, 750, 752, 754, 756, 758, 759, 761, 762, 763, 766, 769, 771, 772, 777, 778, 780, 783, 785, 789, 816, 839, 842, 843, 846, 850, 851, 864], "u_i": [23, 171, 273, 281, 308, 314, 315, 413], "v_i": [23, 395, 404], "demmel90": [23, 29], "v_": 23, "solver": [23, 46, 51, 180], "due": [23, 61, 153, 255, 258, 353, 388, 754, 767, 777], "ambigu": [23, 29], "determinist": [23, 261, 367, 396, 556, 558, 566, 571, 767], "One": [23, 38, 44, 55, 158, 161, 258, 553], "propos": [23, 179], "bro07": [23, 29], "modif": [23, 391], "hat": [23, 155], "_i": [23, 47, 78, 273, 274, 277, 281], "t_i": 23, "sgn": [23, 47], "max_": [23, 26], "ij": 23, "t_": 23, "signum": 23, "end": [23, 30, 45, 46, 47, 51, 64, 66, 67, 89, 96, 103, 115, 119, 121, 149, 150, 152, 159, 167, 172, 177, 184, 191, 192, 198, 202, 219, 222, 225, 226, 227, 228, 229, 236, 243, 251, 262, 341, 346, 348, 352, 357, 360, 361, 370, 371, 372, 375, 377, 378, 382, 384, 385, 387, 391, 392, 394, 398, 399, 401, 405, 406, 408, 414, 415, 498, 514, 543, 552, 553, 557, 560, 563, 564, 565, 566, 583, 584, 590, 592, 593, 597, 603, 604, 605, 608, 614, 618, 619, 620, 622, 628, 632, 633, 634, 636, 642, 646, 647, 654, 655, 661, 662, 663, 665, 671, 674, 676, 677, 681, 686, 689, 691, 692, 695, 700, 703, 705, 706, 709, 714, 717, 719, 720, 723, 728, 731, 732, 733, 734, 742, 804, 805, 818, 839, 851, 854, 858], "linear": [23, 29, 44, 51, 57, 59, 61, 64, 85, 87, 88, 99, 100, 118, 152, 160, 170, 179, 180, 185, 187, 245, 247, 251, 252, 264, 267, 268, 269, 272, 273, 275, 276, 279, 280, 281, 283, 290, 291, 295, 298, 301, 302, 303, 304, 307, 310, 311, 312, 313, 314, 316, 323, 324, 325, 326, 329, 332, 335, 336, 337, 338, 341, 342, 353, 354, 388, 389, 424, 430, 454, 506, 546, 548, 556], "pca_desc": [23, 50], "set_component_count": [23, 50], "5": [23, 26, 35, 36, 55, 93, 99, 100, 101, 102, 131, 159, 170, 178, 228, 229, 257, 342, 355, 357, 366, 367, 369, 372, 375, 382, 390, 394, 398, 410, 414, 472, 481, 525, 541, 552, 767], "set_determinist": [23, 50], "get_mean": 23, "get_vari": 23, "get_eigenvalu": 23, "get_eigenvector": [23, 50], "get_component_count": 23, "get_transformed_data": [23, 50], "component_count": 23, "get_determinist": 23, "cov": 23, "dim_reduct": 23, "whether": [23, 38, 41, 43, 44, 49, 53, 59, 61, 64, 69, 70, 101, 107, 115, 150, 153, 155, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 260, 290, 291, 307, 308, 309, 310, 314, 315, 323, 324, 325, 326, 414, 454, 575, 576, 578, 829], "project": [23, 29, 59, 160], "transformed_data": 23, "mine": [24, 29, 46], "regress": [24, 44, 46, 49, 51], "neighbor": [24, 45, 160], "knn": [24, 26, 32, 45], "nn": [24, 25, 45, 53, 341], "major": [26, 41, 43, 44, 46, 59, 150, 179, 180, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 212, 218, 219, 221, 222, 223, 224, 225, 237, 241, 242, 243, 248, 250, 251, 292, 341, 415, 576, 578], "vote": 26, "observ": [26, 41, 44, 47, 180, 253, 254, 256, 436, 439, 603, 618, 632, 661, 674, 689, 703, 717, 755, 844], "let": [26, 59, 64, 82, 83, 153, 158, 162, 170, 255, 259, 552, 565, 731, 767], "y": [26, 47, 49, 63, 182, 183, 184, 190, 191, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 210, 213, 215, 226, 227, 228, 229, 230, 232, 233, 235, 236, 238, 240, 349, 371, 375, 378, 379, 417, 418, 426, 428, 430, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 564, 565, 566, 578, 802, 812, 836], "y_1": 26, "y_n": [26, 355, 390, 409], "allow": [26, 40, 41, 46, 49, 52, 55, 57, 61, 64, 68, 86, 110, 111, 114, 131, 144, 150, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 180, 253, 254, 257, 258, 367, 395, 404, 416, 548, 553, 580, 591, 679, 693, 707, 721, 745, 748, 752, 754, 755, 757, 763, 765, 766, 769, 770, 771, 780, 785, 798, 799, 817, 820, 828, 829, 839, 842, 863], "subseteq": 26, "respect": [26, 28, 31, 54, 56, 59, 61, 63, 82, 100, 103, 143, 153, 158, 159, 160, 162, 168, 170, 171, 177, 180, 219, 222, 225, 228, 229, 255, 256, 259, 260, 341, 356, 360, 361, 397, 405, 406, 416, 471, 478, 484, 485, 487, 497, 524, 529, 530, 534, 538, 544, 546, 550, 551, 562, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 748, 762, 765, 786, 788, 790, 843, 861, 864], "estim": [26, 261, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453], "probabl": [26, 346, 348, 349, 352, 357, 360, 361, 366, 370, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 393, 394, 398, 399, 401, 405, 406, 408, 413], "fraction": [26, 158, 498, 506, 514, 546], "whose": [26, 30, 49, 177, 245, 247, 252, 253, 254, 256, 259, 270, 280, 281, 284, 295, 296, 297, 298, 301, 302, 303, 304, 313, 314, 317, 325, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 767, 779, 803], "p_": [26, 171, 262, 384], "jl": 26, "x_r": 26, "y_r": 26, "highest": [26, 177, 650, 767, 771], "equat": [26, 51, 171, 187, 188, 189, 245, 247, 250, 251, 252, 261, 264, 267, 268, 269, 272, 273, 275, 276, 279, 280, 281, 282, 283, 290, 291, 295, 298, 301, 302, 303, 304, 307, 310, 311, 312, 313, 314, 316, 323, 324, 325, 326, 329, 332, 335, 336, 337, 338, 430], "travers": [26, 600, 603, 608, 614, 618, 622, 628, 632, 636, 642, 661, 665, 671, 674, 675, 681, 686, 689, 690, 695, 700, 703, 704, 709, 714, 717, 718, 723, 728, 732, 735, 818, 858], "leaf": [26, 28], "tild": [26, 54, 171], "known": [26, 54, 61, 150, 158, 165, 176, 177, 395, 422, 423, 565, 750, 762, 763], "search": [26, 177], "limit": [26, 52, 56, 57, 59, 60, 64, 169, 176, 259, 363, 480, 488, 489, 490, 492, 501, 506, 519, 521, 522, 523, 532, 569, 744, 745, 754, 763, 766, 785, 839, 843, 851, 864], "explor": 26, "part": [26, 28, 34, 41, 44, 57, 61, 63, 161, 180, 181, 189, 200, 209, 210, 212, 213, 214, 215, 234, 235, 239, 240, 253, 254, 255, 256, 259, 270, 271, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 307, 308, 309, 310, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 327, 329, 330, 341, 356, 397, 422, 423, 426, 427, 428, 429, 430, 431, 459, 480, 483, 488, 498, 511, 514, 515, 519, 532, 534, 537, 546, 548, 553, 572, 577, 816, 818, 828, 836], "less": [26, 40, 52, 62, 107, 154, 160, 165, 170, 177, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 478, 497, 506, 529, 530, 538, 569, 588, 594, 603, 605, 608, 610, 618, 620, 622, 624, 632, 634, 636, 638, 645, 647, 661, 663, 665, 667, 731, 738, 763, 771, 787, 851], "than": [26, 30, 31, 38, 62, 76, 77, 107, 142, 150, 154, 159, 160, 169, 170, 177, 180, 216, 217, 219, 222, 225, 258, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 284, 286, 288, 290, 293, 295, 299, 301, 303, 305, 307, 311, 313, 317, 319, 321, 323, 325, 327, 329, 333, 335, 337, 339, 395, 404, 497, 569, 571, 578, 588, 594, 608, 610, 622, 624, 636, 638, 665, 667, 731, 738, 744, 763, 767, 785, 786, 787, 798, 799, 816, 836, 842, 843, 851], "most": [26, 46, 49, 55, 57, 59, 61, 62, 107, 150, 152, 156, 157, 161, 164, 165, 168, 169, 174, 293, 327, 366, 395, 404, 414, 454, 574, 745, 754, 766, 767, 782, 783, 856, 863], "distant": 26, "onc": [26, 41, 150, 152, 153, 154, 165, 259, 553, 554, 731, 752, 759, 763, 780, 837, 841], "equiv": [26, 259], "class_count": 26, "neighbor_count": 26, "knn_desc": 26, "get_class_count": 26, "set_class_count": 26, "get_neighbor_count": 26, "set_neighbor_count": 26, "bruteforc": 26, "kd_tree": 26, "set_label": 26, "classifi": 26, "tree": [27, 45, 841], "binari": [28, 44, 57, 59, 150, 151, 158, 159, 160, 161, 162, 165, 168, 177, 400, 469, 564, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 786, 788, 790, 850, 852, 861], "bentley80": [28, 29], "induc": 28, "hyperplan": 28, "split": [28, 61, 358, 367, 403, 550, 551, 552, 556, 558, 564, 565, 568, 569, 570, 571, 753, 810, 813, 816, 817, 835], "axi": [28, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 550, 551], "cut": [28, 802], "subset": [28, 51, 57, 149, 152, 175, 176, 178], "bucket": [28, 592, 594, 674, 676, 679, 689, 691, 693, 703, 705, 707, 717, 719, 721], "belong": [28, 150, 160, 169, 180, 255, 256, 259, 265, 266, 273, 274, 277, 278, 281, 282, 308, 309, 314, 315, 353, 354, 365, 388, 389, 478, 479, 481, 529, 530, 531, 533, 538, 539, 541, 746, 747, 748, 758, 761, 763, 769, 771, 772, 777, 780, 845], "region": [28, 61, 344, 366, 828, 840, 845], "path": [28, 478, 479, 481, 529, 530, 531, 533, 538, 539, 541, 744, 767, 836], "orthogon": [28, 262, 264, 265, 268, 270, 288, 292, 293, 295, 296, 299, 301, 303, 305, 317, 321, 329, 330], "about": [29, 38, 41, 43, 44, 46, 52, 53, 61, 165, 261, 342, 425, 436, 454, 469, 782, 785, 787, 809, 860], "openclspec": [29, 44], "khrono": [29, 44, 864], "document": [29, 45, 59, 61, 64, 176, 180, 255, 505, 542, 783, 785, 802, 836, 863, 864], "revis": 29, "24": [29, 178, 341, 409, 479, 506, 531], "pdf": 29, "syclspec": [29, 44], "subgroup": 29, "integr": [29, 30, 41, 151, 152, 153, 177, 178, 491, 511, 544, 546, 578, 761, 763, 779, 782, 803, 809, 843], "modern": [29, 353, 355, 388, 390], "stuart": 29, "lloyd": 29, "quantiz": [29, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "pcm": 29, "ieee": [29, 55, 56, 63, 292, 469, 506, 534], "transact": [29, 342, 798, 799], "theori": 29, "1982": 29, "28": 29, "1982pp": 29, "129": 29, "137": 29, "bro": 29, "acar": 29, "kolda": 29, "resolv": [29, 454, 578], "sandia": 29, "sand2007": 29, "6422": 29, "unlimit": [29, 745, 754, 755, 765, 766, 769, 770, 777, 778, 780], "releas": [29, 38, 421, 424, 575, 578, 596, 597, 762, 785, 792, 793, 794, 797, 800, 801, 828, 829, 842, 864], "octob": 29, "2007": 29, "bentlei": 29, "multidimension": [29, 59, 150, 342, 355, 390], "divid": [29, 31, 38, 44, 59, 64, 79, 80, 81, 82, 83, 84, 149, 284, 286, 292, 317, 319, 458, 463, 466, 468, 475, 482, 500, 527, 546, 569, 570, 571], "conquer": [29, 284, 286, 292, 317, 319], "acm": [29, 342], "23": [29, 55, 178, 341, 355, 361, 390], "214": 29, "229": 29, "1980": 29, "friedman17": [29, 51], "friedman": 29, "hasti": 29, "tibshirani": 29, "statist": [29, 41, 59, 160, 163, 350, 351, 353, 362, 363, 368, 381, 388, 410, 411, 413, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 548], "springer": [29, 342], "2017": [29, 176, 784], "zhang04": [29, 51], "zhang": 29, "stochast": 29, "gradient": [29, 54, 55, 59, 67, 73, 75, 77, 90, 94, 96, 98, 100, 103, 106, 113, 116, 120, 133, 135, 137, 139, 146, 158, 160, 162], "descent": 29, "icml": 29, "2004": 29, "proceed": [29, 253, 254, 342], "Of": 29, "twenti": 29, "intern": [29, 38, 44, 51, 56, 61, 64, 150, 153, 253, 254, 258, 342, 416, 419, 421, 422, 423, 424, 427, 429, 431, 454, 545, 575, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 742, 743, 750, 763, 769, 775, 780, 781, 785, 786, 788, 790, 836, 843, 853, 861, 864], "confer": [29, 342], "On": [29, 48, 59, 61, 152, 160, 161, 165, 251, 270, 286, 288, 319, 321, 420, 752, 783], "machin": [29, 51, 53, 565], "919": 29, "926": 29, "lang": 29, "algebra": [29, 179, 180, 185, 292, 341, 424, 454, 548], "verlag": 29, "york": 29, "1987": 29, "ping": 29, "tak": 29, "peter": 29, "eric": 29, "polizzi": 29, "feast": 29, "subspac": 29, "eigensolv": 29, "approxim": [29, 353, 354, 366, 388, 389, 550, 551, 552, 571, 767], "spectral": [29, 284, 317], "2014": 29, "w": [29, 54, 59, 64, 71, 72, 74, 151, 153, 155, 158, 162, 164, 166, 167, 169, 171, 259, 284, 286, 317, 319, 402, 836], "demmel": 29, "kahan": [29, 284, 317], "accur": [29, 153, 173, 344, 360, 361, 365, 366, 405], "bidiagon": [29, 262, 270, 292], "siam": 29, "sci": [29, 342], "stat": [29, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 449, 450, 451, 452], "11": [29, 178, 228, 229, 341, 342, 355, 390, 391, 783], "1990": 29, "pp": 29, "873": 29, "912": 29, "cstdint": 30, "It": [30, 38, 41, 44, 49, 56, 59, 61, 63, 64, 85, 87, 88, 99, 101, 103, 117, 118, 129, 147, 148, 150, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 180, 192, 197, 198, 199, 200, 202, 207, 211, 212, 218, 219, 221, 222, 225, 237, 241, 242, 243, 248, 250, 251, 253, 254, 258, 286, 319, 359, 367, 395, 404, 407, 415, 479, 499, 531, 553, 556, 558, 564, 565, 580, 603, 618, 632, 661, 674, 689, 703, 717, 745, 748, 750, 754, 755, 758, 759, 761, 766, 785, 792, 793, 794, 797, 802, 803, 807, 809, 829, 838, 843, 850, 853, 859], "recommend": [30, 46, 59, 156, 157, 165, 168, 174, 180, 255, 785, 809, 816], "enumer": [30, 43, 56, 59, 61, 62, 63, 64, 153, 171, 180, 255, 256, 257, 258, 562, 744, 790, 839, 851], "data_typ": [30, 32, 33, 43, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 253, 254, 780], "them": [30, 41, 44, 51, 52, 59, 61, 63, 64, 122, 123, 124, 125, 126, 127, 128, 131, 150, 152, 153, 154, 160, 171, 182, 194, 210, 215, 235, 239, 240, 258, 259, 261, 262, 363, 367, 471, 472, 484, 485, 486, 487, 491, 505, 542, 565, 744, 752, 766], "name": [30, 32, 39, 40, 41, 49, 52, 55, 59, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 288, 376, 454, 546, 547, 552, 564, 568, 570, 571, 580, 752, 804, 808, 833, 834, 836, 864], "int_xx_t": 30, "uint_xx_t": 30, "xx": 30, "bi": [30, 497, 524, 761], "start_index": 30, "end_index": 30, "start": [30, 38, 41, 44, 101, 102, 115, 116, 160, 177, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 341, 381, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 750, 752, 767, 784, 811, 815, 837, 843, 844], "get_element_count": [30, 33], "max_end_index": 30, "noexcept": [30, 38, 43, 178, 674, 676, 683, 688, 689, 691, 697, 702, 703, 705, 711, 716, 717, 719, 725, 730, 731, 733, 741, 742, 755, 786, 787, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 828, 829, 842, 848], "start_idx": 30, "end_idx": 30, "indic": [30, 38, 39, 42, 43, 44, 60, 61, 63, 64, 82, 83, 101, 102, 122, 123, 124, 125, 126, 127, 128, 150, 152, 153, 157, 158, 164, 166, 167, 171, 172, 180, 216, 217, 222, 255, 260, 272, 273, 280, 281, 282, 283, 284, 286, 290, 291, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 323, 324, 325, 326, 414, 422, 423, 436, 439, 522, 534, 554, 563, 731, 749, 782, 836, 843], "greater": [30, 38, 76, 77, 160, 170, 258, 395, 404, 558, 578, 608, 610, 622, 624, 636, 638, 647, 665, 667, 738, 843], "rel": [30, 177, 566, 767, 828], "next": [30, 41, 150, 152, 153, 160, 447, 518, 546, 560, 563, 565, 608, 665, 681, 723, 752, 753, 759, 771, 777, 805, 809, 824], "last": [30, 38, 42, 48, 101, 102, 107, 143, 160, 163, 228, 229, 255, 259, 414, 557, 558, 559, 560, 582, 583, 585, 588, 590, 592, 595, 597, 603, 604, 607, 614, 616, 618, 619, 621, 622, 628, 630, 632, 633, 635, 636, 642, 644, 645, 646, 653, 654, 656, 659, 661, 662, 664, 671, 673, 674, 675, 676, 680, 686, 688, 689, 690, 691, 694, 695, 700, 702, 703, 704, 705, 708, 709, 714, 716, 717, 718, 719, 722, 728, 730, 731, 732, 733, 736, 756, 767, 818, 842, 858], "neg": [30, 64, 69, 70, 79, 80, 81, 82, 83, 84, 89, 90, 101, 102, 103, 108, 109, 143, 154, 155, 158, 160, 171, 172, 173, 270, 365, 394, 439, 477, 491, 505, 519, 522, 523, 533, 534, 542, 546, 763, 828, 829], "sequenc": [30, 154, 158, 161, 177, 253, 254, 255, 256, 258, 259, 260, 342, 343, 347, 364, 365, 367, 381, 386, 395, 402, 403, 404, 412, 546, 557, 560, 565, 566, 632, 661, 703, 717, 731, 732, 777, 802, 804, 835, 858], "ye": [31, 53, 753, 828, 829], "three": [31, 40, 41, 44, 49, 52, 171, 228, 229, 256, 366, 414, 482, 551, 731, 744, 748, 752, 762, 765], "logic_error": [31, 52], "runtime_error": [31, 52, 779], "bad_alloc": 31, "violat": [31, 52, 62, 153, 177, 347, 373, 807], "happen": [31, 38, 57, 61, 62, 78, 153, 158, 169, 255, 475, 482, 500, 527], "failur": [31, 64, 179, 552, 575, 846], "storag": [31, 38, 41, 59, 60, 61, 151, 152, 153, 160, 161, 177, 179, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 257, 260, 261, 342, 415, 416, 424, 436, 439, 583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733, 769, 785, 834, 835, 851], "invalid": [31, 253, 254, 255, 258, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 475, 482, 500, 501, 527, 616, 630, 644, 673, 688, 702, 716, 730, 731, 769, 780], "domain": [31, 44, 59, 180, 253, 254, 255, 256, 258, 363, 365, 411, 413, 416, 444, 478, 479, 481, 529, 530, 531, 533, 538, 539, 541, 548, 863], "domain_error": [31, 38], "out_of_rang": [31, 606, 678, 735], "unsupported_devic": [31, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431], "situat": [31, 165, 786], "No": [31, 38, 42, 53, 59, 64, 264, 265, 268, 342, 476, 614, 616, 628, 630, 642, 644, 671, 673, 686, 688, 700, 702, 714, 716, 728, 730, 828, 829, 842], "outsid": [31, 150, 152, 153, 180, 259, 580, 745, 748, 750, 754, 759, 766, 843], "aris": 31, "becaus": [31, 56, 57, 59, 61, 154, 155, 163, 556, 560, 565, 575, 755, 763, 786, 802, 816, 824, 828, 837, 863], "distinguish": [31, 41, 47, 51, 567, 572, 573, 817], "facil": 31, "interact": [31, 150, 180, 744, 845], "internal_error": 31, "range_error": [31, 731, 735], "system_error": 31, "could": [31, 51, 55, 59, 61, 63, 158, 165, 177, 179, 180, 253, 254, 258, 280, 281, 286, 307, 308, 311, 313, 314, 319, 564, 565, 802, 840], "inheritor": 31, "device_bad_alloc": [31, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 262, 264, 268, 270, 272, 276, 280, 284, 286, 288, 290, 293, 295, 299, 301, 303, 305, 307, 311, 313, 317, 319, 321, 323, 325, 327, 329, 333, 335, 337, 339, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 545], "layer": [32, 54, 59, 99, 101, 102, 151, 160, 161, 162, 171, 180], "particular": [32, 41, 44, 46, 49, 52, 61, 62, 150, 152, 153, 154, 158, 161, 165, 173, 180, 258, 259, 396, 416, 422, 423, 558, 560, 562, 564, 572, 767, 789, 836, 846], "folder": 32, "itself": [32, 62, 166, 177, 180, 307, 311], "string": [32, 38, 39, 40, 49, 52, 64, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 100, 108, 109, 110, 111, 114, 115, 116, 118, 131, 141, 142, 144, 578, 752], "substitut": [32, 40, 49, 52], "misc": 32, "func": [32, 553, 556, 558, 561, 564, 811, 825, 830, 840, 846], "miscellan": [32, 46, 546], "intend": [32, 46, 55, 255, 365, 392, 400, 550, 551, 779, 836, 837, 839, 864], "pipelin": [32, 41, 46, 560, 562, 563, 755], "mt19937": [32, 367, 392], "cross_enthropy_loss": 32, "relat": [32, 40, 41, 43, 49, 154, 170, 172, 177, 178, 180, 255, 256, 257, 259, 261, 270, 292, 471, 472, 484, 485, 486, 487, 577, 578, 744, 784, 846], "table_metadata": [32, 41, 43], "data_layout": [32, 41, 42, 43], "_tabl": 32, "suffix": 32, "homogen_t": [32, 35, 36, 41, 42, 43], "io": [32, 39, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 840], "csv": [32, 40, 41, 44, 45, 50], "util": [32, 46, 153, 160, 176, 177, 568, 569, 570, 571, 858], "auxiliari": [32, 46, 744, 834, 835], "trait": [32, 46, 828, 829, 841], "variou": [32, 41, 46, 58, 161, 176, 180, 353, 388, 391], "usm_alloc": 32, "type_trait": 32, "content": [32, 38, 61, 180, 270, 583, 589, 592, 602, 604, 616, 619, 630, 633, 644, 652, 654, 660, 662, 673, 676, 688, 691, 702, 705, 716, 719, 730, 733, 742, 848, 850, 853, 864], "extern": [32, 38, 41, 42, 43, 257, 258, 260, 553, 559, 744, 745, 775, 785, 820, 823], "visibl": [32, 150, 153], "servic": [32, 358, 363, 367, 386, 403, 411, 439, 475, 482, 499, 500, 527, 528, 544, 837, 844, 864], "structur": [32, 38, 41, 44, 49, 52, 180, 219, 222, 225, 261, 290, 323, 342, 363, 411, 413, 416, 419, 422, 423, 424, 427, 429, 431, 444, 560, 582, 653, 836], "data_sourc": [32, 39, 40, 41, 50], "parent": [32, 59, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 841], "nor": [32, 564, 566, 828], "scalar": [33, 38, 41, 64, 178, 180, 181, 182, 183, 184, 186, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 248, 250, 251, 261, 262, 264, 265, 268, 288, 293, 321, 415, 417, 418, 426, 428, 430, 506, 523], "column_accessor": [35, 37, 41], "contigu": [35, 36, 37, 38, 41, 42, 43, 44, 150, 177, 180, 341, 544], "iostream": [35, 36, 38, 50, 767, 842], "default_selector": [35, 36, 38], "host_data": [35, 36], "0f": [35, 36, 38, 153, 370, 371, 382], "5f": [35, 36, 153, 346, 370], "1f": [35, 36], "2f": [35, 36, 605, 620], "7f": [35, 36], "9f": [35, 36], "6": [35, 36, 59, 97, 113, 159, 355, 366, 390, 551], "shared_data": [35, 36], "malloc_shar": [35, 36, 180, 454], "memcpi": [35, 36], "sizeof": [35, 36, 151, 153, 256, 257, 786, 788, 790, 836], "whole": [35, 57, 153, 293, 295, 296, 327, 329, 330, 565, 767, 839, 842, 851], "acc": [35, 36, 50], "pull": [35, 36, 37, 41, 50], "get_count": [35, 36, 38, 41, 43, 50, 62, 381, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 545], "cout": [35, 36, 38, 43, 50, 153, 767], "endl": [35, 36, 38, 43, 50, 153, 767, 842], "free": [35, 36, 42, 43, 60, 64, 150, 257, 363, 411, 444, 779, 785, 788, 790, 791, 862, 864], "data_t": [35, 36, 38], "remove_const_t": [35, 36, 593, 605, 620, 677, 692], "obj": [35, 36], "column_index": 35, "usm": [35, 36, 38, 50, 61, 177, 255, 256, 257, 258, 269, 421, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545], "qualifi": [35, 36, 61, 595, 596, 597, 608, 616, 622, 630, 636, 644, 665, 673, 674, 681, 688, 689, 695, 702, 703, 709, 716, 717, 723, 730, 764, 774, 802, 807], "int32_t": [35, 36, 42, 44, 64, 160, 197, 198, 199, 346, 353, 354, 355, 356, 357, 361, 370, 372, 375, 380, 382, 384, 393, 394, 398, 399, 406, 425], "kind": [35, 36, 38, 41, 42, 43, 55, 56, 57, 59, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 864], "directli": [35, 36, 37, 41, 51, 55, 59, 61, 63, 158, 180, 781, 863, 864], "possibl": [35, 36, 37, 38, 44, 59, 61, 155, 158, 159, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 177, 180, 258, 260, 393, 415, 416, 417, 418, 419, 422, 423, 426, 427, 428, 429, 430, 431, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 565, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 752, 753, 755, 767, 780, 785, 816, 843, 863], "immut": [35, 36, 38, 41, 43, 44, 150, 161], "convert": [35, 36, 41, 55, 57, 63, 85, 87, 88, 118, 129, 150, 153, 159, 169, 180, 344, 366, 454, 572, 803, 809, 819, 861], "mutabl": [35, 36, 38, 150, 152, 161], "reus": [35, 36, 150, 152, 161, 165, 198, 561, 780], "reset": [35, 36, 38, 41, 54, 59, 160, 255, 421, 475, 756, 775, 841], "row_accessor": [36, 37, 41, 50], "second": [36, 49, 59, 61, 82, 116, 122, 123, 124, 125, 126, 127, 128, 131, 154, 180, 224, 229, 258, 262, 268, 270, 272, 280, 284, 286, 288, 290, 299, 301, 303, 305, 307, 311, 313, 317, 319, 321, 323, 325, 333, 335, 337, 339, 394, 409, 416, 477, 493, 518, 541, 546, 550, 551, 552, 557, 560, 606, 678, 755, 767, 785, 816, 861], "third": [36, 44, 49, 131, 755], "everi": [37, 41, 43, 66, 76, 89, 92, 93, 95, 97, 103, 104, 119, 132, 134, 136, 145, 153, 159, 184, 191, 192, 198, 199, 202, 243, 251, 255, 259, 744], "Be": [37, 41, 43], "lightweight": [37, 44, 745, 750, 754, 766], "computation": [37, 534, 837, 863], "intens": [37, 59, 61, 155, 164, 166, 172, 837], "convers": [37, 41, 46, 57, 63, 129, 153, 158, 177, 259, 564, 802], "move": [37, 43, 69, 70, 79, 80, 81, 82, 83, 84, 108, 109, 258, 369, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 404, 409, 555, 580, 584, 588, 593, 597, 605, 606, 614, 616, 620, 628, 630, 634, 642, 644, 647, 650, 655, 659, 663, 671, 673, 677, 678, 686, 688, 692, 700, 702, 706, 714, 716, 720, 728, 730, 732, 734, 848, 850, 851], "sinc": [37, 41, 50, 59, 63, 150, 153, 178, 255, 556, 557, 561, 564, 565, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 745, 752, 754, 761, 766, 777, 845], "avoid": [37, 41, 57, 59, 71, 72, 73, 478, 479, 481, 529, 530, 531, 533, 538, 539, 541, 565, 780, 786, 787, 837, 843, 845, 851], "usag": [37, 40, 41, 46, 56, 59, 129, 150, 153, 158, 176, 255, 256, 363, 411, 444, 558, 564, 771, 772, 780, 785, 786, 802, 853], "insid": [38, 41, 43, 44, 61, 64, 150, 180, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 475, 500, 527, 763, 769, 777, 843], "organ": [38, 41, 180, 674, 689, 703, 717], "chang": [38, 44, 49, 56, 61, 63, 64, 142, 150, 152, 153, 154, 169, 177, 258, 259, 261, 403, 477, 482, 528, 541, 546, 564, 565, 578, 580, 745, 754, 759, 766, 777, 798, 799, 829, 843, 845, 851, 864], "state": [38, 44, 49, 54, 59, 150, 160, 161, 171, 178, 258, 353, 354, 355, 356, 358, 363, 364, 367, 369, 386, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 403, 404, 409, 411, 412, 413, 534, 554, 583, 588, 592, 597, 601, 604, 614, 615, 619, 628, 629, 633, 642, 643, 646, 650, 651, 654, 659, 662, 671, 672, 676, 686, 687, 691, 700, 701, 705, 714, 715, 719, 728, 729, 731, 732, 733, 745, 747, 750, 754, 759, 761, 763, 766, 771, 772, 775, 778, 792, 798, 799, 800, 836, 841, 843, 844, 850, 853, 859, 864], "anoth": [38, 41, 43, 44, 51, 59, 61, 63, 129, 150, 153, 154, 177, 180, 190, 191, 236, 258, 259, 367, 395, 404, 454, 518, 546, 568, 597, 745, 755, 787, 843, 861], "brief": [38, 546], "basic": [38, 41, 61, 64, 150, 153, 185, 261, 343, 350, 353, 354, 355, 356, 362, 363, 365, 369, 376, 381, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 404, 409, 410, 411, 424, 454, 550, 551, 552, 572, 767, 809, 816, 851, 858], "scenario": [38, 41, 46, 48, 64, 363, 411, 565, 771, 772, 780], "print_properti": 38, "data_count": 38, "arr_data": 38, "ones": [38, 61, 170, 180, 783], "arr_on": 38, "full": [38, 41, 44, 65, 150, 341, 380, 575, 578], "has_mutable_data": [38, 41], "arr_mdata": 38, "still": [38, 57, 61, 64, 171, 178, 258, 353, 388, 576, 839, 841, 846], "origin": [38, 44, 99, 100, 152, 153, 154, 155, 159, 160, 163, 169, 170, 173, 260, 293, 294, 327, 328, 364, 386, 412, 550, 551, 552, 745, 750, 754, 759, 766, 777, 817], "need_mutable_data": [38, 41], "cgh": [38, 362, 363], "mdata": 38, "get_mutable_data": [38, 41], "cone": 38, "array_addit": 38, "retain": [38, 44, 753], "nullptr": [38, 42, 153, 253, 254, 258, 381, 422, 423, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 545, 560], "lifetim": [38, 61, 839], "own": [38, 41, 42, 49, 52, 61, 62, 150, 151, 152, 161, 395, 404, 550, 557, 558, 559, 560, 564, 580, 597, 614, 616, 628, 630, 642, 644, 671, 673, 686, 688, 700, 702, 714, 716, 728, 730, 744, 756, 843, 844, 845, 848, 850], "destroi": [38, 62, 153, 270, 286, 319, 558, 580, 583, 588, 590, 591, 592, 603, 604, 618, 619, 632, 633, 646, 650, 654, 659, 661, 662, 674, 676, 689, 691, 703, 705, 717, 719, 733, 756, 757, 769, 780, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 841, 842, 843, 844, 846, 848, 850, 851, 853, 857], "remain": [38, 42, 61, 82, 153, 158, 250, 268, 514, 550, 551, 616, 630, 644, 671, 673, 688, 702, 716, 730, 731, 762], "dealloc": [38, 421, 580, 583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733, 785, 786, 787, 788, 789, 790], "delet": [38, 42, 554, 775, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 828, 829, 842], "like": [38, 59, 72, 107, 150, 152, 154, 155, 156, 158, 161, 162, 164, 166, 171, 177, 180, 182, 184, 185, 191, 192, 198, 199, 200, 202, 218, 219, 221, 222, 223, 224, 225, 243, 251, 258, 260, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 512, 513, 552, 556, 758, 761, 789, 798, 799, 802, 818, 829, 836, 863], "member": [38, 44, 49, 62, 161, 179, 253, 254, 255, 258, 259, 260, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 359, 360, 361, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 436, 439, 557, 559, 564, 565, 585, 595, 602, 614, 616, 628, 630, 642, 644, 650, 652, 656, 671, 673, 675, 677, 686, 688, 690, 692, 700, 702, 704, 706, 714, 716, 718, 720, 728, 730, 732, 735, 742, 818, 820, 826, 832, 836, 852, 855, 857, 860], "decrement": [38, 43, 763], "reach": [38, 160, 560, 563, 750, 763], "increment": [38, 43, 48, 341, 546, 750], "re": [38, 181, 216, 217, 255, 256, 259, 362, 455, 456, 457, 459, 460, 462, 467, 480, 488, 507, 508, 515, 519, 532, 534, 537, 775, 784, 843, 863], "simplifi": [38, 82, 105, 158, 170, 176, 177, 758, 761, 791, 860, 863], "extdata": 38, "refdata": 38, "ref": [38, 72, 82, 95, 129, 281, 305], "get_siz": [38, 41, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "sure": [38, 107, 255, 556, 565, 570], "valid": [38, 45, 46, 64, 69, 70, 76, 77, 79, 80, 81, 82, 83, 84, 108, 109, 150, 152, 177, 180, 255, 257, 258, 259, 260, 293, 327, 369, 388, 389, 390, 391, 392, 395, 396, 397, 400, 402, 404, 409, 454, 580, 583, 588, 592, 595, 596, 597, 604, 608, 614, 616, 619, 622, 628, 630, 633, 636, 642, 644, 646, 650, 654, 659, 662, 665, 671, 673, 674, 676, 681, 686, 688, 689, 691, 695, 700, 702, 703, 705, 709, 714, 716, 717, 719, 723, 728, 730, 731, 732, 733, 759, 764, 769, 774, 780, 785, 802, 824, 843, 853], "long": [38, 62, 153, 171, 180, 255, 355, 390, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 786, 788, 790, 837, 861, 864], "transfer": [38, 41, 44, 46, 62, 152, 177, 341, 580, 614, 616, 628, 630, 642, 644, 671, 673, 686, 688, 700, 702, 714, 716, 728, 730, 753, 786], "behaviour": 38, "becom": [38, 44, 59, 155, 163, 180, 292, 422, 423, 506, 561, 588, 591, 731, 785, 841, 848], "written": [38, 44, 57, 153, 270, 482, 491, 564, 565, 781], "unmanag": 38, "othewis": 38, "noth": [38, 588, 614, 628, 642, 650, 659, 671, 686, 700, 714, 728, 793, 794, 842, 844], "newli": [38, 420, 550, 551, 552, 817, 851], "extract": [39, 41, 44, 580], "text": [39, 40, 44, 59, 66, 67, 89, 96, 103, 115, 119, 121, 159, 165, 255, 264, 265, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 290, 293, 295, 296, 297, 299, 300, 301, 303, 305, 306, 307, 308, 309, 311, 313, 314, 315, 317, 319, 320, 321, 323, 325, 326, 329, 330, 331, 333, 335, 337, 339, 340, 341, 415, 417, 418, 428, 430, 534, 836], "delimit": [39, 40, 41, 44], "numer": [39, 41, 44, 46, 55, 63, 72, 101, 102, 155, 160, 163, 173, 260, 342, 345, 354, 367, 389, 403, 409, 578], "represent": [39, 41, 44, 46, 61, 63, 150, 260, 262, 264, 265, 268, 288, 321, 481, 518, 541, 546, 578, 742, 743, 777, 843], "chosen": [39, 57, 59, 155, 158, 160, 161, 164, 169, 258, 259, 550, 551], "read_opt": 39, "uint64_t": [39, 180, 347, 353, 354, 355, 356, 358, 359, 369, 386, 389, 397, 403, 407], "none": [39, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "parse_head": 39, "default_delimit": 39, "default_read_opt": 39, "file_nam": [39, 40, 41], "opt": 39, "get_file_nam": 39, "get_delimit": 39, "get_read_opt": 39, "flag": [39, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 228, 229, 260, 482, 553, 756, 775, 841, 844], "get_filenam": 39, "charact": [39, 44, 180, 836], "get_delimt": 39, "line": [39, 44, 578, 752, 786, 787, 836], "read_arg": [39, 40, 41], "datasourc": [39, 40], "code": [40, 44, 49, 52, 59, 61, 150, 151, 152, 153, 154, 158, 161, 169, 178, 180, 257, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 363, 395, 404, 413, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 557, 564, 565, 575, 581, 592, 765, 781, 783, 791, 819, 836, 844, 863, 864], "show": [40, 41, 49, 52, 59, 155, 158, 162, 163, 165, 166, 167, 170, 534, 553, 565, 755, 780, 802, 836], "read_args_t": 40, "read_result_t": 40, "side": [40, 42, 52, 61, 107, 180, 192, 207, 237, 247, 248, 250, 251, 252, 258, 280, 281, 282, 283, 292, 301, 302, 303, 304, 305, 306, 313, 314, 315, 316, 325, 326, 335, 336, 337, 338, 339, 340, 416, 454, 558, 755, 784], "verbos": [40, 52], "overload": [40, 52, 557, 558, 564, 584, 593, 595, 596, 597, 605, 608, 614, 616, 620, 622, 628, 630, 634, 636, 644, 647, 655, 663, 665, 673, 677, 681, 686, 688, 692, 695, 700, 702, 706, 709, 716, 720, 723, 730, 732, 733, 734, 764, 774, 807, 853], "combin": [40, 44, 52, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 293, 327, 342, 345, 355, 367, 376, 390, 409, 474, 546, 565, 744, 755, 756, 812, 814, 835, 849, 851, 863], "previou": [40, 52, 59, 150, 153, 154, 171, 180, 341, 475, 527, 528, 564, 565, 568, 836, 843], "property_nam": [40, 49, 52], "property_typ": [40, 49, 52, 64], "property_type_1": 40, "property_name_1": 40, "property_type_2": 40, "property_name_2": 40, "descriptor": [40, 41, 45, 50, 51, 52, 53, 56, 58, 59, 60, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 253, 254, 255, 257, 259, 260, 775], "set_": [40, 49, 52, 421], "get_": [40, 49, 52], "perspect": [41, 51, 169], "acquisit": [41, 46, 828, 829], "prepar": [41, 57, 153, 362, 416, 769], "pictur": [41, 44, 767], "raw": [41, 43, 444, 445, 446, 447, 454], "databas": [41, 840], "remot": 41, "compress": [41, 44, 414, 415], "decompress": 41, "recov": 41, "filter": [41, 64, 549, 562, 563, 805], "normal": [41, 46, 54, 59, 71, 72, 101, 102, 151, 161, 224, 286, 319, 343, 344, 349, 352, 363, 365, 366, 379, 380, 387, 395, 404, 411, 471, 472, 484, 485, 487, 534, 546, 843], "covari": [41, 380], "flow": [41, 51, 153, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 820, 823, 833, 834, 835, 840, 842], "goe": [41, 43], "forth": 41, "fulli": [41, 63, 150, 152, 153, 161, 162, 165, 180, 253, 254, 258, 259], "done": [41, 151, 158, 159, 166, 169, 180, 253, 254, 258, 260, 416, 475, 500, 527, 550, 551, 748, 816, 850], "tabular": 41, "view": [41, 142, 143, 171, 858], "download": 41, "load": [41, 50, 569, 571, 578], "especi": [41, 61], "batch": [41, 44, 45, 46, 51, 54, 59, 71, 72, 82, 107, 151, 153, 158, 160, 161, 165, 173, 180, 184, 191, 198, 202, 219, 222, 225, 243, 251, 255, 258, 259, 260, 265, 266, 273, 274, 277, 278, 281, 282, 292, 296, 297, 308, 309, 314, 315, 330, 331], "therefor": [41, 46, 54, 55, 307, 308, 311, 422, 423, 506, 556, 569, 577, 752, 758, 765, 767, 786, 816, 851], "automat": [41, 44, 59, 157, 158, 160, 174, 180, 255, 257, 260, 556, 679, 693, 707, 721, 743, 755, 782, 816, 828, 843, 845], "categor": [41, 44], "continu": [41, 44, 261, 343, 365, 422, 423, 553, 749, 753, 759, 840, 864], "heterogen": [41, 44], "dens": [41, 42, 43, 59, 61, 180, 185, 218, 219, 221, 222, 223, 224, 225, 292, 341, 415, 416, 417, 418, 424, 426, 428, 430, 454, 548], "spars": [41, 44, 180, 415, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 548], "chunk": [41, 343, 359, 365, 407], "unnecessari": [41, 59], "ownership": [41, 580, 591, 614, 616, 630, 644, 671, 673, 686, 688, 702, 716, 728, 730, 744, 797, 801], "layout": [41, 42, 44, 58, 59, 61, 63, 64, 75, 129, 142, 143, 147, 150, 151, 152, 153, 154, 163, 171, 179, 180, 192, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 218, 219, 221, 222, 223, 224, 225, 237, 248, 250, 251, 260, 292, 341, 380, 415, 416, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 765], "safeti": [41, 564, 833, 834, 858], "reason": [41, 54, 57, 59, 151, 153, 257, 416, 475, 500, 527, 755], "better": [41, 56, 61, 150, 219, 222, 225, 798, 799, 864], "thu": [41, 59, 150, 284, 317, 565, 569, 767, 792, 797, 846], "nomin": [41, 43, 44], "ordin": [41, 42, 43, 44], "interv": [41, 43, 44, 178, 343, 360, 361, 365, 405, 406, 413, 550, 551, 552, 583, 592, 597, 604, 614, 616, 619, 628, 630, 633, 642, 644, 646, 654, 662, 671, 673, 676, 686, 688, 691, 700, 702, 705, 714, 716, 719, 728, 730, 732, 733, 763, 858, 861], "ratio": [41, 43, 44, 466, 546, 550, 551, 552, 572], "affect": [41, 153, 154, 525, 745, 750, 754, 755, 759, 766, 777, 785, 839], "contract": 41, "flat": [41, 44], "acquir": [41, 762, 763, 792, 793, 794, 795, 796, 797, 800, 801, 828, 829], "desir": [41, 50, 62, 253, 254, 255, 258, 259, 260, 343, 454], "demonstr": [41, 410, 451, 565, 567, 767, 769, 777, 843], "diagram": [41, 150], "highlight": [41, 153], "color": [41, 44], "dark": 41, "blue": 41, "orang": 41, "light": 41, "shown": [41, 49, 155, 163, 171, 172, 255, 257, 565, 752, 765, 785], "tm": [41, 44], "note": [41, 57, 68, 70, 71, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 99, 100, 101, 102, 110, 111, 114, 118, 122, 123, 124, 125, 126, 127, 128, 131, 142, 144, 147, 148, 153, 154, 155, 157, 158, 159, 163, 165, 171, 193, 197, 198, 199, 200, 207, 237, 248, 250, 251, 255, 256, 259, 260, 292, 293, 327, 343, 344, 347, 359, 386, 403, 414, 415, 416, 456, 457, 460, 462, 467, 478, 479, 480, 482, 488, 529, 530, 531, 532, 536, 538, 539, 540, 556, 731, 859], "shortcut": [41, 51], "get_column_count": [41, 43, 50], "get_row_count": [41, 43, 44], "get_metadata": [41, 43], "get_kind": [41, 42, 43, 62, 160], "get_data_layout": [41, 43], "get_feature_count": [41, 43], "get_feature_typ": [41, 43], "get_data_typ": [41, 43, 64], "feature_typ": [41, 43], "data_point": 42, "row_major": [42, 43, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 415, 436, 439, 451], "constdelet": 42, "data_delet": 42, "reinterpret_cast": 42, "metadata": [42, 44, 150], "column_major": [42, 43, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 415, 454], "cast": [42, 129, 147], "onto": [43, 783, 837], "restrict": [43, 74, 156, 158, 159, 162, 165, 168, 169, 258, 259, 839, 845, 864], "weaken": 43, "illustr": [43, 256, 471, 472, 484, 485, 486, 487, 754], "table1": 43, "data_ptr": 43, "table2": 43, "table3": 43, "subtyp": 43, "how": [43, 50, 59, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 99, 100, 108, 109, 142, 150, 151, 153, 158, 160, 161, 166, 170, 177, 178, 180, 216, 217, 256, 261, 270, 290, 291, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 323, 324, 422, 423, 451, 454, 549, 556, 565, 567, 571, 754, 836, 842], "mani": [43, 51, 150, 152, 180, 189, 258, 270, 292, 544, 556, 565, 753, 780, 786, 842, 863], "special": [43, 44, 61, 74, 150, 152, 156, 157, 159, 160, 165, 167, 168, 169, 172, 173, 174, 177, 180, 255, 258, 259, 260, 261, 292, 401, 455, 459, 460, 461, 464, 476, 478, 483, 499, 506, 515, 522, 523, 529, 537, 538, 544, 546, 554, 560, 748, 761, 762, 767, 835, 843, 853], "swap": [43, 61, 79, 158, 186, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 802, 833], "ftype": 43, "feature_index": 43, "feature_count": 43, "unknown": [43, 63, 150, 160, 255, 416, 422, 423, 576], "moment": [43, 48, 432, 433, 444, 445, 447, 771], "discret": [44, 180, 253, 254, 258, 260, 343, 365, 548, 864], "synonym": 44, "qualit": 44, "supervis": 44, "what": [44, 51, 57, 59, 61, 64, 153, 160, 258, 365, 802, 836], "dog": 44, "cat": 44, "email": 44, "spam": 44, "unsupervis": 44, "bunch": [44, 290, 292, 323], "usual": [44, 64, 103, 152, 295, 296, 329, 330, 413, 565], "encod": 44, "star": 44, "imag": [44, 59, 69, 153, 166], "real": [44, 47, 169, 180, 181, 193, 211, 212, 216, 217, 253, 254, 255, 258, 260, 261, 262, 270, 284, 286, 292, 293, 295, 299, 301, 303, 305, 307, 308, 313, 314, 315, 316, 317, 319, 321, 323, 356, 369, 371, 374, 375, 377, 378, 379, 380, 383, 385, 387, 397, 401, 405, 408, 459, 474, 480, 483, 488, 491, 515, 519, 523, 532, 534, 537, 546, 802, 860], "quantit": 44, "person": 44, "height": [44, 59, 82, 83, 108, 109, 158, 166], "price": [44, 786], "hous": 44, "comma": [44, 836], "field": [44, 64, 391, 553], "By": [44, 61, 153, 353, 354, 355, 356, 557, 558, 559, 560, 564, 756, 759, 767, 859, 863, 864], "meaning": 44, "qualiti": [44, 376], "rectangl": 44, "width": [44, 59, 82, 83, 108, 109, 158, 166, 180], "subtract": [44, 64, 141, 149, 537, 546, 861], "frame": 44, "temperatur": 44, "celsiu": 44, "fahrenheit": 44, "detect": [44, 150, 153, 166, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 575, 576], "weight": [44, 54, 55, 57, 59, 61, 64, 79, 80, 81, 82, 83, 84, 107, 150, 154, 155, 158, 160, 162, 163, 165, 167, 169, 171, 436, 439], "bia": [44, 54, 57, 59, 74, 75, 79, 82, 101, 102, 107, 158, 160, 162, 165, 171, 189, 199], "gender": 44, "car": 44, "student": 44, "grade": 44, "outlier": 44, "significantli": [44, 55, 258, 575], "comparison": [44, 61, 177, 566, 582, 590, 603, 604, 612, 617, 618, 619, 626, 631, 632, 633, 640, 645, 646, 653, 661, 662, 669, 674, 689, 703, 717, 731, 786, 788, 790], "divis": [44, 71, 72, 73, 79, 80, 81, 82, 83, 84, 86, 256, 272, 273, 290, 323, 483, 550, 551, 552, 556, 816], "absenc": [44, 61, 152], "tower": 44, "weather": 44, "made": [44, 61, 413, 499, 550, 551, 745, 754, 759, 766, 777], "goal": [44, 152], "select": [44, 59, 64, 149, 158, 180, 216, 217, 258, 292, 376, 569, 761, 767, 836, 839, 851], "criteria": 44, "hidden": [44, 54, 160, 171, 786, 863], "patter": 44, "uniform": [44, 178, 342, 343, 344, 355, 362, 363, 365, 366, 390, 411, 413], "builder": 44, "characterist": [44, 346, 348, 349, 352, 357, 360, 361, 370, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 393, 394, 398, 399, 401, 405, 406, 408], "principl": 44, "privat": [44, 153, 253, 254, 787, 836], "present": [44, 59, 107, 180, 597, 606, 678, 850, 855], "csr": [44, 414, 415, 423, 424], "increas": [44, 55, 171, 509, 546, 578, 679, 693, 707, 721, 750, 763, 785, 786, 816, 861], "freed": [44, 150, 785, 788], "set_row_count": 44, "hide": [44, 565], "workload": [44, 51, 59, 571], "jit": 44, "just": [44, 57, 150, 158, 767], "spir": 44, "v": [44, 172, 177, 270, 271, 342, 347, 359, 522, 561, 593, 605, 620, 634, 663, 677, 692, 706, 720, 745, 746, 747, 750, 754, 755, 758, 759, 761, 763, 765, 766, 769, 771, 772, 777, 778, 779, 780, 820, 821, 822, 823, 825, 826, 827], "portabl": [44, 61, 151, 152, 353, 388, 862, 863], "style": [44, 180, 781], "github": 45, "page": [45, 63, 256, 342, 551, 785, 804], "help": [45, 46, 91, 148, 150, 180, 384, 767, 864], "speed": [45, 353, 388, 860], "highli": [45, 57, 151, 365, 744, 863], "preprocess": [45, 46], "decis": [45, 46, 150, 180], "tradit": [45, 59, 180, 341], "visit": [45, 858], "glossari": 45, "mathemat": [45, 51, 57, 112, 115, 117, 169, 171, 180, 261, 342, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 565], "notat": [45, 59, 153, 255, 460, 544, 802, 833, 834], "appendix": [45, 180, 548], "bibliographi": [45, 506], "edg": [46, 748, 750, 752, 756, 764, 774, 775, 835], "close": [46, 55, 178, 409, 524, 552], "consum": [46, 56, 61, 150, 153, 256, 762, 837, 851], "agnost": [46, 59, 60, 61], "technologi": 46, "entir": [46, 48, 122, 123, 124, 125, 126, 127, 128, 259, 478, 479, 481, 529, 530, 531, 533, 538, 539, 541, 841, 852], "varieti": [46, 51, 414, 548, 863], "appropri": [46, 57, 61, 153, 156, 157, 165, 166, 168, 174, 258, 362, 410, 451, 556, 564, 569, 570], "random": [46, 176, 177, 180, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 451, 548, 556, 566, 731, 736, 803, 854], "import": [46, 50, 51, 59, 152, 153, 161, 422, 423, 568, 569, 571, 802], "seamless": 46, "orient": [46, 342, 367, 402], "redefin": 46, "sometim": [47, 150, 152, 161, 162, 565, 786], "interpret": [47, 59, 63, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 99, 100, 107, 108, 109, 142, 180, 255, 256, 356, 397, 400, 785], "cardin": 47, "absolut": [47, 66, 122, 186, 216, 217, 255, 455, 505, 546, 861], "mathbb": [47, 259, 349, 352], "sqrt": [47, 64, 72, 101, 123, 139, 149, 155, 159, 163, 229, 344, 349, 352, 366, 379, 380, 385, 387, 471, 472, 484, 485, 486, 487, 501, 546, 560], "x_2": [47, 344, 366], "dot": [47, 186, 194, 195, 232, 255, 256, 259, 418, 424], "x_d": 47, "partial": [48, 153, 163, 177, 272, 273, 556, 565, 752], "later": [48, 101, 152, 757, 830, 840, 843], "merg": [48, 556, 564, 603, 614, 618, 632, 661, 674, 686, 689, 703, 717, 810, 813, 850], "meta": [49, 51, 150], "dispatch": [49, 161], "aggreg": [49, 52, 843], "dedic": [49, 153, 840, 841], "turn": [49, 575, 785, 842], "default_float_t": 49, "tag": [49, 60, 61, 153, 158, 165, 166, 168, 170, 177, 565, 578, 743, 755, 758, 761, 779, 835, 837, 840], "never": [49, 59, 61, 241, 242, 243, 564, 731, 759, 781, 843], "preset": 49, "chain": [49, 158, 422, 423], "set_property_name_1": 49, "value_1": 49, "set_property_name_2": 49, "value_2": 49, "set_property_name_3": 49, "value_3": 49, "top": [49, 69, 70, 79, 80, 81, 82, 83, 84, 108, 109, 158, 161, 166, 341, 575, 577], "assum": [49, 57, 59, 82, 87, 88, 150, 152, 155, 158, 159, 161, 167, 170, 180, 213, 214, 215, 228, 229, 248, 250, 251, 255, 256, 258, 260, 286, 292, 319, 325, 326, 353, 354, 355, 356, 360, 361, 369, 388, 389, 390, 395, 397, 400, 404, 405, 406, 409, 414, 528, 569, 767], "depict": [50, 171], "cassert": 50, "selector": [50, 177], "instead": [50, 51, 59, 152, 154, 156, 158, 159, 162, 165, 169, 171, 178, 180, 198, 255, 256, 264, 265, 268, 454, 842, 843, 845], "breviti": 50, "configur": [50, 62, 102, 153, 154, 155, 158, 163, 165, 167, 178, 180, 253, 254, 256, 257, 258, 259, 260, 575, 576, 577, 578, 782, 785, 834, 835, 843, 845], "train_r": 50, "print": [50, 153, 575, 578, 752], "assert": [50, 61, 153, 154, 552, 575], "data_transform": 50, "primarili": [51, 839], "knob": 51, "those": [51, 57, 65, 107, 159, 175, 177, 180, 256, 259, 454, 588, 614, 671, 686, 728, 767, 783, 845], "often": [51, 56, 158, 257, 454, 569], "dozen": 51, "logist": [51, 54, 160], "procedur": [51, 53], "besid": [51, 63, 150], "moreov": [51, 56, 59, 154, 158], "empir": 51, "risk": [51, 180], "techniqu": 51, "Such": [51, 61, 152, 255, 353, 388, 422, 423], "few": [51, 153, 158, 162, 171, 260, 454], "aspect": [51, 180, 550, 551, 839], "task": [51, 52, 57, 153, 180, 253, 254, 261, 292, 556, 557, 558, 559, 560, 564, 568, 571, 743, 744, 752, 755, 756, 767, 830, 833, 834, 835, 839, 841, 842, 843, 844, 845, 846, 847, 848, 851], "vari": [51, 180, 198, 365, 395, 399, 404, 416], "best": [51, 57, 150, 158, 163, 169, 259, 395, 478, 479, 481, 529, 530, 531, 533, 538, 539, 541, 816], "tackl": 51, "mention": [51, 131, 153, 155, 343, 548], "challeng": 51, "decompos": 51, "verifi": 52, "befor": [52, 57, 59, 61, 63, 79, 80, 81, 82, 83, 84, 103, 107, 131, 141, 150, 153, 158, 160, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 341, 381, 421, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 475, 482, 534, 560, 566, 580, 750, 752, 758, 759, 763, 771, 792, 797, 844, 846, 848], "_input_t": 52, "_result_t": 52, "incompat": [52, 64, 731], "exact": [52, 63, 171, 480, 483, 488, 511, 524, 532, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 777, 837], "compat": [52, 353, 388, 578, 580, 783, 863], "pre": [52, 57, 61, 152, 161, 565], "similar": [52, 61, 62, 288, 292, 321, 556, 564, 565, 771, 772, 780, 802, 850, 855], "operation_input": 52, "_input": 52, "assumpt": [52, 150, 180, 381, 386, 403, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 548], "operation_result": 52, "_result": 52, "bellow": 53, "train_input_t": 53, "train_result_t": 53, "infer_input_t": 53, "infer_result_t": 53, "compute_input_t": 53, "compute_result_t": 53, "dst": [54, 57, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174], "f": [54, 59, 151, 154, 168, 170, 171, 180, 255, 356, 369, 397, 413, 525, 558, 559, 561, 564, 608, 622, 636, 665, 681, 695, 709, 723, 756, 808, 843, 845, 846, 850, 851, 852], "src": [54, 57, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 745, 746, 747, 750, 754, 758, 759, 761, 763, 766, 769, 771, 772, 777, 780, 848], "activ": [54, 57, 59, 76, 92, 103, 112, 150, 153, 154, 155, 160, 162, 171, 745, 759, 769, 820, 823, 839, 840, 842, 843, 844], "learnabl": [54, 101, 102, 155, 163], "backward": [54, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 160, 161, 165, 168, 169, 171, 174, 177, 188, 250, 253, 254, 255, 256, 258, 260], "diffsrc": [54, 70, 80, 83, 96, 102, 109, 155, 158, 159, 162, 163, 164, 166, 167, 170, 172, 173], "f_": [54, 348, 349, 352, 357, 360, 361, 370, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 394, 398, 399, 401, 405, 406, 408], "diffdst": [54, 67, 70, 75, 80, 81, 83, 84, 96, 102, 109, 113, 155, 158, 159, 162, 163, 164, 166, 167, 170, 172, 173], "diffweight": [54, 81, 84, 158, 162, 167], "might": [54, 57, 150, 153, 154, 155, 158, 159, 162, 163, 164, 169, 171, 367, 416, 419, 427, 429, 431, 475, 500, 527, 556, 565, 767, 769, 786, 836, 837, 842, 846], "commonli": [54, 176, 261], "wide": [54, 416, 548, 828], "convolut": [54, 59, 61, 63, 64, 79, 80, 81, 83, 84, 149, 151, 152, 154, 160, 161, 166, 169, 171], "usabl": [54, 785], "inner": [54, 59, 151, 160, 161, 211, 241, 858], "scale_shift": 54, "shift": [54, 72, 101, 153, 155, 160, 342, 367, 391, 400, 402, 506], "workspac": [54, 155, 158, 160, 163, 164, 166, 171, 258, 260, 321], "carri": [54, 258, 260, 841], "forward": [54, 59, 61, 70, 152, 160, 161, 168, 171, 174, 177, 188, 250, 253, 254, 255, 256, 258, 259, 260, 557, 585, 595, 607, 614, 621, 628, 635, 656, 664, 675, 680, 686, 690, 694, 700, 704, 708, 718, 722, 744, 746, 747, 752, 762, 763, 765, 771, 772, 777, 807, 858], "scratchpad": [54, 152, 160, 161, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "temporari": [54, 152, 153, 160, 161, 177, 257], "diff_src": [54, 67, 70, 73, 77, 80, 83, 90, 94, 96, 98, 100, 102, 106, 109, 113, 116, 120, 133, 135, 137, 139, 146, 155, 166, 170], "diff_dst": [54, 67, 70, 73, 75, 77, 80, 81, 83, 84, 90, 94, 96, 98, 100, 102, 106, 109, 113, 116, 120, 133, 135, 137, 139, 146, 155, 173], "diff_weight": [54, 81, 84, 153], "diff_bia": [54, 75], "diff_scal": 54, "diff_shift": 54, "_layer": 54, "_iter": 54, "recurr": [54, 160, 171, 356, 365, 369, 373, 397, 400], "box": 54, "transposit": [54, 189, 196, 197, 198, 199, 200, 201, 202, 212, 218, 219, 221, 222, 223, 224, 225, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "box_t": 54, "timestamp": [54, 171, 861], "box_l": 54, "tanh": [54, 64, 112, 146, 149, 151, 158, 159, 160, 171, 538, 546], "relu": [54, 64, 103, 115, 120, 149, 151, 152, 155, 158, 160, 161, 167, 171], "cell": [54, 59, 160, 534], "candid": [54, 59, 65], "gate": [54, 59, 160, 171], "forget": [54, 59], "f16": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "bf16": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "f32": [55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "s32": [55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "s8": [55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "u8": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl": [55, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "abcdef": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "abcd": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "abdc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "abc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ab": [55, 56, 59, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 217, 220, 226, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 247, 249, 252, 341, 478, 479, 481, 501, 529, 530, 531, 533, 538, 539, 541, 546], "acb": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "acdb": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "acdeb": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "bac": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ba": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "cba": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "cdba": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "cdeba": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dcab": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "decab": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "defcab": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dhwigo": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dhwio": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "goidhw": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "goihw": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "goiw": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "hwigo": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "hwio": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ldgoi": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ldgo": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ldigo": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ldio": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ldoi": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ldnc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ncdhw": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "nchw": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ncw": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "nc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ndhwc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "nhwc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ntc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "nwc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "oidhw": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "oihw": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "oiw": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "oi": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "tnc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "tn": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 758, 779], "wigo": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "wio": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "format_tag": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "use_global_stat": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "use_scal": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "use_shift": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "fuse_norm_relu": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "normalization_flag": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "use_scaleshift": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "backward_data": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "forward_infer": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "forward_train": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "prop_kind": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "binary_add": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "binary_max": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "binary_min": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "binary_mul": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "convolution_auto": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "convolution_direct": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "convolution_winograd": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "deconvolution_direct": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "deconvolution_winograd": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_ab": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_bounded_relu": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_clip": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_clip_use_dst_for_bwd": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_elu_use_dst_for_bwd": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_elu": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_exp_use_dst_for_bwd": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_exp": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_gelu_erf": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_gelu_tanh": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_gelu": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_hardsigmoid": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_hardswish": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_linear": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_logistic_use_dst_for_bwd": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_logist": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_log": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_mish": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_pow": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_relu_use_dst_for_bwd": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_relu": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_round": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_soft_relu": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_sqrt_use_dst_for_bwd": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_sqrt": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_squar": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_swish": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_tanh_use_dst_for_bwd": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_tanh": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "lbr_gru": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "lrn_across_channel": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "lrn_within_channel": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "pooling_avg_exclude_pad": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "pooling_avg_include_pad": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "pooling_avg": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "pooling_max": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "resampling_linear": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "resampling_nearest": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "undef": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "vanilla_gru": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "vanilla_lstm": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "vanilla_rnn": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_attr_multiple_post_op": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_attr_scal": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_attr_zero_point": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_src_0": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_src": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_src_lay": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_from": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_src_1": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_src_it": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_src_2": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_src_iter_c": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_dst_0": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_dst": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_to": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_dst_lay": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_dst_1": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_dst_it": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_dst_2": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_dst_iter_c": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_weights_0": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_weight": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_scal": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_shift": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_weights_lay": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_weights_1": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_weights_it": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_weights_peephol": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_weights_project": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_bia": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_mean": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_vari": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_workspac": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_scratchpad": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_src_0": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_src": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_src_lay": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_src_1": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_src_it": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_src_2": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_src_iter_c": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_dst_0": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_dst": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_dst_lay": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_dst_1": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_dst_it": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_dst_2": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_dst_iter_c": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_weights_0": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_weight": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_scal": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_shift": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_weights_lay": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_weights_1": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_weights_it": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_weights_peephol": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_weights_project": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_diff_bia": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_multiple_src": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_arg_multiple_dst": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_runtime_dim_v": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_runtime_size_v": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_runtime_f32_v": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_runtime_s32_v": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "augru_backward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "primitive_desc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "augru_forward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "batch_normalization_forward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "concat": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "convolution_forward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_backward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwise_forward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "gru_backward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "gru_forward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "layer_normalization_forward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "primtive_desc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "lbr_augru_backward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "lbr_augru_forward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "lbr_gru_backward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "lbr_gru_forward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "lstm_backward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "lstm_forward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "permute_ax": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "submemory_desc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "get_data_handl": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "get_desc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "get_engin": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "set_data_handl": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "pooling_forward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "workspace_desc": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "post_op": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "append_eltwis": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "append_binari": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "append_sum": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "len": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 192, 196, 201], "primimit": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwis": [55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "primitive_attr": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "set_fpmath_mod": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "set_scales_mask": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "set_zero_points_mask": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "set_post_op": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "set_scratchpad_mod": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "next_impl": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "primitive_desc_bas": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "reorder": [55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174], "rnn_primitive_desc_bas": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "scratchpad_mod": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "shuffle_forward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "vanilla_rnn_backward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "vanilla_rnn_forward": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "sycl_interop": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "get_buff": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177], "set_buff": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "auto_broadcast": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "epsilon": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "momentum": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "begin_norm_axi": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "ax": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 280, 283, 286, 287, 313, 319, 320, 325, 326, 550, 551], "dilat": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dst_shape": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "output_pad": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "pads_begin": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "pads_end": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "shape": [55, 56, 59, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 366, 371, 378, 401, 408, 416, 863], "src_shape": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "stride": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 222, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 243, 244, 245, 246, 247, 249, 251, 252, 255, 256, 260, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 386], "weights_shap": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "zp": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "exclude_pad": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "keep_dim": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "keep_stat": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "per_channel_broadcast": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "special_zero": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "transpose_a": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 415, 416], "transpose_b": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 415, 416], "use_affin": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "use_dst": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "auto_pad": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "coordinate_transformation_mod": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "data_format": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "qtype": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "rounding_typ": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "weights_format": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "layout_typ": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "opaqu": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 261], "dequant": [55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "typecast": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "graph": [55, 56, 59, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 577, 745, 746, 747, 748, 750, 753, 754, 755, 757, 758, 759, 761, 763, 766, 767, 769, 771, 772, 775, 777, 778, 779, 780, 820, 823, 833, 834, 835, 840, 842], "op": [55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 160, 161, 163, 196, 197, 198, 199, 200, 201, 202, 212, 218, 219, 221, 222, 223, 224, 225, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 415, 416, 417, 418, 419, 428, 429, 430, 431, 564], "staticreshap": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dynamicreshap": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "compiled_partit": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "add_op": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "get_partit": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "is_support": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_graph_unknown_ndim": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "dnnl_graph_unknown_dim": [55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "abbrevi": [55, 59, 155, 158, 159, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173], "readabl": [55, 59, 155, 158, 159, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 179], "expon": [55, 117, 121, 153, 160, 474, 506, 511, 546], "keep": [55, 59, 64, 142, 614, 671, 686, 728, 769, 853], "signific": [55, 258, 506], "veri": [55, 153, 258, 342, 556], "occupi": [55, 786], "spot": 55, "trade": 55, "advantag": [55, 198, 261], "versu": 55, "footprint": [55, 150, 785], "henc": [55, 59, 61, 153, 155, 158, 159, 163, 166, 172, 173, 180, 341], "throughput": [55, 57, 798, 799], "treat": [55, 162, 169, 173, 347, 373], "themselv": [55, 308], "necessarili": [55, 157, 170, 180, 270, 414, 548, 552, 564, 569, 710, 845, 851], "flexibl": [55, 65, 152, 219, 222, 225, 783], "maintain": [55, 57, 61, 177, 748, 750], "master": 55, "afterward": [55, 552], "tensor": [55, 57, 59, 60, 61, 63, 66, 68, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 138, 140, 141, 142, 144, 145, 147, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "latter": [55, 155, 163, 259], "fed": [55, 63, 555], "fundament": [56, 548, 731, 809], "discuss": [56, 59, 180, 367, 548], "mix": [56, 63, 147, 193, 255, 454], "accuraci": [56, 57, 153, 158, 365, 391, 459, 475, 478, 479, 481, 482, 499, 500, 506, 515, 519, 527, 528, 529, 530, 531, 533, 537, 538, 539, 541, 544, 547], "implicit": [56, 61, 156, 157, 158, 165, 169, 174, 177, 802, 836, 843], "downconvers": 56, "speedup": [56, 153], "fpmath": [56, 153], "lower": [56, 57, 76, 77, 150, 153, 155, 158, 166, 167, 170, 180, 189, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 272, 273, 284, 285, 286, 287, 288, 289, 290, 291, 299, 300, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 333, 334, 339, 340, 341, 428, 479, 481, 531, 533, 534, 539, 541, 552, 767, 785, 843], "arithmet": [56, 125, 141, 177, 259, 260, 261, 469, 546, 861], "individu": [56, 152, 180, 219, 222, 225, 548, 580, 758], "guid": [56, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 767, 828, 836], "push": [57, 582, 645, 651, 653, 745, 746, 747, 750, 753, 754, 758, 759, 761, 763, 766, 769, 771, 772, 777, 778, 780], "recent": [57, 772, 856], "focus": 57, "achiev": [57, 59, 169, 171, 556, 569, 748, 864], "offer": [57, 261, 731], "improv": [57, 72, 101, 102, 151, 154, 155, 159, 163, 261, 544, 566, 767, 786], "pack": [57, 61, 187, 213, 214, 215, 233, 234, 235, 246, 247, 341, 380, 559, 758, 779], "instruct": [57, 59, 61, 158, 367], "cost": [57, 150, 152], "symmetr": [57, 63, 87, 88, 180, 187, 188, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 286, 288, 292, 299, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 380, 424, 426, 482], "asymmetr": [57, 63, 85, 87, 88, 118], "factor": [57, 89, 90, 153, 154, 160, 170, 184, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 248, 250, 251, 258, 259, 261, 262, 264, 265, 268, 272, 273, 276, 277, 280, 281, 284, 286, 290, 291, 292, 293, 295, 296, 301, 303, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 323, 324, 329, 330, 335, 337, 366, 376, 767], "relationship": [57, 150, 471, 472, 484, 485, 486, 487, 752, 837], "scale_": 57, "zp_": 57, "formula": [57, 66, 69, 71, 72, 76, 82, 83, 87, 88, 89, 92, 93, 95, 96, 97, 101, 103, 104, 107, 108, 112, 115, 117, 119, 132, 134, 136, 145, 153, 155, 158, 159, 162, 163, 164, 166, 167, 170, 171, 172, 173, 344, 366, 369, 455, 459, 461, 464, 478, 483, 515, 529, 534, 537, 538], "ahead": [57, 358, 364, 403, 412, 565], "calibr": 57, "tool": [57, 151, 575], "minimum": [57, 64, 126, 149, 156, 186, 217, 260, 444, 506, 839], "dynam": [57, 158, 160, 165, 342, 780, 839, 846], "behav": [57, 150, 171, 177, 454, 512, 513, 552, 561, 775, 778, 785, 789], "mask": [57, 153, 154, 402, 844], "rnn": [57, 59, 151, 153, 160, 161, 163], "requant": 57, "wider": 57, "impact": [57, 153, 731, 785, 839], "overflow": [57, 459, 475, 480, 482, 483, 488, 489, 490, 492, 500, 505, 515, 518, 519, 527, 532, 537, 542, 546], "accumul": [57, 75, 150, 154, 166, 564, 744, 810, 811, 813], "underflow": [57, 471, 475, 482, 485, 488, 489, 490, 500, 518, 527], "encourag": [57, 864], "satur": [57, 153, 169], "fuse": [57, 63, 65, 152, 155, 160, 161], "mecan": 57, "_op": [57, 168], "src_": [57, 85, 87, 88, 118, 122, 123, 124, 125, 126, 127, 128], "weights_": [57, 436], "dst_": [57, 85, 87, 88, 118, 122, 123, 124, 125, 126, 127, 128], "zero_point": [57, 153], "zero_point_": 57, "operatornam": [57, 59, 112, 134, 154, 471, 472, 484, 485, 486, 487, 491], "_to": [57, 358, 403], "_int8": 57, "_f32": 57, "conv_": 57, "comp_": 57, "regular": [57, 149, 164, 571, 785, 843], "take": [57, 63, 80, 81, 85, 87, 88, 107, 118, 122, 123, 124, 125, 126, 127, 128, 131, 150, 152, 153, 154, 158, 159, 160, 161, 180, 260, 261, 356, 369, 397, 422, 423, 454, 544, 556, 558, 564, 565, 570, 580, 745, 755, 761, 766, 767, 785, 807, 817, 839, 860, 863], "compens": 57, "term": [57, 158, 170, 171, 349, 802, 836, 864], "account": [57, 158, 259, 863], "_s8": 57, "potenti": [57, 61, 64, 151, 152, 786, 837], "round": [57, 64, 69, 85, 87, 88, 108, 118, 147, 149, 153, 159, 160, 261, 473, 494, 511, 517, 518, 525, 543, 546, 565, 816], "popular": [57, 414], "deconvolut": [57, 160, 161, 166], "would": [57, 61, 153, 154, 155, 158, 163, 165, 166, 169, 171, 255, 261, 358, 386, 392, 403, 409, 592, 604, 614, 619, 633, 662, 671, 676, 686, 691, 719, 728, 767, 802, 839], "ic": [57, 82, 85, 88, 118, 153, 158, 162, 170, 173], "ih": [57, 82, 153, 158, 162, 170], "iw": [57, 82, 153, 158, 162, 170], "oc": [57, 82, 153, 158, 162], "kh": [57, 69, 82, 83, 108, 153, 158, 162, 166], "kw": [57, 69, 82, 108, 153, 158, 162, 166], "oh": [57, 69, 82, 108, 158, 166, 170], "ow": [57, 69, 82, 108, 158, 166, 170], "now": [57, 171, 257, 767, 785, 861], "accordingli": [57, 61, 64, 87, 88, 154, 255], "dim": [58, 59, 60, 61, 63, 64, 153, 158, 160, 164, 165, 166, 169, 172, 177], "offset_0": 59, "laid": [59, 152, 153, 169], "length": [59, 60, 64, 115, 116, 196, 201, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 219, 225, 230, 233, 234, 235, 238, 239, 240, 244, 245, 246, 247, 249, 252, 258, 259, 260, 353, 354, 367, 388, 389, 391, 395, 402, 414, 422, 423, 430, 482], "fix": [59, 180, 199, 454, 482, 523, 843], "certain": [59, 62, 150, 154, 158, 422, 423, 519, 523, 575, 579, 675, 690, 704, 718, 744, 792, 797, 839, 843, 844], "canon": 59, "cnn": [59, 151, 153, 154, 155, 158, 162, 163, 166, 172], "stand": [59, 158, 366, 779], "minibatch": [59, 61, 162], "channel": [59, 63, 72, 74, 75, 79, 80, 81, 82, 83, 84, 85, 87, 88, 101, 102, 115, 116, 118, 122, 123, 124, 125, 126, 127, 128, 155, 160, 163, 171, 172, 173], "spatial": [59, 69, 70, 79, 80, 81, 82, 83, 84, 99, 100, 108, 109, 150, 153, 155, 158, 162, 164, 166, 167, 170, 172], "depth": [59, 82, 83, 158, 166], "outermost": [59, 157, 172, 173, 840], "innermost": [59, 157, 172, 173, 841, 846], "plai": [59, 150], "role": [59, 150], "agre": [59, 864], "permut": [59, 61, 143, 260, 272, 273, 290, 323], "geq": [59, 158, 159, 170, 344, 346, 348, 357, 360, 361, 498, 514, 543], "Then": [59, 131, 142, 162, 344, 400, 731], "i_0": 59, "i_": 59, "i_j": 59, "submemori": 59, "Their": 59, "purpos": [59, 61, 150, 258, 260, 344, 363, 546, 787], "regardless": [59, 180, 216, 217, 259, 526], "_a": 59, "densli": 59, "stai": [59, 61, 153], "strides_non_transpos": 59, "a_non_transpos": 59, "strides_transpos": 59, "a_transpos": 59, "letter": [59, 836], "english": 59, "alphabet": 59, "arbitrarili": 59, "word": [59, 153, 255, 259, 284, 317, 341, 836], "nomenclatur": 59, "conveni": [59, 60, 150, 160, 552], "alias": [59, 60, 175, 177, 593, 605, 620, 677, 692, 748], "That": [59, 142, 158, 165, 177, 180, 255, 258, 341, 565, 748, 767], "queri": [59, 61, 150, 152, 153, 158, 160, 161, 162, 164, 171, 180, 198, 257, 258, 259, 782], "expens": [59, 61, 152, 158, 575], "pad": [59, 61, 69, 70, 79, 80, 81, 82, 83, 84, 108, 109, 158, 160, 166, 171, 255, 786, 787], "fail": [59, 61, 64, 150, 152, 155, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 258, 265, 273, 277, 281, 284, 286, 296, 308, 314, 317, 319, 330, 545, 576, 578, 614, 671, 686, 728, 731, 788, 842], "incorrect": [59, 263, 266, 267, 269, 271, 274, 275, 278, 279, 282, 283, 285, 287, 289, 291, 294, 297, 298, 300, 302, 304, 306, 309, 310, 312, 315, 316, 318, 320, 322, 324, 326, 328, 331, 332, 334, 336, 338, 340], "calcul": [59, 69, 70, 71, 73, 77, 79, 80, 81, 82, 83, 84, 90, 99, 100, 105, 106, 108, 109, 120, 122, 123, 124, 125, 126, 127, 128, 133, 136, 137, 139, 142, 146, 150, 160, 166, 167, 198, 202, 243, 253, 254, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 355, 356, 365, 369, 395, 397, 404, 422, 423, 447, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 581, 592, 765, 780, 819], "amount": [59, 61, 79, 80, 81, 82, 83, 84, 153, 785, 816, 843], "central": [59, 432, 433, 434, 435, 444, 447], "notion": [59, 156, 157, 168, 174, 829], "understood": [59, 180], "correctli": [59, 155, 158, 731], "matmul": [59, 64, 149, 160, 165], "placehold": [59, 158, 161, 162, 165, 171, 836], "circumst": [59, 64], "hardwar": [59, 150, 153, 180, 396, 565, 786, 798, 799, 843, 844, 845, 862, 863], "practic": [59, 169, 176, 731], "topologi": [59, 154, 166, 172, 755, 782], "lrn": [59, 151, 160, 164], "preced": [59, 70, 81, 83, 84, 150, 155, 164, 166, 172, 565, 767, 771, 803, 809, 836, 843], "short": [59, 171, 180, 343, 365, 546, 547], "summari": [59, 155, 163, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 448, 449, 450, 452, 453, 548, 565, 813, 814, 815], "de": [59, 85, 87, 88, 118], "bandwidth": 59, "pool": [59, 69, 70, 108, 109, 151, 160, 161, 837], "shuffl": [59, 151, 160, 161], "softmax": [59, 64, 105, 137, 149, 151, 160, 161], "hint_pd": 59, "further": [59, 82, 158, 160, 170, 256, 257, 259, 260, 403, 444, 569, 570, 571, 753, 780, 816, 864], "categori": [59, 546], "hand": [59, 165, 247, 252, 280, 281, 282, 283, 292, 313, 314, 315, 316, 325, 326, 416], "sens": [59, 558, 564, 816], "come": [59, 159, 166, 172, 180, 786], "mini": 59, "3d": [59, 101, 102, 155, 158, 162, 163, 164, 165, 166, 170, 172], "bca": 59, "4d": [59, 101, 102, 153, 162], "bacd": 59, "bcda": 59, "5d": [59, 153, 158, 163], "abdec": 59, "acbd": 59, "bcdea": 59, "6d": 59, "acbdef": 59, "cn": 59, "chwn": 59, "owi": 59, "iwo": 59, "ohwi": 59, "ihwo": 59, "iohw": 59, "odhwi": 59, "iodhw": 59, "idhwo": 59, "giohw": 59, "giodhw": 59, "seq_length": 59, "num_lay": 59, "num_direct": 59, "input_channel": 59, "num_gat": 59, "output_channel": 59, "lstm": [59, 151, 152, 160, 161], "gru": [59, 151, 160], "num_channels_in_hidden_st": 59, "num_channels_in_recurrent_project": 59, "forc": [60, 64, 841], "plain": [60, 152, 153, 158, 162, 165, 169], "yet": [61, 171, 176, 565, 743, 771, 783, 842, 843, 845], "chose": [61, 153], "proper": [61, 161, 350, 351, 363, 368, 381, 411, 576], "match": [61, 68, 78, 86, 99, 107, 110, 111, 114, 131, 144, 150, 156, 157, 160, 169, 180, 255, 258, 477, 482, 541, 546, 560, 762, 778], "inequ": 61, "along": [61, 78, 87, 88, 122, 123, 124, 125, 126, 127, 128, 136, 150, 153, 172, 173, 255, 258, 416, 580, 780], "ordinari": [61, 816], "being": [61, 150, 169, 171, 172, 177, 179, 255, 258, 260, 308, 482, 564, 777, 829], "volum": [61, 142], "numpi": [61, 64, 68, 86, 110, 111, 114, 131, 141, 142, 144], "concaten": [61, 78, 157, 160, 171, 560, 565], "ill": [61, 674, 689, 703, 717, 807], "clear": [61, 547, 561, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 769, 780, 850, 851, 856], "implicitli": [61, 63, 171, 255, 256, 260, 454, 558, 562, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 786, 803, 819, 841, 842], "adim": [61, 64], "adata_typ": 61, "aformat_tag": 61, "allow_empti": [61, 152, 155, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "signifi": [61, 155, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543], "area": 61, "encompass": 61, "reshap": 61, "imposs": 61, "constant": [61, 64, 72, 101, 102, 103, 142, 153, 155, 163, 409, 506, 546, 582, 590, 603, 618, 632, 653, 661, 674, 689, 703, 717, 731, 767, 770, 818, 832], "join": [61, 553, 556, 564, 565, 753, 765, 810, 843, 844, 845], "consecut": [61, 178, 182, 192, 202, 525, 526, 558, 564, 565, 845], "counterpart": [61, 160], "And": [61, 171], "adjust": [61, 763, 785, 809, 837], "ndim": [61, 64, 163], "new_desc": 61, "in_md": 61, "expect_out_md": 61, "involv": [61, 257], "is_zero": 61, "etc": [61, 62, 64, 151, 152, 160, 170, 175, 178, 180, 258, 363, 411, 534, 840], "md": 61, "aengin": [61, 62, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174], "dnnl_memory_non": 61, "doesn": [61, 153, 171], "dnnl_memory_alloc": 61, "memory_kind": 61, "astream": [61, 62, 160, 169], "hint": [61, 155, 158, 159, 162, 163, 164, 166, 167, 170, 171, 172, 173, 177, 416, 568, 571, 603, 614, 618, 628, 632, 642, 661, 671, 674, 686, 689, 700, 703, 714, 717, 728, 755], "even": [61, 147, 155, 171, 180, 241, 242, 243, 258, 259, 260, 454, 518, 519, 524, 541, 553, 565, 731, 746, 786, 840, 843, 845], "map_data": 61, "exclus": [61, 393, 402, 552, 793, 794, 797, 801, 828, 831, 834], "unmap": 61, "unmap_data": 61, "mainli": [61, 180, 353, 388], "debug": [61, 552, 574, 835], "suboptim": [61, 158, 163], "mapped_ptr": 61, "previous": [61, 153, 154, 180, 253, 254, 255, 296, 330, 762, 848], "make_memori": 61, "adesc": 61, "akind": [61, 62, 64], "ahandl": 61, "thrown": [61, 150, 253, 254, 255, 258, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 348, 349, 352, 357, 360, 361, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 392, 393, 394, 398, 399, 401, 405, 406, 408, 409, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 545, 553, 731, 756, 779, 828, 841, 843, 844], "attach": [61, 154, 832, 834, 837, 842, 843, 845], "withing": 61, "abuff": 61, "impli": [61, 142, 177, 557], "get_memory_kind": 61, "amemori": 61, "said": 61, "make_engin": [62, 151], "adevic": 62, "acontext": 62, "ti": [62, 150, 152], "ephemer": 62, "relev": [62, 180, 253, 254, 255, 256, 258, 259, 260, 365], "portion": [62, 816, 843], "explan": [62, 343, 365, 836], "bitwis": [62, 155, 163, 475, 482, 500, 527, 756], "OR": [62, 155, 163, 475, 482, 500, 527], "in_ord": 62, "out_of_ord": 62, "default_flag": 62, "aflag": 62, "make_stream": [62, 151], "aqueu": 62, "get_queu": 62, "suggest": [63, 572, 614, 628, 642, 671, 686, 700, 714, 728], "logical_tensor": [63, 64], "boolean": [63, 64, 131, 152, 565, 614, 628, 642, 671, 686, 700, 714, 728, 802, 829], "z": [63, 227, 256, 259, 284, 286, 317, 319, 361, 461, 478, 488, 514, 529, 530, 534, 536, 538, 545, 550, 551, 565], "s0": 63, "s1": [63, 706, 720], "s2": [63, 706, 720], "suppos": [63, 843], "strictli": [63, 307, 310, 341], "scheme": [63, 415, 416], "insert": [63, 107, 177, 580, 590, 592, 601, 603, 604, 606, 615, 618, 619, 629, 632, 633, 643, 661, 662, 672, 674, 676, 678, 687, 689, 691, 701, 703, 715, 717, 719, 729], "honor": 63, "faithfulli": [63, 565], "elimin": [63, 765], "don": [63, 150, 154, 756], "recogn": 63, "subgraph": [63, 150], "fewer": 63, "vice": [63, 107, 154, 255], "versa": [63, 107, 154, 255], "clearli": [63, 180], "underneath": [63, 64], "decid": [64, 150, 155, 158, 159, 162, 163, 164, 166, 167, 170, 171, 172, 173, 565], "unchang": [64, 178, 209, 210, 214, 215, 853], "dnnl_dim_t": 64, "tid": 64, "ltype": 64, "ptype": 64, "inlin": [64, 160, 177, 764, 774], "deleg": 64, "deduc": [64, 170, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734], "lid": 64, "get_dim": 64, "get_id": [64, 851], "get_property_typ": 64, "get_layout_typ": 64, "get_layout_id": 64, "rais": [64, 522, 542, 546, 552, 588, 843], "get_strid": [64, 158, 160, 166], "get_mem_s": 64, "is_equ": 64, "lt": 64, "tenor": 64, "regard": [64, 152, 556, 840], "eg": 64, "absbackward": [64, 149], "avgpool": [64, 149], "avgpoolbackward": [64, 109, 149], "batchnormforwardtrain": [64, 149], "batchnorminfer": [64, 71, 149], "batchnormtrainingbackward": [64, 149], "biasadd": [64, 75, 149], "biasaddbackward": [64, 149], "clamp": [64, 77, 149], "clampbackward": [64, 149], "convolutionbackwarddata": [64, 79, 149], "convolutionbackwardweight": [64, 149], "convtranspos": [64, 149], "convtransposebackwarddata": [64, 149], "convtransposebackwardweight": [64, 149], "dynamicdequant": [64, 149], "dynamicquant": [64, 149], "elu": [64, 90, 149, 151, 160], "elubackward": [64, 149], "exp": [64, 149, 259, 348, 349, 352, 377, 379, 380, 383, 385, 387, 401, 408, 484, 485, 487, 492, 546], "gelu": [64, 94, 149, 160], "gelubackward": [64, 149], "hardsigmoid": [64, 96, 149, 159, 160], "hardsigmoidbackward": [64, 149], "hardswish": [64, 98, 149, 160], "hardswishbackward": [64, 149], "interpol": [64, 100, 149, 170], "interpolatebackward": [64, 149], "layernorm": [64, 102, 149], "layernormbackward": [64, 149], "leakyrelu": [64, 149], "log": [64, 105, 149, 480, 488, 489, 490, 492, 509, 511, 532, 556, 558, 564, 566], "logsoftmax": [64, 106, 149, 160, 173], "logsoftmaxbackward": [64, 149], "maxpool": [64, 149], "maxpoolbackward": [64, 149], "mish": [64, 113, 149, 160], "mishbackward": [64, 149], "pow": [64, 149, 160, 522, 523, 546], "prelu": [64, 103, 116, 149, 160, 161], "prelubackward": [64, 149], "reciproc": [64, 149], "reducel1": [64, 149], "reducel2": [64, 149], "reducemax": [64, 149], "reducemean": [64, 149], "reducemin": [64, 149], "reduceprod": [64, 149], "reducesum": [64, 149], "relubackward": [64, 149], "sigmoid": [64, 133, 149, 160, 171], "sigmoidbackward": [64, 149], "softmaxbackward": [64, 149], "softplu": [64, 112, 135, 149], "softplusbackward": [64, 149], "sqrtbackward": [64, 149], "squareddiffer": [64, 149], "statictranspos": [64, 149], "tanhbackward": [64, 149], "wildcard": [64, 149, 150, 160, 165], "lastsymbol": 64, "illeg": [64, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339], "lead": [64, 154, 158, 169, 180, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 221, 222, 223, 224, 225, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 415, 846], "weight_shap": 64, "same_upp": [64, 69, 70, 79, 80, 81, 82, 83, 84, 108, 109], "same_low": [64, 69, 70, 79, 80, 81, 82, 83, 84, 108, 109], "half_pixel": [64, 99, 100], "align_corn": [64, 99, 100], "ncx": [64, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 99, 100, 108, 109, 115, 116], "nxc": [64, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 99, 100, 108, 109, 115, 116], "bilinear": [64, 99, 100, 160], "trilinear": [64, 99, 100, 160, 170], "per_channel": [64, 85, 87, 88, 115, 118], "per_tensor": [64, 85, 87, 88, 118], "ceil": [64, 69, 108, 546], "floor": [64, 69, 83, 108, 546, 767], "oix": [64, 82, 83, 84], "xio": [64, 82, 83, 84], "iox": [64, 79, 80, 81], "xoi": [64, 79, 80, 81], "add_input": 64, "add_output": 64, "set_attr": 64, "self": [64, 259, 260], "engine_kind": 64, "fpmath_mod": [64, 153], "allow_except": [64, 150], "dag": 64, "alreadi": [64, 259, 597, 743, 780, 786, 788, 790, 801, 829, 841, 843, 844, 850, 851, 855], "schema": [64, 150], "success": [64, 160, 164, 255, 259, 260, 346, 370, 372, 382, 475, 482, 500, 527], "similarli": [64, 150, 166, 171, 178, 255, 259, 748, 802], "un": [64, 482], "is_fin": [64, 815], "polici": [64, 153, 175, 176, 590, 674, 689, 703, 717, 744, 745, 750, 753, 754, 761, 766, 864], "fusion": [64, 65, 150, 152, 155], "claim": [64, 864], "scalabl": [65, 150, 152, 744, 783, 784, 788, 789, 790], "awar": [65, 150, 152, 558], "wise": [66, 68, 86, 92, 104, 110, 111, 112, 114, 115, 117, 121, 130, 138, 140, 141, 144, 147, 160, 270, 544], "ge": [66, 89, 103, 115, 262, 264, 265, 268, 270, 295, 296, 305, 306, 325, 326, 327, 328, 329, 330, 339, 340, 360, 361, 366, 370, 371, 372, 375, 377, 378, 382, 384, 385, 394, 398, 399, 401, 405, 406, 408], "overlin": [68, 78, 86, 110, 111, 114, 144, 156, 157, 158, 159, 169, 172, 173, 174, 194, 356, 397], "_0": [68, 86, 110, 111, 114, 131, 144, 255], "mathbin": [68, 86, 156], "_1": [68, 86, 110, 111, 114, 131, 144, 154, 255], "src_0": [68, 86, 110, 111, 114, 131, 141, 144, 156], "src_1": [68, 86, 110, 111, 114, 131, 141, 144, 156], "denom": [69, 166], "limits_": [69, 71, 101, 108, 122, 123, 125, 127, 128, 153, 155, 163, 164, 166, 168, 173, 174], "sh": [69, 82, 83, 108, 158, 166], "ph_l": [69, 82, 83, 108, 158, 166], "sw": [69, 82, 83, 108, 158, 166], "pw_l": [69, 82, 83, 108, 158, 166], "overlap": [69, 166, 221, 222, 256, 292, 839], "window": [69, 70, 108, 109, 166, 575, 576], "s64": [69, 70, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 99, 100, 101, 102, 105, 106, 108, 109, 118, 122, 123, 124, 125, 126, 127, 128, 134, 135, 136, 137, 143], "front": [69, 70, 79, 80, 81, 82, 83, 84, 108, 109, 158, 166, 731, 735], "left": [69, 70, 79, 80, 81, 82, 83, 84, 101, 102, 107, 108, 109, 131, 157, 158, 159, 160, 164, 165, 166, 170, 171, 172, 173, 180, 192, 207, 226, 236, 237, 248, 250, 251, 255, 256, 259, 260, 270, 271, 301, 302, 303, 304, 305, 306, 335, 336, 337, 338, 339, 340, 341, 344, 349, 352, 360, 361, 366, 370, 371, 372, 375, 377, 378, 382, 384, 385, 387, 391, 392, 394, 398, 399, 401, 402, 405, 406, 408, 414, 422, 423, 471, 484, 485, 487, 552, 558, 560, 561, 564, 565, 572, 580, 583, 588, 592, 597, 604, 614, 619, 628, 633, 642, 646, 650, 654, 659, 662, 671, 676, 686, 691, 700, 705, 714, 719, 728, 732, 733, 814, 850, 853], "bottom": [69, 70, 79, 80, 81, 82, 83, 84, 108, 109, 158, 166, 341, 752], "right": [69, 70, 79, 80, 81, 82, 83, 84, 101, 102, 107, 108, 109, 131, 153, 157, 158, 159, 160, 164, 165, 166, 170, 171, 172, 173, 180, 192, 207, 226, 236, 237, 247, 248, 250, 251, 252, 255, 256, 259, 260, 270, 280, 281, 282, 283, 292, 301, 302, 303, 304, 305, 306, 313, 314, 315, 316, 325, 326, 335, 336, 337, 338, 339, 340, 341, 344, 349, 352, 360, 361, 366, 370, 371, 372, 375, 377, 378, 382, 384, 385, 387, 391, 392, 394, 395, 398, 399, 401, 402, 404, 405, 406, 408, 414, 416, 471, 484, 485, 487, 552, 558, 561, 564, 565, 572, 755, 814, 864], "srcshape": 70, "mu": [71, 72, 101, 102, 155, 163, 413], "nhw": [71, 155], "gamma": [71, 72, 73, 101, 102, 155, 158, 163, 365, 366, 375, 505, 542, 546], "neither": [71, 73, 564, 566, 828], "running_mean": 71, "running_vari": 71, "batch_mean": 71, "batch_vari": 71, "batch_norm": [72, 160], "stabil": [72, 101, 102, 155, 163], "diff_gamma": [73, 102], "diff_beta": [73, 102], "clip": [76, 160], "src_i": [76, 78, 105, 117, 136, 157, 174], "_valu": 76, "smaller": [76, 77, 107, 153, 169, 259, 496, 513, 546, 771, 783], "upper": [76, 77, 153, 180, 189, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 264, 265, 268, 270, 272, 273, 284, 285, 286, 287, 288, 289, 290, 291, 299, 300, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 333, 334, 339, 340, 341, 428, 552, 569, 785], "ou": [78, 157, 172, 173], "c_": [78, 157, 171, 356, 369, 397], "stretch": [79, 80, 81, 82, 83, 84], "_channel": [79, 80, 81, 82, 83, 84], "_shape": [79, 80, 81, 82, 83, 84], "furthermor": [82, 152, 153, 154, 158], "comment": [82, 83, 158], "pd_l": [82, 83, 158], "pd_r": [82, 83, 158], "ph_r": [82, 83, 158], "pw_r": [82, 83, 158], "sd": [82, 83, 158], "dd": [82, 83, 158, 159], "dh": [82, 83, 108, 158], "dw": [82, 83, 108, 158], "fist": 82, "rest": [82, 413, 752, 841], "lfloor": [82, 158, 170, 255, 259, 357, 372, 382, 384, 394, 398, 399, 406, 494, 498, 514, 543], "rfloor": [82, 158, 170, 255, 259, 357, 372, 382, 384, 394, 398, 399, 406, 494, 498, 514, 543], "oc_g": [82, 158], "ic_g": [82, 158], "dkh": [82, 158], "dkw": [82, 158], "firstli": [83, 107], "_pad": 83, "_h": 83, "_padding_h": 83, "src_h": 83, "dst_h": 83, "zps_i": [85, 87], "scale_i": [85, 88, 118], "unlik": [87, 103, 129, 163, 180, 556, 568, 743, 758, 843], "scales_i": 87, "channelnum": [87, 122, 123, 124, 125, 126, 127, 128], "zp_i": [88, 118], "exponenti": [92, 160, 180, 261, 343, 344, 365, 366, 488, 489, 490, 491, 492, 544, 546], "erf": [93, 159, 160, 471, 485, 486, 487, 546], "sqrt2": 93, "dev_guide_convent": 95, "terpol": [99, 100], "resiz": [99, 100, 731, 785], "x_resiz": [99, 100], "differenti": [99, 565], "modul": [101, 102], "affin": [101, 102, 568, 571, 844], "span": [101, 102, 198, 295, 296, 329, 330], "diffgamma": [102, 155, 163], "diffbeta": [102, 155, 163], "mark": [102, 150, 155, 163, 342, 384, 546, 762, 836], "asterisk": [102, 155, 163], "small": [103, 353, 388, 570, 571, 755, 786, 851], "slope": [103, 115, 116, 154, 155, 158, 171], "coeffici": [103, 245, 247, 252, 280, 281, 292, 313, 325, 444, 447, 572], "leakag": 103, "natur": [104, 160, 258, 392, 505, 507, 509, 546, 859], "logarithm": [104, 160, 505, 507, 508, 509, 510, 544, 546], "formul": [105, 134, 135, 158], "dst_i": [105, 117, 136, 141], "src_j": [105, 136], "unsqueez": 107, "effect": [107, 154, 177, 178, 258, 528, 550, 551, 552, 558, 561, 743, 753, 755, 785, 829, 842, 843, 844, 850, 852], "ln": [112, 134, 173, 344, 352, 387, 508, 546], "omega": [113, 159], "delta": [113, 159, 259, 731, 732], "parametr": 115, "uni": [115, 116], "direction": [115, 116], "met": [115, 116, 552, 584, 593, 605, 620, 634, 647, 655, 663, 674, 677, 688, 689, 692, 703, 706, 716, 717, 720, 734, 798, 799, 807, 842], "rightmost": 115, "nd": [115, 116], "shape_i": 115, "pytorch": 116, "tensorflow": 116, "slope_shap": 116, "input_forward_shap": 116, "diff_slop": 116, "power": [117, 121, 168, 180, 261, 366, 519, 522, 523, 546], "infin": [121, 473, 494, 525, 534, 546], "neq": 121, "infti": [121, 348, 349, 360, 379, 457, 471, 485, 491, 507, 508], "l1": 122, "ident": [122, 123, 124, 125, 126, 127, 128, 150, 157, 174, 178, 222, 255, 256, 259, 363, 386, 403, 411, 413, 556, 564, 565, 843, 845], "shapeof": [122, 123, 124, 125, 126, 127, 128], "l2": 123, "backend": [129, 150, 257], "pleas": [129, 255, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 864], "op_typecast": 129, "op_dequant": 129, "cond": 131, "invalid_shap": 131, "_0_i": 141, "_1_i": 141, "overal": [142, 767], "rearrang": 143, "substract": 144, "bind": [150, 755], "benefit": [150, 152, 571, 786], "offload": [150, 176], "dnn": 150, "know": [150, 454, 565, 836, 842], "anymor": 150, "wild": 150, "conduct": 150, "aliv": 150, "analyz": [150, 416, 419, 427, 429, 431], "topolog": 150, "port": [150, 571, 748, 758, 760, 761, 762, 763, 764, 765, 766, 768, 774, 778, 826, 835, 863], "cycl": 150, "put": [150, 158, 356, 369, 397, 762, 765], "among": [150, 152, 471, 472, 484, 485, 486, 487, 549, 771], "down": [150, 153, 158, 575], "isa": 150, "incomplet": 150, "succe": [150, 786, 842], "predecessor": [150, 745, 746, 747, 750, 752, 754, 755, 758, 759, 761, 762, 763, 764, 766, 769, 771, 772, 774, 777, 778], "amort": [150, 152, 161], "fall": [150, 152, 153, 154, 259, 525, 544, 788], "summar": [150, 171, 259, 545, 575, 828, 829, 836], "arrow": 150, "critic": [150, 158, 162, 767, 798, 799, 863], "exchang": [150, 580], "toward": [150, 473, 494, 525, 543, 546, 558], "against": [150, 180, 578, 791], "appear": [150, 172, 565, 566], "twice": [150, 359, 565], "prevent": [150, 158, 255, 785, 842], "cyclic": 150, "safe": [150, 152, 153, 159, 161, 180, 582, 585, 589, 590, 595, 596, 600, 602, 603, 608, 616, 618, 622, 630, 632, 636, 644, 645, 652, 653, 656, 660, 661, 665, 673, 674, 675, 681, 688, 689, 690, 695, 702, 703, 704, 709, 716, 717, 718, 723, 730, 742, 791, 841, 842, 843, 850, 851, 853, 857], "unit": [150, 160, 171, 180, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 272, 273, 290, 323, 325, 326, 386, 395, 404, 428, 429, 430, 431, 534, 546, 767, 854], "captur": [150, 152, 259, 840, 841, 843], "under": [150, 255, 259, 400, 410, 735, 744, 842, 864], "abl": [150, 154, 165, 169, 258, 263, 266, 267, 269, 271, 274, 275, 278, 279, 282, 283, 285, 287, 289, 291, 294, 297, 298, 300, 302, 304, 306, 309, 310, 312, 315, 316, 318, 320, 322, 324, 326, 328, 331, 332, 334, 336, 338, 340, 422, 423, 745, 752, 762, 810], "lifecycl": 150, "invok": [150, 177, 258, 259, 556, 558, 560, 563, 564, 565, 579, 745, 750, 752, 754, 759, 766, 807, 841, 843, 844, 853, 858, 859], "prepack": 150, "late": [150, 558], "trivial": [150, 255], "shallow": 150, "vanilla": 151, "ctx": 151, "buf_src": 151, "static_cast": [151, 256, 374, 377, 378, 379, 383, 385, 387, 401, 408], "malloc_devic": [151, 180, 256, 257, 454], "buf_dst": 151, "mem_src": 151, "mem_dst": 151, "publish": 151, "apach": 151, "licens": [151, 864], "profil": 151, "intention": [151, 152], "extent": 151, "futur": [151, 180, 422, 423, 548, 753], "cooper": 151, "co": [151, 180, 199, 342, 344, 366, 479, 480, 481, 532, 534, 546], "comprehens": 151, "suit": [151, 219, 222, 225, 863], "consult": 151, "readm": 151, "although": 152, "open": [152, 550, 551, 552, 583, 592, 597, 604, 614, 616, 619, 628, 630, 633, 642, 644, 646, 654, 662, 671, 673, 676, 686, 688, 691, 700, 702, 705, 714, 716, 719, 728, 730, 732, 733, 858, 862, 864], "tile": 152, "functor": [152, 161, 177, 560, 561, 563, 565, 612, 626, 640, 669, 759, 843, 845, 850, 852], "thing": 152, "pure": [152, 161, 761], "approach": [152, 161, 550, 551, 792, 797, 802], "inspect": [152, 154, 161, 261, 745, 750, 754, 759, 766], "instanti": [152, 161, 178, 253, 254, 255, 258, 748, 752, 761, 778, 779, 789, 793, 794], "transpar": [152, 454, 785, 863], "effort": [152, 564, 565], "resid": 152, "extra": [153, 155, 564, 786, 787], "equival": [153, 178, 180, 255, 556, 557, 564, 566, 580, 581, 583, 586, 587, 592, 595, 596, 597, 598, 599, 604, 606, 608, 611, 614, 616, 619, 622, 625, 628, 630, 632, 633, 636, 639, 642, 644, 646, 648, 649, 654, 657, 658, 662, 665, 668, 671, 673, 676, 678, 681, 682, 683, 686, 688, 691, 695, 696, 697, 700, 702, 703, 705, 709, 710, 711, 714, 716, 719, 723, 724, 725, 728, 730, 732, 733, 739, 755, 779, 846], "im2col": 153, "longer": [153, 180, 556, 767], "too": [153, 519, 560, 570], "proport": [153, 549, 550, 551, 552, 568, 569, 571, 816, 817], "contrast": [153, 416, 788], "littl": [153, 755], "summand": 153, "though": [153, 171, 177, 518, 565, 786], "op_pd": [153, 154], "param": [153, 154, 228, 229, 258, 785, 839], "much": [153, 359, 570, 786], "query_s64": [153, 160], "memory_consumption_s64": 153, "zero_md": 153, "get_scratchpad_mod": 153, "op_d": 153, "scratchpad_md": 153, "scratchpad_desc": [153, 160], "prim": 153, "scratchpad_ptr": 153, "user_memory_manag": 153, "explain": [153, 260], "d_0": 153, "d_": [153, 290, 323], "d_i": 153, "le": [153, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "mathtt": 153, "wei_plain_f32_md": 153, "wei_scal": 153, "conv_pd": 153, "wei_conv_s8_md": 153, "weights_desc": [153, 155, 158, 160, 162, 163, 165], "quantization_mask": 153, "wei_s8": 153, "wei_f32": 153, "wei_reorder_pd": 153, "wei_reord": 153, "complementari": [153, 471, 472, 484, 485, 486, 487, 546], "ideal": [153, 552, 731, 816], "sai": [153, 180], "src_scale": 153, "src_f32": 153, "src_s8": 153, "dst_scale": 153, "dst_f32": 153, "dst_s8": 153, "src_conv_s8_any_md": 153, "wei_conv_s8_any_md": 153, "dst_conv_s8_any_md": 153, "ditto": 153, "data_mask": 153, "wei_mask": 153, "padding_l": [153, 158, 166], "padding_r": [153, 158, 166], "padding_kind": 153, "fp32": [153, 256, 259, 260], "notic": 153, "narrow": 153, "tf32": 153, "strict": [153, 506], "disabl": [153, 158, 456, 457, 458, 459, 461, 463, 467, 471, 472, 474, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 515, 516, 518, 519, 520, 521, 522, 523, 524, 529, 530, 531, 532, 533, 536, 537, 538, 539, 541, 542, 575, 785, 844], "environ": [153, 180, 782, 785], "delai": 153, "successfulli": [153, 180, 253, 254, 255, 258, 259, 353, 388, 475, 482, 500, 527, 731, 746, 753, 761], "whatev": 153, "try": [153, 576, 842], "get_fpmath_mod": 153, "get_scales_mask": 153, "set_output_scal": [153, 158], "get_post_op": 153, "set_rnn_data_qparam": 153, "mb": [153, 165], "sic": 153, "slc": 153, "dic": 153, "dlc": 153, "op_desc": 153, "rnn_d": 153, "src_layer": 153, "src_iter": 153, "dst_iter": 153, "dst_layer": 153, "set_rnn_weights_qparam": 153, "five": [153, 366, 752], "weights_lay": 153, "weights_iter": 153, "append": [154, 731, 732, 742], "po": [154, 519, 603, 616, 618, 630, 632, 644, 661, 673, 674, 688, 689, 702, 703, 716, 717, 730], "preserv": [154, 260, 566, 775, 845], "suitabl": [154, 178, 258, 482], "sketch": [154, 557, 844], "append_someth": 154, "append_something_els": 154, "other_param": 154, "matter": [154, 556], "pd": [154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174], "robust": 154, "magnitud": [154, 181, 186, 497, 512, 513, 546], "reinterpret": [154, 180], "as_data_typ": 154, "p_op": 154, "summand_md": 154, "pretti": 154, "resnet": 154, "famili": [154, 356, 369, 397, 471, 472, 484, 485, 486, 487, 785], "unus": [154, 159, 742, 785], "conv_d": 154, "conv": [154, 158], "entri": [154, 180, 192, 198, 202, 219, 222, 225, 228, 229, 243, 248, 250, 251, 255, 256, 259, 260, 341, 350, 368, 381, 414, 422, 423, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 844], "residu": 154, "simplest": [154, 414], "get_params_sum": 154, "aalgorithm": [154, 156, 158, 159, 164, 166, 168, 170, 173], "eltwise_op": 154, "get_params_eltwis": 154, "src1_desc": [154, 156], "binary_op": [154, 177], "another_input": 154, "operand": [154, 560], "get_params_binari": 154, "straightforward": [155, 158, 163, 166, 167, 170], "flavor": [155, 163, 311], "popul": 155, "unbias": 155, "mu_i": 155, "2_i": 155, "mu_": 155, "2_": 155, "clariti": [155, 163], "Not": [155, 163, 843, 847], "data_desc": [155, 159], "diff_data_desc": 155, "overwritten": [155, 156, 159, 163, 173, 184, 191, 192, 197, 198, 199, 200, 202, 207, 211, 212, 218, 219, 221, 222, 223, 224, 225, 237, 241, 242, 243, 248, 250, 251, 262, 264, 268, 270, 271, 272, 276, 280, 284, 286, 288, 290, 293, 295, 299, 301, 303, 305, 307, 311, 313, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 415, 417, 418, 426, 428, 482, 769, 780], "sp_n": 155, "sp_0": 155, "0d": [155, 162, 164], "aprop_kind": [155, 158, 159, 162, 163, 164, 166, 167, 170, 171, 172, 173], "src_desc": [155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174], "dst_desc": [155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174], "default_attr": [155, 156, 158, 159, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173], "mean_desc": [155, 163], "variance_desc": [155, 163], "get_prop_kind": [155, 158, 159, 160, 162, 163, 164, 166, 167, 171, 172, 173], "get_epsilon": [155, 160, 163, 168], "get_flag": [155, 160, 163], "batch_normalization_backward": [155, 160], "diff_src_desc": [155, 158, 159, 160, 162, 163, 164, 166, 167, 170, 172, 173], "diff_dst_desc": [155, 158, 159, 160, 162, 163, 164, 166, 167, 170, 172, 173], "hint_fwd_pd": [155, 158, 159, 162, 163, 164, 166, 167, 170, 171, 172, 173], "diff": [155, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 172, 173], "diff_weights_desc": [155, 158, 160, 162, 163, 167], "x_0": [156, 159, 169, 353, 354, 388, 389, 409], "overwrit": [156, 158, 162, 165, 169, 260, 301, 303, 305, 335, 337, 339, 769, 780], "src0": 156, "src1": 156, "pdx": [156, 157, 160, 174], "src0_desc": 156, "get_algorithm": [156, 158, 159, 160, 164, 166, 168, 173], "concat_dimens": 157, "sum_i": 157, "c_i": 157, "_l": 158, "_r": 158, "broken": [158, 731, 735], "exposit": [158, 344, 580], "realiti": 158, "depthwis": 158, "diffbia": [158, 162, 171], "kd": [158, 162], "feasibl": 158, "pseudo": [158, 169, 178, 342, 413, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830], "eta": 158, "simd": [158, 342, 367, 402], "notabl": 158, "winograd": [158, 160, 169], "loss": 158, "fast": [158, 342, 365, 367, 402, 432, 433, 434, 435, 437, 438, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 478, 479, 481, 529, 530, 531, 533, 538, 539, 541], "lavin": 158, "grai": [158, 395, 404], "heurist": 158, "bias_desc": [158, 160, 162, 165, 171], "get_dil": [158, 160, 166], "get_padding_l": [158, 160, 166], "get_padding_r": [158, 160, 166], "convolution_backward_data": [158, 160], "convolution_backward_weight": [158, 160], "diff_bias_desc": [158, 160, 162, 171], "deconvolution_forward": [158, 160], "deconvolution_backward_data": [158, 160], "deconvolution_backward_weight": [158, 160], "pi": [159, 259, 344, 349, 352, 366, 374, 379, 380, 387, 393, 457, 471, 484, 485, 486, 487, 507, 508], "044715": 159, "log_": 159, "rl": 159, "134145": 159, "dnnl_forward_train": 159, "dnnl_forward_infer": 159, "benefici": 159, "rather": [159, 816], "tip": 159, "unari": [159, 177, 850, 852], "get_alpha": [159, 160, 164, 171], "get_beta": [159, 160, 164, 171], "use_dst_for_bwd": 159, "subclass": 160, "inner_product_backward_data": [160, 162], "inner_product_backward_weight": [160, 162], "inner_product_forward": [160, 162], "layer_normalization_backward": [160, 163], "lrn_backward": [160, 164], "lrn_forward": [160, 164], "pooling_backward": [160, 166], "prelu_backward": [160, 167], "prelu_forward": [160, 167], "resampling_backward": [160, 170], "resampling_forward": [160, 170], "shuffle_backward": [160, 172], "softmax_backward": [160, 173], "softmax_forward": [160, 173], "layer_norm": 160, "inner_product": 160, "resampl": [160, 161], "unordered_map": 160, "dnnl_arg_": 160, "query_md": 160, "exec_arg_md": 160, "rh": [160, 561, 564, 582, 586, 587, 590, 598, 599, 603, 609, 610, 611, 617, 618, 623, 624, 625, 631, 632, 637, 638, 639, 645, 648, 649, 653, 657, 658, 661, 666, 667, 668, 674, 682, 683, 689, 696, 697, 703, 710, 711, 717, 724, 725, 731, 737, 738, 739, 810], "aprimit": 160, "impl_info_str": 160, "get_axi": [160, 172, 173], "get_local_s": [160, 164], "get_k": [160, 164], "get_p": [160, 168], "get_factor": 160, "get_cell_kind": [160, 171], "rnn_direct": [160, 171], "get_direct": [160, 171], "get_activation_kind": [160, 171], "get_kernel": [160, 166], "get_group_s": [160, 172], "src_md": [160, 169], "dst_md": [160, 169], "weights_md": 160, "scratchpad_engin": 160, "get_primitive_attr": 160, "frequent": [160, 785], "src_layer_desc": [160, 171], "src_iter_desc": [160, 171], "src_iter_c_desc": [160, 171], "weights_layer_desc": [160, 171], "weights_iter_desc": [160, 171], "weights_peephole_desc": [160, 171], "peephol": 160, "weights_projection_desc": [160, 171], "augru_attention_desc": 160, "augru": 160, "attent": [160, 171], "dst_layer_desc": [160, 171], "dst_iter_desc": [160, 171], "dst_iter_c_desc": [160, 171], "diff_src_layer_desc": [160, 171], "diff_src_iter_desc": [160, 171], "diff_src_iter_c_desc": [160, 171], "diff_weights_layer_desc": [160, 171], "diff_weights_iter_desc": [160, 171], "diff_weights_peephole_desc": [160, 171], "diff_weights_projection_desc": [160, 171], "diff_augru_attention_desc": 160, "diff_dst_layer_desc": [160, 171], "diff_dst_iter_desc": [160, 171], "diff_dst_iter_c_desc": [160, 171], "subsequ": [160, 177, 255, 386, 403, 412, 416, 422, 423, 552, 731, 753, 762, 785], "forward_scor": 160, "backward_weight": 160, "backward_bia": 160, "bounded_relu": 160, "rectifi": 160, "soft_relu": 160, "swish": 160, "hyperbol": [160, 261, 457, 462, 467, 480, 532, 540, 546], "tangent": [160, 464, 465, 466, 467, 468, 538, 539, 540, 541, 546], "exclud": [160, 829], "c_t": [160, 171], "w_c": 160, "x_t": 160, "b_": [160, 171, 262], "c_x": 160, "r_t": [160, 171], "u_c": 160, "h_": [160, 171, 228, 229], "c_h": 160, "lrb": 160, "mul": [160, 168, 546], "binary_div": 160, "div": [160, 546], "binary_sub": 160, "binary_g": 160, "binary_gt": 160, "binary_l": 160, "binary_lt": 160, "binary_eq": 160, "binary_n": 160, "reduction_max": [160, 168], "reduction_min": [160, 168], "reduction_sum": [160, 168], "reduction_mul": [160, 168], "reduction_mean": [160, 168], "reduction_norm_lp_max": [160, 168], "norm_lp_max": 160, "reduction_norm_lp_sum": [160, 168], "norm_lp_sum": 160, "reduction_norm_lp_power_p_max": [160, 168], "norm_lp_power_p_max": 160, "reduction_norm_lp_power_p_sum": [160, 168], "norm_lp_power_p_sum": 160, "softmax_accur": [160, 173], "stabl": [160, 173, 566], "softmax_log": [160, 173], "mnemon": 160, "conceptu": 161, "concret": 161, "prefer": [161, 257, 767, 797, 801, 843], "embodi": 161, "nest": [161, 175, 580, 783, 837, 839, 845], "something_forward": 161, "action": [161, 775, 785, 828], "flatten": [162, 858], "stat_desc": 163, "_ndim": 163, "_dim": [163, 439], "advis": 163, "n_": [164, 255, 259], "local_s": 164, "restor": [166, 843, 845], "leaki": 167, "trainabl": 167, "mbox": 167, "weight_desc": 167, "mathop": 168, "lp": 168, "idl": [168, 569], "ep": [168, 478, 479, 481, 499, 506, 519, 528, 529, 530, 531, 533, 538, 539, 541], "kept": [169, 755, 845], "encount": [169, 216, 217, 534], "bug": 169, "team": 169, "dnnl_s8": 169, "dnnl_f32": 169, "allevi": 169, "fact": 169, "1024": 169, "127": [169, 409, 506], "124": 169, "dt_src": 169, "memory_format": 169, "fmt_src": 169, "dt_dst": 169, "fmt_dst": 169, "output_scal": 169, "src_engin": 169, "dst_engin": 169, "get_src_engin": 169, "get_dst_engin": 169, "upsampl": 170, "downsampl": 170, "f_h": 170, "f_w": 170, "ih_0": 170, "iw_0": 170, "w_": [170, 171, 402, 409], "ih_1": 170, "iw_1": 170, "lceil": [170, 473, 498, 514, 543], "rceil": [170, 473, 498, 514, 543], "_spatial": 170, "_size": [170, 184, 191, 192, 198, 202, 219, 222, 225, 243, 251, 265, 273, 277, 281, 308, 314], "stack": [171, 839, 863], "unrol": 171, "srciter": 171, "dstiter": 171, "four": [171, 226, 253, 254, 256, 344, 356, 366, 397, 465, 466, 546], "evalu": [171, 559, 785, 850, 852, 853], "left2right": 171, "right2left": 171, "decreas": [171, 492, 546, 575, 731, 750, 763, 861], "bidirectional_concat": 171, "dstlayer": 171, "bidirectional_sum": 171, "srclayer": 171, "six": 171, "vanilla_rnn_pd": 171, "aprop": 171, "a_t": 171, "h_t": 171, "lstm_pd": 171, "src_iter_h_desc": 171, "dst_iter_h_desc": 171, "give": [171, 414], "i_t": 171, "w_i": 171, "b_i": [171, 281, 282, 314, 315], "f_t": 171, "w_f": 171, "u_f": 171, "b_f": 171, "u_": [171, 272, 391], "o_t": 171, "w_o": 171, "u_o": 171, "b_o": 171, "weightslay": 171, "weightsit": 171, "srciterc": 171, "dstiterc": 171, "p_i": [171, 273, 393], "p_f": 171, "p_o": 171, "weights_peephol": 171, "simplic": [171, 353, 388], "weights_project": 171, "gru_pd": 171, "u_t": 171, "w_u": 171, "u_u": 171, "b_u": 171, "w_r": 171, "u_r": 171, "b_r": 171, "lbr_gru_pd": 171, "augru_pd": 171, "attention_desc": 171, "lbr_augru_pd": 171, "weightspeephol": 171, "weightsproject": 171, "diffsrclay": 171, "diffsrcit": 171, "diffsrciterc": 171, "diffweightslay": 171, "diffweightsit": 171, "diffweightspeephol": 171, "diffweightsproject": 171, "diffdstlay": 171, "diffdstit": 171, "diffdstiterc": 171, "diff_": 171, "shorten": 171, "variant": [171, 175, 216, 217, 284, 317, 565], "rnn_flag": 171, "unidirectional_left2right": 171, "unidirect": 171, "unidirectional_right2left": 171, "bidirect": 171, "info": [171, 180, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 831, 834, 843], "lbr": 171, "thought": 172, "formal": [172, 178], "group_siz": [172, 184, 191, 192, 198, 202, 219, 222, 225, 243, 251, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331], "essenti": [172, 261], "nu": [173, 366], "dpl": [175, 177, 178], "shorter": 175, "iso": [176, 553, 555, 557, 559, 564, 565, 566, 568, 569, 570, 571, 582, 583, 584, 585, 588, 590, 592, 593, 595, 597, 603, 604, 605, 606, 607, 614, 618, 619, 620, 621, 628, 632, 633, 634, 635, 642, 645, 646, 647, 650, 653, 654, 655, 656, 659, 661, 662, 663, 664, 671, 674, 675, 676, 677, 678, 680, 686, 689, 690, 691, 692, 694, 700, 703, 704, 705, 706, 708, 714, 717, 718, 719, 720, 722, 728, 731, 732, 733, 734, 736, 745, 747, 748, 750, 754, 755, 758, 759, 761, 763, 766, 769, 771, 772, 777, 779, 780, 781, 783, 784, 786, 788, 790, 792, 794, 797, 800, 801, 802, 807, 809, 843, 845, 846, 850, 852, 858], "iec": [176, 784], "14882": [176, 784], "17": [176, 366, 557, 561, 564, 565, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 745, 754, 761, 766, 777, 784], "complement": 176, "device_polici": 176, "make_device_polici": 176, "wrapper": [176, 454, 787], "6th": 177, "edit": 177, "20": [177, 769, 843], "sequenced_polici": 177, "parallel_polici": 177, "parallel_unsequenced_polici": 177, "unsequenced_polici": 177, "seq": 177, "par": 177, "par_unseq": 177, "unseq": 177, "is_execution_polici": 177, "is_execution_policy_v": 177, "kernelnam": 177, "dpcpp_default": 177, "newkernelnam": 177, "oldkernelnam": 177, "predefin": [177, 178, 744, 745, 754, 766], "kernel_nam": 177, "othernam": 177, "compliant": [177, 258], "movement": [177, 180], "allocatort": 177, "tagt": 177, "read_writ": 177, "no_init": 177, "helper": [177, 451, 744, 835], "copyconstruct": [177, 555, 564, 565, 745, 747, 748, 750, 754, 755, 758, 759, 761, 766, 771, 772, 777, 779], "copyassign": [177, 564, 565, 650, 747, 759, 761, 769, 771, 772, 777, 780], "deduct": [177, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731], "overridden": [177, 844], "buf_begin": 177, "write_onli": 177, "buf_end_1": 177, "buf_end_2": 177, "42": [177, 341], "counting_iter": 177, "difference_typ": [177, 582, 590, 603, 618, 632, 645, 661, 674, 689, 703, 717, 731, 818, 851, 858], "value_typ": [177, 557, 580, 582, 583, 584, 588, 590, 591, 592, 593, 597, 603, 604, 605, 606, 612, 614, 616, 617, 618, 619, 620, 626, 628, 630, 631, 632, 633, 634, 640, 642, 644, 645, 646, 647, 650, 653, 654, 655, 659, 661, 662, 663, 669, 671, 673, 674, 676, 677, 678, 686, 688, 689, 691, 692, 700, 702, 703, 705, 706, 714, 716, 717, 719, 720, 728, 730, 731, 732, 733, 734, 735, 742, 786, 788, 790, 807, 818, 851, 858], "counter": [177, 345, 356, 367, 369, 397, 763], "dereferenc": [177, 454, 566, 616, 630, 644, 673, 688, 702, 716, 730], "rvalu": [177, 807], "derefer": 177, "discard_iter": 177, "ptrdiff_t": 177, "lvalu": [177, 807], "discard": [177, 745, 746, 750, 753, 754, 758, 763, 766, 778, 824], "sourceiter": 177, "indexmap": 177, "permutation_iter": 177, "iterator_trait": [177, 557, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 807], "input1": 177, "input2": 177, "make_permutation_iter": 177, "unaryfunc": [177, 850, 851, 852], "transform_iter": 177, "invoke_result": 177, "remove_refer": 177, "unary_func": 177, "make_transform_iter": 177, "zip_iter": 177, "make_sign": 177, "tupl": [177, 255, 606, 678, 748, 758, 761, 762, 765, 766, 778, 780], "make_zip_iter": 177, "inputkeyit": 177, "inputvalueit": 177, "outputvalueit": 177, "binarypr": 177, "equal_to": [177, 674, 677, 689, 692, 703, 706, 717, 720], "binaryop": 177, "plu": [177, 272, 473, 525, 546, 553], "exclusive_scan_by_seg": 177, "keys_first": 177, "keys_last": 177, "values_first": 177, "values_result": 177, "initial_valu": 177, "binary_pr": 177, "prefix": [177, 565, 833], "scan": [177, 565, 813, 815], "predic": [177, 646, 676, 684, 691, 698, 705, 712, 719, 726], "binarypredc": 177, "inclusive_scan_by_seg": 177, "outputkeyit": 177, "reduce_by_seg": 177, "keys_result": 177, "inputit1": 177, "inputit2": 177, "outputit": 177, "inputit": 177, "binary_search": 177, "value_first": 177, "value_last": 177, "outputiter": 177, "comp": [177, 566, 603, 604, 617, 618, 619, 631, 632, 633, 661, 662], "lower_bound": [177, 603, 618, 632, 661], "lowest": 177, "upper_bound": [177, 603, 618, 632, 661], "linear_congruential_engin": 178, "subtract_with_carry_engin": 178, "adaptor": [178, 858], "discard_block_engin": 178, "minstd_rand0": 178, "minstd_rand": 178, "ranlux24_bas": 178, "ranlux48_bas": 178, "ranlux24": 178, "ranlux48": 178, "uniform_int_distribut": 178, "uniform_real_distribut": 178, "normal_distribut": 178, "exponential_distribut": 178, "bernoulli_distribut": 178, "geometric_distribut": 178, "weibull_distribuion": 178, "lognormal_distribut": 178, "cauchy_distribut": 178, "extreme_value_distribut": 178, "deviat": [178, 349, 352, 379, 385, 387], "random_devic": 178, "seed_seq": 178, "vec": [178, 284, 285, 286, 287, 317, 318, 319, 320, 350, 353, 354, 355, 356, 362, 584, 647, 655], "result_typ": [178, 346, 347, 348, 349, 350, 352, 357, 359, 360, 361, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 393, 394, 398, 399, 401, 405, 406, 407, 408], "scalar_typ": [178, 258], "element_typ": 178, "seed": [178, 353, 354, 355, 356, 362, 369, 386, 388, 389, 390, 391, 392, 397, 400, 402, 403, 409, 410, 413], "meet": [178, 353, 355, 388, 390, 480, 488, 505, 532, 542, 549, 550, 551, 552, 553, 555, 557, 558, 559, 561, 564, 565, 566, 581, 582, 583, 584, 585, 588, 590, 592, 593, 595, 597, 600, 603, 604, 605, 606, 607, 613, 614, 618, 619, 620, 621, 627, 628, 632, 633, 634, 635, 641, 642, 645, 646, 647, 650, 653, 654, 655, 656, 659, 661, 662, 663, 664, 670, 671, 674, 675, 676, 677, 678, 680, 685, 686, 689, 690, 691, 692, 694, 699, 700, 703, 704, 705, 706, 708, 713, 714, 717, 718, 719, 720, 722, 727, 728, 731, 732, 733, 734, 736, 740, 745, 747, 748, 750, 754, 758, 759, 761, 763, 766, 769, 771, 772, 777, 779, 780, 784, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 840, 843, 845, 846, 850, 852, 858], "minstd_rand0_vec": 178, "uint_fast32_t": 178, "16807": 178, "2147483647": 178, "minstd_rand_vec": 178, "48271": 178, "ranlux24_base_vec": 178, "ranlux48_base_vec": 178, "uint_fast64_t": 178, "48": 178, "12": [178, 228, 229, 341, 355, 390, 392], "ranlux24_vec": 178, "223": 178, "ranlux48_vec": 178, "389": 178, "invoc": [178, 745, 755, 770, 843, 844], "analogu": 178, "10000th": 178, "1043618065": 178, "399268537": 178, "7937952": 178, "61839128582725": 178, "9901578": 178, "1112339016": 178, "item": [179, 555, 557, 560, 562, 582, 588, 591, 597, 606, 614, 628, 642, 645, 653, 671, 678, 686, 700, 714, 728, 747, 759, 763, 769, 771, 772, 777, 780, 786, 802, 805, 807, 818, 824, 836], "human": 179, "p1673": 179, "technic": 179, "advisori": 179, "board": 179, "valuabl": 179, "feedback": [179, 367, 391, 400, 864], "thank": 179, "therein": 180, "great": 180, "nonessenti": 180, "enqueu": [180, 253, 254, 258, 259, 422, 423, 839, 843, 845], "standalon": 180, "aid": 180, "rng": [180, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411], "dft": [180, 253, 254, 255, 256, 257, 258, 261], "setup": 180, "subdevic": 180, "facilit": [180, 791], "likewis": [180, 258, 748, 785], "manual": [180, 257, 386], "launch": [180, 454, 752], "antidepend": 180, "reserv": [180, 674, 679, 689, 693, 703, 707, 717, 721, 731, 747, 753, 762, 769, 771, 772, 777, 780, 785, 833, 843], "deadlock": [180, 558], "link": [180, 747, 771, 772], "in_ev": 180, "consumpt": [180, 257], "paradigm": 180, "elegantli": 180, "burden": 180, "correspondingli": 180, "prerequisit": 180, "secondari": 180, "fourier": [180, 253, 254, 258, 260, 548], "vm": [180, 261, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545], "trigonometr": [180, 261, 478, 479, 529, 530, 531, 538, 539, 546], "act": [180, 787, 840, 851], "constitut": [180, 767], "breadth": 180, "permit": [180, 569, 579, 582, 645, 653, 755, 802, 844, 859], "live": 180, "easili": [180, 863], "intn_t": 180, "uintn_t": 180, "basi": [180, 295, 296, 329, 330, 376], "2020": 180, "fortran": [180, 341, 547], "interchang": [180, 272, 273, 290, 323, 864], "conjug": [180, 186, 187, 194, 204, 224, 241, 242, 243, 259, 476, 516, 546], "tran": [180, 196, 201, 202, 211, 212, 218, 219, 221, 222, 223, 224, 225, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 280, 281, 282, 283, 301, 302, 303, 304, 305, 306, 325, 326, 335, 336, 337, 338, 339, 340, 415, 454], "conjtran": [180, 211, 212, 218, 221, 222, 223, 224, 241, 242, 243, 280, 281, 282, 283, 325, 326, 335, 336, 337, 338, 339, 340, 415], "hermitian": [180, 187, 188, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 284, 286, 288, 290, 292, 307, 308, 311, 313, 314, 333, 339], "uplo": [180, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 284, 285, 286, 287, 288, 289, 290, 291, 299, 300, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 333, 334, 339, 340, 341, 426, 427, 428, 429, 430, 431], "triangl": [180, 200, 207, 211, 212, 237, 241, 242, 243, 268, 286, 288, 311, 312, 313, 314, 315, 316, 319, 321, 341, 344, 366], "triangular": [180, 187, 188, 189, 200, 206, 208, 209, 210, 213, 214, 215, 230, 233, 234, 235, 238, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 264, 265, 268, 272, 273, 284, 285, 286, 287, 288, 289, 290, 291, 292, 307, 308, 309, 310, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 341, 424, 428, 430], "diag": [180, 192, 244, 245, 246, 247, 248, 249, 250, 251, 252, 325, 326, 428, 429, 430, 431], "diagon": [180, 192, 196, 206, 209, 210, 212, 213, 214, 215, 229, 230, 244, 245, 248, 250, 251, 262, 264, 265, 270, 272, 273, 280, 281, 284, 286, 288, 290, 311, 313, 314, 317, 319, 321, 323, 325, 326, 341, 380, 400, 428, 429, 430, 431], "nonunit": [180, 325, 326], "c_offset": [180, 199], "index_bas": [180, 216, 217, 422, 423], "nonzero": [180, 414, 497], "tradition": 180, "col_major": [180, 436], "uniniti": [180, 258, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431], "computation_error": [180, 262, 264, 268, 270, 272, 276, 280, 284, 286, 288, 290, 293, 295, 299, 301, 303, 305, 307, 311, 313, 317, 319, 321, 323, 325, 327, 329, 333, 335, 337, 339, 415, 416, 417, 418, 419, 422, 423, 426, 427, 428, 429, 430, 431], "batch_error": [180, 265, 273, 277, 281, 296, 308, 314, 330], "familiar": 180, "catch": [180, 576, 842], "subroutin": 180, "inconsist": [180, 253, 254, 258], "issu": [180, 558, 864], "experienc": 180, "verif": 180, "imaginari": [181, 209, 210, 212, 213, 214, 215, 253, 254, 255, 256, 259, 459, 480, 483, 488, 515, 519, 532, 534, 537], "im": [181, 216, 217, 455, 456, 457, 459, 460, 462, 467, 480, 488, 507, 508, 515, 519, 532, 534, 537], "tre": [181, 193, 220], "incx": [181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 216, 217, 220, 226, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 247, 249, 252, 341, 454], "topic": [181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547], "leftarrow": [182, 183, 190, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 221, 223, 224, 226, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 248, 249, 250, 415, 417, 418, 426, 428, 430], "inci": [182, 183, 184, 190, 191, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 208, 210, 213, 215, 226, 228, 230, 232, 233, 235, 236, 238, 240, 454], "value_or_point": [182, 183, 184, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 248, 250, 251, 454], "axpi": [184, 186], "batch_siz": [184, 191, 192, 198, 202, 219, 222, 225, 243, 251, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331], "stridex": [184, 191, 192, 202], "stridei": [184, 191, 202], "group_count": [184, 191, 192, 198, 202, 219, 222, 225, 243, 251, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331], "_batch": [184, 191, 192, 198, 202, 219, 222, 225, 243, 251], "_count": [184, 191, 192, 198, 202, 219, 222, 225, 243, 251], "total_batch_count": [184, 191, 192, 198, 202, 219, 222, 225, 243, 251], "subprogram": 185, "level1": 185, "level2": 185, "level3": 185, "asum": 186, "sdsdot": 186, "dotc": 186, "dotu": 186, "unconjug": [186, 187, 205], "nrm2": 186, "rot": 186, "plane": [186, 226, 228], "rotat": [186, 226, 227, 228, 229], "rotg": 186, "rotm": 186, "rotmg": 186, "scal": 186, "iamax": 186, "iamin": 186, "gbmv": 187, "gemv": [187, 202, 419, 424, 454], "ger": 187, "gerc": 187, "geru": 187, "hbmv": 187, "hemv": 187, "her": 187, "her2": 187, "hpmv": 187, "hpr": 187, "hpr2": 187, "sbmv": 187, "spmv": 187, "spr": [187, 235], "spr2": 187, "symv": [187, 424, 427], "syr": 187, "syr2": 187, "tbmv": 187, "tbsv": 187, "solut": [187, 245, 247, 250, 251, 252, 280, 281, 292, 313, 314, 325, 430, 863], "tpmv": 187, "tpsv": 187, "trmv": [187, 424, 429, 430], "trsv": [187, 424, 431], "hemm": 188, "herk": 188, "her2k": 188, "2k": [188, 211, 241], "symm": 188, "syrk": [188, 243], "syr2k": 188, "trmm": 188, "trsm": [188, 251], "axpy_batch": 189, "gemm_batch": 189, "trsm_batch": 189, "gemmt": 189, "gemm_bia": 189, "imatcopi": [189, 219], "omatcopi": [189, 225], "omatcopy2": 189, "omatadd": [189, 222], "imatcopy_batch": 189, "omatcopy_batch": [189, 222], "omatadd_batch": [189, 225], "dgmm": 192, "stridea": [192, 198, 202, 222, 224, 225, 243, 251], "stridec": [192, 198, 222, 243], "left_right": [192, 207, 237, 248, 250, 251], "mxn": 192, "a_arrai": [192, 222, 225], "c_arrai": [192, 222], "x_arrai": 192, "x_iy_i": [193, 195, 232], "kl": [196, 341], "ku": [196, 341], "super": [196, 206, 230, 244, 245, 262, 341], "ta": [197, 198, 199], "tb": [197, 198, 199], "tc": [197, 198, 226, 227, 301, 303, 305], "int8_t": [197, 198, 199], "value_or_poitn": 197, "strideb": [198, 222, 224, 225, 251], "bias": 199, "scriptstyl": [199, 341], "_offset": 199, "a_offset": 199, "ao": 199, "b_offset": 199, "bo": 199, "uint8_t": 199, "offset_typ": 199, "upper_low": [200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 230, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 284, 285, 286, 287, 288, 289, 290, 291, 299, 300, 305, 306, 307, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 333, 334, 339, 340, 341], "treal": [209, 211, 212, 214], "conjg": [210, 211, 215], "nan": [216, 217, 292, 456, 457, 460, 462, 467, 480, 488, 491, 495, 496, 497, 507, 508, 512, 513, 522, 524, 532, 534, 536, 540], "smallest": [217, 255], "matrix_in_out": 218, "ld_in": [218, 219], "ld_out": [218, 219], "seri": [219, 222, 225, 560], "awai": [219, 222, 224, 225, 526, 755], "matrix_array_in_out": 219, "trans_arrai": [219, 225], "m_arrai": [219, 222, 225], "n_arrai": [219, 222, 225], "alpha_arrai": [219, 222, 225], "ld_in_arrai": 219, "ld_out_arrai": 219, "groupsiz": [219, 222, 225], "stride_a": [222, 225, 243, 265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331], "stride_b": [222, 225, 281, 282, 314, 315], "stride_c": [222, 243], "b_arrai": [222, 225], "transa_arrai": 222, "transb_arrai": 222, "lda_arrai": [222, 225], "beta_arrai": 222, "ldb_arrai": [222, 225], "ldc_arrai": 222, "lapack": [224, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "adjac": 224, "phantom": 226, "conj": [226, 256, 456, 457, 462, 467, 480, 532, 534, 536, 540, 546], "cartesian": [227, 229, 550, 551], "unitari": [227, 262, 268, 270, 284, 288, 292, 296, 301, 303, 321, 327, 329, 330, 333, 335, 337, 339], "bmatrix": [227, 228, 229, 341], "switch": [228, 229, 366, 767, 840], "21": [228, 229, 341, 355, 390, 506], "22": [228, 229, 341, 355, 390, 481, 533], "yparam": 228, "x1": [229, 344, 459, 483, 515, 534, 537], "y1": [229, 459, 483, 515, 534, 537], "d1": 229, "d2": 229, "sb": 232, "incxi": 232, "unit_nonunit": [244, 245, 246, 247, 249, 252], "unit_diag": [248, 250, 251, 325, 326], "specific": [248, 250], "untouch": 250, "commit": [253, 254, 255, 256, 257, 259, 260], "protect": [253, 254, 617, 631, 791, 798, 799, 828, 836], "friend": [253, 254, 258], "config_valu": [253, 254, 255, 256, 257, 258], "real_real": [253, 254, 255, 256, 260], "config_param": [253, 254, 255, 256, 257, 258], "complex_storag": [253, 254, 255, 256, 260], "descriptor_typ": [253, 254], "inout": [253, 254], "inout_r": [253, 254], "inout_im": [253, 254], "input_typ": [253, 254, 745, 746, 750, 766], "output_typ": [253, 254, 745, 746, 750, 758, 761, 777], "in_r": [253, 254], "in_im": [253, 254], "out_r": [253, 254], "out_im": [253, 254], "suffici": [253, 254, 257, 258, 569], "capac": [253, 254, 550, 551, 552, 582, 583, 590, 603, 618, 632, 645, 646, 661, 674, 689, 703, 717, 731, 742, 851], "commit_statu": [253, 254, 260], "fwd_stride": [255, 256, 260], "resp": [255, 256, 258, 259, 260], "bwd_stride": [255, 256, 260], "number_of_transform": [255, 256, 260], "fwd_distanc": [255, 256, 260], "bwd_distanc": [255, 256, 260], "superscript": 255, "fwd": 255, "bwd": 255, "k_1": [255, 256, 259, 260, 356, 397], "k_2": [255, 256, 259, 260], "k_d": [255, 256, 259, 260], "k_": [255, 259, 369, 372, 393, 394], "thereof": [255, 259, 293, 327], "xwd": 255, "_2": 255, "_d": 255, "_j": 255, "foral": [255, 258, 259], "lbrace": [255, 258, 259, 260], "rbrace": [255, 258, 259, 260], "elementari": [255, 256, 262, 264, 265, 268, 288, 293, 295, 296, 297, 298, 301, 302, 303, 304, 321, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340], "consequ": 255, "complex_complex": [255, 256, 260], "unbatch": 255, "break": 255, "displac": [255, 348, 352, 371, 374, 377, 378, 383, 387, 401, 408], "_k": 255, "consider": [255, 259, 548], "inplac": [255, 256, 260], "placement": [255, 256, 258, 260], "abid": 255, "deprec": [255, 260, 743, 834], "input_strid": [255, 260], "output_strid": [255, 260], "caus": [255, 292, 475, 482, 500, 527, 550, 551, 552, 578, 731, 816, 839, 841], "trigger": [255, 258, 750, 840], "attempt": [255, 569, 597, 614, 671, 686, 728, 753, 759, 761, 762, 786, 794, 800, 801, 828, 829], "revers": [255, 565, 736], "set_valu": [255, 256, 257, 259, 260], "fwd_domain_strid": 255, "bwd_domain_strid": 255, "compute_forward": [255, 256, 258, 259], "compute_backward": [255, 258, 259], "warn": [255, 292, 475, 482, 500, 527], "messag": [255, 575, 745, 746, 747, 749, 752, 753, 754, 755, 758, 759, 761, 762, 763, 764, 766, 771, 772, 773, 774, 776, 777, 778, 779, 780, 825, 827, 835], "IN": 255, "put_strid": 255, "wd_stride": 255, "eq": 256, "not_inplac": [256, 260], "snippet": 256, "n_1": [256, 258, 259, 260, 395, 404], "n_2": [256, 259], "n_3": 256, "n1": [256, 341], "n2": [256, 341], "n3": [256, 341], "dist": 256, "k1": [256, 581, 819], "k2": [256, 581, 819], "k3": 256, "zr": 256, "zi": 256, "decltyp": [256, 807, 843, 845], "fwd_dist": 256, "bwd_dist": 256, "complex_data": 256, "whilst": [257, 258], "workspace_automat": [257, 260], "malloc": [257, 454, 788, 790], "set_workspac": [257, 260], "uncommit": [257, 260], "dom": [257, 258, 259, 260], "myqueu": 257, "workspacebyt": [257, 258], "get_valu": [257, 259, 260], "workspace_external_byt": [257, 258, 260], "workspaceusm": [257, 258], "prec": [258, 259, 260], "workspacebuf": 258, "n_d": [258, 259, 260], "workspace_plac": [258, 260], "workspace_extern": [258, 260], "thereaft": 258, "n_j": [258, 259], "insuffici": [258, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339], "larger": [258, 493, 495, 512, 546, 569, 571, 767, 783], "writabl": [258, 259, 260], "latest": 258, "aforement": 258, "tune": [258, 863], "twiddl": 258, "again": [258, 553, 566], "lack": 258, "period": [259, 260, 345, 353, 354, 355, 367, 388, 389, 390, 391, 402, 785, 837], "ell": 259, "displaystyl": 259, "j_d": 259, "j_2": 259, "j_1": 259, "imath": 259, "j_": 259, "fp64": [259, 260], "suffic": 259, "unambigu": 259, "inde": 259, "symmetri": 259, "roughli": 259, "redund": 259, "k_j": [259, 369], "lbrace1": 259, "constrain": 259, "pmod": 259, "explanatori": [259, 260], "deliv": [259, 260], "hotpath": 259, "meant": 260, "forward_domain": 260, "forward_scal": 260, "backward_scal": 260, "fft": 260, "scratch": 260, "inspector": [261, 575], "sparsiti": 261, "matrix_handle_t": [261, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431], "pseudorandom": [261, 342, 345, 347, 353, 354, 355, 356, 367, 369, 373, 388, 389, 390, 391, 392, 397, 400, 402, 409], "quasi": [261, 342, 367, 395, 404], "qbp": 262, "pmatrix": 262, "b_1": 262, "q_1b_1p_h": 262, "q_": 262, "q_1b_1p_1": 262, "reflector": [262, 264, 265, 268, 288, 293, 295, 296, 297, 298, 301, 302, 303, 304, 321, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340], "orgbr": [262, 292, 294], "ungbr": [262, 292, 328], "realt": [262, 270, 284, 286, 288], "tauq": [262, 293, 327], "taup": [262, 293, 327], "scratchpad_s": [262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 294, 295, 296, 299, 301, 302, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 328, 329, 330, 333, 335, 336, 337, 339], "gebrd_scratchpad_s": [262, 292], "superdiagon": [262, 270, 288, 321], "subdiagon": [262, 268, 288, 321], "off": [262, 284, 286, 288, 317, 319, 321, 546, 575, 767, 785], "had": [262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 745, 750, 754, 759, 761, 763, 766, 778], "gebrd": [263, 292, 293, 294, 327, 328], "wrong": [263, 266, 267, 269, 271, 274, 275, 278, 279, 282, 283, 285, 287, 289, 291, 294, 297, 298, 300, 302, 304, 306, 309, 310, 312, 315, 316, 318, 320, 322, 324, 326, 328, 331, 332, 334, 336, 338, 340], "qr": [264, 265, 284, 292, 295, 296, 301, 317, 329, 330, 335], "pivot": [264, 265, 268, 272, 273, 290, 323], "tau": [264, 265, 266, 268, 288, 293, 295, 296, 297, 299, 301, 303, 305, 321, 327, 329, 330, 331, 333, 335, 337, 339], "geqrf_scratchpad_s": [264, 292], "trapezoid": [264, 265, 268, 272, 273, 366], "stride_tau": [265, 266, 296, 297, 330, 331], "a_i": [265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331, 473, 494, 498, 514, 543], "tau_i": [265, 266, 296, 297, 330, 331], "geqrf_batch_scratchpad_s": [265, 292], "r_i": [265, 369], "q_i": [265, 292, 296, 297, 330, 331], "q_ir_i": 265, "m_g": [265, 266, 273, 274, 296, 297, 330, 331], "n_g": [265, 266, 273, 274, 277, 278, 281, 282, 296, 297, 308, 309, 314, 315, 330, 331], "_g": [265, 274, 277, 278, 281, 282, 308, 309, 314, 315], "geqrf_batch": [266, 292, 296, 330], "lda_g": [266, 273], "geqrf": [267, 292, 295, 301, 329, 335], "rq": [268, 292, 301, 303, 335, 337], "gerqf_scratchpad_s": [268, 292], "subarrai": 268, "gerqf": [269, 292, 301, 303, 335, 337], "rectangular": [270, 292, 301, 303, 335, 337, 366], "svd": 270, "job": [270, 271, 284, 285, 286, 287, 317, 318, 319, 320], "jobu": [270, 271], "jobvt": [270, 271], "ldu": [270, 271], "vt": [270, 271], "ldvt": [270, 271], "allvec": [270, 271], "somevec": [270, 271], "overwritevec": [270, 271], "novec": [270, 271, 284, 285, 286, 287, 317, 318, 319, 320], "gesvd_scratchpad_s": [270, 292], "columnwis": 270, "rowwis": 270, "ne": 270, "referenc": [270, 287, 289, 307, 310, 318, 325, 326, 341, 748, 781, 840, 842], "bdsqr": 270, "did": [270, 284, 286, 317, 319], "converg": [270, 284, 286, 317, 319], "unconverg": 270, "ubv": 270, "gesvd": [271, 292], "lu": [272, 273, 276, 277, 280, 281, 292, 308, 314], "ipiv": [272, 273, 274, 276, 277, 278, 280, 281, 282, 290, 323], "getrf_scratchpad_s": [272, 292], "ii": [272, 290, 323], "p_il_iu_i": 273, "l_i": [273, 308, 314, 315], "stride_ipiv": [273, 274, 277, 278, 281, 282], "ipiv_i": [273, 278, 282], "getrf_batch_scratchpad_s": [273, 292], "getrf_batch": [274, 277, 281, 292], "getrf": [275, 276, 280, 292], "invers": [276, 277, 292, 311, 344, 366, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 472, 484, 485, 486, 487, 502, 503, 504, 546], "getri_scratchpad_s": [276, 292], "getri_batch_scratchpad_s": [277, 292], "getri_batch": [278, 292], "getri": [279, 292], "hx": [280, 283, 325, 326], "nrh": [280, 281, 282, 283, 313, 314, 315, 316, 325, 326], "getrs_scratchpad_s": [280, 292], "a_ix_i": [281, 282, 314], "tx_i": [281, 282], "hx_i": [281, 282], "xi": 281, "getrs_batch_scratchpad_s": [281, 292], "trans_g": 281, "onemkl_lapack_getrf_batch_usm": 281, "getrs_batch": [282, 292], "a_ihx_i": 282, "nrhsg": 282, "getr": [283, 292], "z_": [284, 317, 409, 565], "az_i": 284, "z_i": [284, 317, 514], "pal": [284, 317], "walker": [284, 317], "ql": [284, 317], "jobz": [284, 285, 286, 287, 317, 318, 319, 320], "butter": 284, "heevd_scratchpad_s": [284, 292], "ascend": [284, 286, 317, 319], "tridiagon": [284, 286, 288, 292, 299, 305, 317, 319, 321, 333, 339], "submatrix": [284, 286, 317, 319], "ly": [284, 286, 317, 319, 365], "mod": [284, 286, 317, 319, 342, 353, 354, 355, 369, 388, 389, 390, 400, 409], "heevd": [285, 292], "eigenproblem": [286, 292, 319], "bx": [286, 287, 319, 320], "abx": [286, 287, 319, 320], "bax": [286, 287, 319, 320], "ityp": [286, 287, 319, 320], "hegvd_scratchpad_s": [286, 292], "bz": [286, 319], "choleski": [286, 292, 307, 308, 311, 313, 314, 319], "ll": [286, 307, 313, 316, 319], "minor": [286, 307, 308, 319, 576, 578], "hegvd": [287, 292], "chetrd": 288, "zhetrd": 288, "qtq": [288, 299, 305, 321, 333, 339], "hetrd_scratchpad_s": [288, 292], "hetrd": [289, 292, 333, 334, 339, 340], "kaufman": [290, 292, 323], "udu": [290, 291, 323, 324], "ldl": [290, 291, 323, 324], "int_64": [290, 323], "hetrf_scratchpad_s": [290, 292], "hetrf": [291, 292], "packag": [292, 748, 863], "invert": [292, 546], "orgqr": [292, 298], "orgqr_scratchpad_s": [292, 295], "ormqr": [292, 302], "ormqr_scratchpad_s": [292, 301], "ormrq": [292, 304], "ormrq_scratchpad_s": [292, 303], "potrf": [292, 310, 311, 313], "potrf_scratchpad_s": [292, 307], "potri": [292, 312], "potri_scratchpad_s": [292, 311], "potr": [292, 316], "potrs_scratchpad_s": [292, 313], "sytrf": [292, 324], "sytrf_scratchpad_s": [292, 323], "trtr": [292, 326], "trtrs_scratchpad_s": [292, 325], "ungqr": [292, 332], "ungqr_scratchpad_s": [292, 329], "unmqr": [292, 336], "unmqr_scratchpad_s": [292, 335], "unmrq": [292, 338], "unmrq_scratchpad_s": [292, 337], "orgbr_scratchpad_s": [292, 293], "orgtr": [292, 300], "orgtr_scratchpad_s": [292, 299], "sytrd": [292, 299, 300, 305, 306, 322], "ormtr": [292, 306], "ormtr_scratchpad_s": [292, 305], "syevd": [292, 318], "syevd_scratchpad_s": [292, 317], "sygvd": [292, 320], "sygvd_scratchpad_s": [292, 319], "sytrd_scratchpad_s": [292, 321], "ungbr_scratchpad_s": [292, 327], "ungtr": [292, 334], "ungtr_scratchpad_s": [292, 333], "unmtr": [292, 340], "unmtr_scratchpad_s": [292, 339], "orgqr_batch": [292, 297], "orgqr_batch_scratchpad_s": [292, 296], "potrf_batch": [292, 309, 314], "potrf_batch_scratchpad_s": [292, 308], "potrs_batch": [292, 315], "potrs_batch_scratchpad_s": [292, 314], "ungqr_batch": [292, 331], "ungqr_batch_scratchpad_s": [292, 330], "754": [292, 469, 506, 534], "inf": [292, 475, 482, 500, 527], "unexpect": 292, "unstabl": 292, "gen": [293, 294, 327, 328], "constraint": [293, 294, 327, 328, 782, 786, 843, 863], "orthonorm": [295, 296, 329, 330], "k_g": [296, 297, 330, 331], "kg": 297, "ai": [297, 497, 524], "qc": [301, 303, 305, 335, 337, 339], "cq": [301, 303, 305, 335, 337, 339], "onemkl_lapack_sytrd": 305, "tu_i": [308, 314, 315], "hu_i": [308, 314, 315], "l_il_i": [308, 314, 315], "ng": 309, "ldag": 309, "tu": 313, "hu": 313, "rhs_g": 315, "hh": [335, 337], "hc": [335, 337], "visual": [341, 863], "a_": [341, 355, 390, 391, 392, 409], "13": [341, 345, 354, 355, 367, 389, 390, 541, 552], "1n": 341, "2n": 341, "31": [341, 345, 353, 367, 388, 391, 392, 400], "33": 341, "3n": 341, "vdot": 341, "ddot": 341, "m1": [341, 677, 692], "m2": [341, 677, 692], "m3": 341, "mn": 341, "underbrac": 341, "smallmatrix": 341, "34": [341, 392], "35": 341, "43": 341, "53": [341, 506], "scriptscriptstyl": 341, "ldm": 341, "sequenti": [341, 367, 556, 564, 565, 744, 816, 850, 852], "bratley88": [342, 367, 404], "bratlei": [342, 395, 404], "fox": [342, 395, 404], "sobol": [342, 367], "quasirandom": 342, "vol": 342, "14": [342, 403, 552], "88": 342, "march": 342, "1988": 342, "bratley92": [342, 367, 395], "niederreit": [342, 367], "discrep": 342, "simul": [342, 367, 391, 392], "195": 342, "213": [342, 478, 529, 530, 538], "juli": 342, "1992": 342, "coddington94": [342, 367], "coddington": 342, "mont": [342, 367, 392], "carlo": [342, 367, 392], "phy": 342, "547": 342, "1994": 342, "ecuyer99": [342, 345, 353, 367, 388], "ecuy": 342, "pierr": 342, "congruenti": [342, 345, 353, 354, 367, 388, 389, 409], "good": [342, 353, 355, 388, 390], "lattic": 342, "68": 342, "225": 342, "249": [342, 400], "260": 342, "1999": 342, "ecuyer99a": [342, 345, 353, 355, 367, 390], "recurs": [342, 345, 355, 367, 390, 550, 551, 552, 556, 558, 564, 570, 792, 795, 796, 798, 799, 800, 816, 828, 829], "research": 342, "47": 342, "159": 342, "164": 342, "kirkpatrick81": [342, 367, 400], "kirkpatrick": 342, "stoll": 342, "journal": 342, "40": [342, 404], "517": 342, "526": 342, "1981": 342, "matsumoto98": [342, 367, 391, 392], "matsumoto": 342, "nishimura": 342, "mersenn": [342, 367, 391, 392, 402], "twister": [342, 367, 391, 392, 402], "623": [342, 391], "equidistribut": [342, 391], "30": [342, 366, 391, 392], "januari": 342, "1998": 342, "matsumoto00": [342, 367, 392], "56": 342, "69": [342, 392], "ed": 342, "spanier": 342, "2000": 342, "http": 342, "www": 342, "hiroshima": 342, "ac": 342, "jp": 342, "7em": 342, "mat": 342, "mt": 342, "dc": 342, "html": 342, "nag": [342, 345, 354, 367, 389, 409], "uk": 342, "numerical_librari": 342, "asp": 342, "saito08": [342, 367, 402], "saito": 342, "128": [342, 345, 355, 356, 367, 369, 397, 402], "2006": 342, "607": 342, "622": 342, "2008": [342, 469, 506], "articl": 342, "earticl": 342, "salmon11": [342, 345, 356, 367, 369, 397], "salmon": 342, "john": 342, "moral": 342, "dror": 342, "ron": 342, "shaw": 342, "david": 342, "easi": [342, 564], "sc": 342, "2011": 342, "sobol76": [342, 367], "levitan": 342, "yu": 342, "uniformli": [342, 343, 344, 359, 360, 361, 365, 366, 405, 406, 407, 571], "cube": [342, 366, 470, 503, 520, 521, 546, 755, 765], "preprint": 342, "institut": 342, "ussr": 342, "academi": 342, "1976": 342, "russian": 342, "mt2203": [342, 367, 391], "mt2002": 342, "emt19937ar": 342, "fip": [342, 369], "197": [342, 369], "feder": 342, "encrypt": [342, 369], "ae": [342, 367, 369], "brng": [343, 344, 347, 356, 365, 369, 397], "gaussian": [343, 344, 363, 365, 366, 410, 411], "lognorm": [343, 344, 348, 365, 366], "uniform_bit": [343, 365], "poisson": [343, 344, 365, 366, 399], "bernoulli": [343, 344, 365, 366, 372], "uniform_method": [344, 360, 361, 366, 405, 406], "gaussian_method": [344, 349, 366, 379], "box_muller2": [344, 349, 352, 366, 379, 380, 387], "x2": [344, 459, 483, 515, 534, 537], "u1": 344, "u2": 344, "u_1": [344, 366], "sin": [344, 366, 480, 531, 532, 533, 534, 546], "u_2": [344, 366], "exponential_method": [344, 348, 365, 366, 377], "icdf": [344, 346, 348, 366, 370, 374, 377, 379, 380, 382, 383, 385, 387, 401, 408], "icdf_accur": [344, 348, 365, 366, 377, 387, 401, 408], "cumul": [344, 346, 348, 349, 352, 357, 360, 361, 366, 370, 371, 372, 374, 375, 377, 378, 379, 382, 383, 384, 385, 387, 394, 398, 399, 401, 405, 406, 408, 471, 472, 484, 485, 487, 546], "lognormal_method": [344, 352, 365, 366, 387], "bernoulli_method": [344, 346, 366, 370], "poisson_method": [344, 357, 366, 398], "devroy": [344, 357], "27": [344, 366], "parallelogram": [344, 366], "tail": [344, 366, 752], "mrg32k3a": [345, 347, 367, 403], "philox4x32x10": [345, 347, 359, 362, 367, 410], "philox4x32": [345, 356, 367], "mcg31m1": [345, 347, 367, 386, 403], "mcg": [345, 353, 354, 367, 388], "1132489760": [345, 353, 367, 388], "mcg59": [345, 347, 359, 367], "59": [345, 354, 367, 389], "trial": [346, 370, 372, 382, 384, 393], "f_p": 346, "inttyp": [346, 357, 370, 372, 382, 384, 393, 394, 398, 399, 415, 417, 418, 422, 423, 425, 426, 428, 430], "method_typ": [346, 348, 349, 352, 357, 360, 361, 370, 371, 372, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 393, 394, 398, 399, 401, 405, 406, 408], "uint32_t": [346, 347, 353, 354, 355, 356, 357, 359, 361, 370, 373, 380, 382, 384, 388, 390, 391, 392, 393, 394, 395, 400, 402, 404, 407, 409], "uinttyp": [347, 359, 373, 407], "scalefactor": [348, 352, 371, 374, 377, 383, 385, 387, 401, 408], "densiti": [348, 349, 352, 360, 380], "realtyp": [348, 349, 352, 360, 371, 374, 375, 377, 378, 379, 380, 383, 385, 387, 401, 405, 408], "stddev": [349, 379], "dy": [349, 371, 375, 378, 379], "int_": [349, 471], "phi": [349, 352, 387, 484, 485, 487], "distr": [350, 362, 381, 410], "vec_siz": [350, 353, 354, 355, 356, 362], "subject": [352, 387, 864], "displ": [352, 387], "earlier": [353, 388, 565, 767, 813], "possess": [353, 388, 400], "ax_": [353, 354, 388, 389], "u_n": [353, 354, 355, 356, 369, 388, 389, 390, 395, 397, 400, 402, 404, 409], "vecsiz": [353, 354, 355, 356], "default_se": [353, 354, 355, 356, 369, 388, 389, 390, 391, 392, 397, 400, 402, 409], "initializer_list": [353, 354, 355, 356, 358, 369, 390, 391, 392, 397, 402, 403, 409, 582, 583, 590, 592, 593, 597, 603, 604, 605, 614, 618, 619, 620, 628, 632, 633, 634, 642, 645, 646, 647, 653, 654, 661, 662, 663, 671, 674, 676, 677, 686, 689, 691, 692, 700, 703, 705, 706, 714, 717, 719, 720, 728, 731, 732, 733, 734], "0x7fffffff": [353, 388, 391], "57": [354, 389], "approx": [355, 390], "191": [355, 390], "m_": [355, 390, 409], "y_": [355, 390, 391, 392, 409, 565], "m_2": [355, 390, 409], "z_n": [355, 390, 409], "m_1": [355, 390, 409], "1403580": [355, 390], "810728": [355, 390], "209": [355, 390], "527612": [355, 390], "1370589": [355, 390], "22853": [355, 390], "geqslant": [355, 390, 400, 409], "prove": [355, 390], "num_to_skip": [355, 356, 358, 403], "k_0": [356, 369, 397], "c_n": [356, 369, 397], "omega_n": [356, 397], "l_1": [356, 397], "r_1": [356, 397], "l_0": [356, 397], "r_0": [356, 397], "96": [356, 397], "mullo": [356, 397], "0xd2511f53": [356, 397], "mulhi": [356, 397], "0xcd9e8d57": [356, 397], "oplu": [356, 369, 391, 392, 395, 397, 400, 402, 404], "0xbb67ae85": [356, 397], "0x9e3779b9": [356, 397], "r_": [356, 397, 402], "4n": [356, 397, 402], "quadrupl": [356, 397, 402], "r_n": [356, 369, 397, 402], "\u03bb": 357, "num": [358, 403], "_skip": [358, 403], "notin": [360, 405], "numeric_limit": [361, 406], "callabl": [363, 413, 416, 840], "your": [363, 395, 404, 577, 781, 785, 844, 863, 864], "binomi": [363, 365, 366, 394, 411], "skip_ahead": [364, 410, 412], "laplac": 365, "weibul": [365, 366, 401], "cauchi": [365, 366], "rayleigh": [365, 366], "gumbel": [365, 366], "extrem": 365, "chi_squar": [365, 366], "chi": [365, 366, 375], "gaussian_mv": [365, 366], "multivari": [365, 380], "geometr": [365, 366], "hypergeometr": [365, 366], "poisson_v": [365, 366], "negative_binomi": [365, 366], "pascal": 365, "multinomi": [365, 366], "demand": [365, 849, 863], "irrespect": 365, "unform_method": 365, "weibull_method": [365, 366, 408], "rayleigh_method": [365, 366, 401], "box_muller2_accur": [365, 366, 387], "gamma_method": [365, 366, 378], "marsaglia_accur": [365, 366, 378], "beta_method": [365, 366, 371], "cja_accur": [365, 366, 371], "standard_accur": 366, "box_mul": [366, 379, 380], "thru": 366, "2lnu_1": 366, "cauchy_method": [366, 374], "geometric_method": [366, 382], "gumbel_method": [366, 383], "marsaglia": [366, 378], "properli": 366, "cja": [366, 371], "cheng": 366, "jonhnk": 366, "atkinson": 366, "johnk": 366, "p2": 366, "852": 366, "956": 366, "chi_square_method": [366, 375], "gamma_bas": [366, 375], "odd": [366, 519, 541], "15": [366, 391, 392], "binomial_method": [366, 372], "btpe": [366, 372], "ntrial": [366, 372, 393], "ptpe": [366, 398], "gaussian_icdf_bas": [366, 398, 399], "cdf": 366, "lookup": [366, 582, 590, 597, 603, 614, 618, 628, 632, 642, 645, 653, 661, 671, 674, 686, 689, 700, 703, 714, 717, 728, 731, 786, 788, 790, 861], "poisson_v_method": [366, 399], "hypergeometric_method": [366, 384], "h2pe": [366, 384], "negative_binomial_method": [366, 394], "nbar": [366, 394], "multinomial_method": [366, 393], "poisson_icdf_bas": [366, 393], "gaussian_mv_method": [366, 380], "boxmul": 366, "boxmuller2": 366, "default_engin": 367, "231": [367, 388], "r250": 367, "gfsr": [367, 400], "250": [367, 400], "103": [367, 400], "wichmann_hil": 367, "wichmann": [367, 409], "hill": [367, 409], "273": [367, 409], "19937": [367, 391, 402], "6024": [367, 392], "2203": 367, "mutual": [367, 393, 793, 794, 828, 831, 834], "sfmt19937": 367, "ars5": 367, "ni": 367, "nondeterminist": [367, 564], "leapfrog": [367, 410, 412], "1313": 367, "259": 367, "c_0": 369, "subbyt": 369, "shiftrow": 369, "mixcolumn": 369, "addroundkei": 369, "lo": 369, "0x9e3779b97f4a7c15": 369, "hi": 369, "0xbb67ae8584caa73b": 369, "rcl": [370, 371, 372, 375, 377, 378, 382, 384, 385, 387, 394, 398, 399, 401, 405, 406, 408], "variat": [372, 380, 413, 444, 447], "truli": 373, "arctan": 374, "degre": [375, 479, 531, 816], "freedom": 375, "x_a": 378, "dxd": 380, "det": 380, "dimen": [380, 395, 404], "distrtyp": 381, "enginetyp": [381, 386, 403], "lot": 384, "bigcup": 384, "unmark": [384, 762], "k_mc": 384, "s_l": 384, "laplace_method": 385, "particularli": 386, "engine_1": [386, 403], "engine_2": [386, 403], "engine_3": [386, 403], "twist": 391, "624": 391, "397": 391, "0x80000000": 391, "0x9d2c5680": 391, "0xefc60000": 391, "18": [391, 392], "a_j": [391, 392], "32x32": [391, 392], "ccccc": [391, 392], "0x9908b0df": 391, "0xffffffe0": 392, "0x1f": 392, "b_j": 392, "engine_idx": [392, 409], "outcom": 393, "x_k": 393, "theoret": [395, 400], "asymptot": 395, "318": 395, "irreduc": 395, "polynomi": 395, "v_c": [395, 404], "hypercub": [395, 404], "default_dimensions_numb": [395, 404], "irred_polynomi": 395, "ke": [398, 399], "ampl": [400, 569], "foundat": 400, "cryptograph": 400, "69069x_": 400, "7k": 400, "247": 400, "156": 402, "w_n": [402, 409], "w_0": [402, 409], "w_m": 402, "wb": 402, "wc": 402, "wd": 402, "0xbffffff6": 402, "0xdffaffff": 402, "0xddfecb7f": 402, "0xdfffffef": 402, "2nd": [403, 432, 433, 434, 435, 445, 446, 459, 465, 466, 477, 483, 493, 495, 496, 497, 501, 506, 512, 513, 515, 516, 518, 519, 522, 524, 537], "3rd": [403, 432, 433, 434, 435, 445, 446], "1st": [403, 459, 465, 466, 477, 483, 493, 495, 496, 497, 501, 504, 506, 511, 512, 513, 515, 516, 518, 519, 522, 523, 524, 536, 537], "direction_numb": 404, "372": 409, "112": 409, "prime": 409, "16718909": 409, "16776917": 409, "y_0": 409, "z_0": 409, "m_3": 409, "m_4": 409, "sycl_buff": 410, "usm_ptr": 410, "finit": [413, 459, 480, 483, 488, 497, 515, 518, 519, 524, 532, 534, 537, 850, 851, 853], "s_0": 413, "rightarrow": 413, "transit": 413, "symbol": [413, 578], "u_0": 413, "s_": 413, "prng": 413, "imit": 413, "coo": [414, 415, 422, 424], "row_ind": [414, 422], "col_ind": [414, 422, 423], "val": [414, 422, 423, 553, 590, 603, 618, 632, 661, 674, 689, 703, 717, 779], "nrow": [414, 422, 423, 430], "ncol": [414, 422, 423], "nnz": [414, 422, 423], "row_ptr": [414, 423], "fp": [415, 417, 418, 422, 423, 425, 426, 428, 430], "dense_matrix_layout": [415, 416], "a_handl": [415, 416, 417, 418, 426, 428, 430], "set_csr_data": [415, 416, 417, 418, 419, 424, 426, 427, 428, 429, 430, 431], "set_coo_data": [415, 416, 417, 418, 419, 424, 426, 427, 428, 429, 430, 431], "upon": [415, 416, 417, 418, 419, 421, 426, 427, 428, 429, 430, 431, 580, 843], "sole": [416, 864], "wish": 416, "transpose_v": [417, 418, 419, 428, 429, 431], "p_handl": [420, 421], "null": [421, 828], "init_matrix_handl": [421, 424], "sparse_matrix_typ": 421, "_structur": 421, "cleanup": [421, 785], "mutlipl": [422, 423], "correct": [422, 423, 506, 558], "clarifi": [422, 423], "release_matrix_handl": 424, "optimize_gemv": 424, "optimize_symv": 424, "optimize_trmv": 424, "optimize_trsv": 424, "optimize_gemm": 424, "gemvdot": 424, "uplo_v": [426, 427, 428, 429, 430, 431], "diag_val": [428, 429, 430, 431], "opa": 430, "4th": [432, 433, 434, 435, 445, 446], "observationslayout": [432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453], "central_moment_2": [432, 433], "central_moment_3": [432, 433], "central_moment_4": [432, 433], "one_pass": [432, 434, 437, 441, 445, 446, 449, 452], "central_sum_2": [434, 435], "central_sum_3": [434, 435], "central_sum_4": [434, 435], "consolid": [436, 444], "n_dims_": 436, "n_observations_": 436, "observations_": 436, "indices_": 436, "n_dim": [436, 439, 451], "n_observ": [436, 439, 451], "nt64_t": 439, "_observ": 439, "fourth": [444, 447], "skew": [444, 447], "excess": 444, "kurtosi": [444, 447], "raw_moment_2": 445, "raw_moment_3": 445, "raw_moment_4": 445, "raw_sum_2": 446, "raw_sum_3": 446, "raw_sum_4": 446, "raw_sum": 447, "central_sum": 447, "raw_moment": 447, "central_mo": 447, "min_max": 447, "make_dataset": [448, 451], "1000": [451, 553, 565, 578], "dataset_ptr": 451, "mean_ptr": 451, "alpha_ptr": 454, "beta_ptr": 454, "liter": [454, 836], "malloc_host": 454, "anyth": [454, 752], "slightli": 454, "not_defin": [455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543], "qnan": [455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 498, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 514, 515, 517, 519, 520, 521, 522, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "snan": [455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 498, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 514, 515, 517, 519, 520, 521, 522, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "hypot": [455, 546], "set_mod": [455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 547], "cosin": [456, 457, 458, 474, 478, 479, 480, 481, 530, 544, 546], "error_handl": [456, 457, 458, 459, 461, 463, 467, 471, 472, 474, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 515, 516, 518, 519, 521, 522, 523, 524, 529, 530, 531, 532, 533, 536, 537, 538, 539, 541, 542], "errhandl": [456, 457, 458, 459, 461, 463, 467, 471, 472, 474, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 515, 516, 518, 519, 520, 521, 522, 523, 524, 529, 530, 531, 532, 533, 536, 537, 538, 539, 541, 542], "\u03c0": [456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 479, 481, 507, 531, 533, 539, 541, 546], "errdom": [456, 457, 458, 461, 463, 467, 472, 474, 475, 478, 479, 481, 482, 486, 487, 491, 500, 504, 507, 508, 509, 510, 511, 519, 521, 522, 524, 527, 529, 530, 531, 533, 536, 538, 539, 541, 542], "create_error_handl": [456, 457, 458, 459, 461, 463, 467, 471, 472, 474, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 497, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 515, 516, 518, 519, 520, 521, 522, 523, 524, 529, 530, 531, 532, 533, 536, 537, 538, 539, 541, 542, 547], "nonneg": [457, 522], "aco": [458, 546], "y2": [459, 483, 515, 534, 537], "la": [459, 478, 479, 481, 499, 506, 515, 519, 528, 529, 530, 531, 533, 537, 538, 539, 541], "accuracy_warn": [459, 475, 482, 500, 506, 515, 519, 527, 537], "atan2": [460, 546], "sine": [461, 462, 463, 474, 529, 530, 531, 532, 533, 544, 546], "asinh": [461, 546], "atanh": [464, 546], "quadrant": [465, 466, 546], "ad2d": 465, "arctang": [465, 466], "sing": [467, 472, 475, 482, 483, 486, 487, 491, 497, 500, 502, 503, 504, 505, 507, 508, 509, 510, 527, 542], "atan": [468, 546], "ieee754": 469, "ansi": [469, 506], "erfc": [471, 484, 487, 546], "cdfnorm": [472, 484, 485, 546], "erfcinv": [472, 487, 546], "erfinv": [472, 486, 546], "2x": [472, 484, 485, 486, 487], "atom": [475, 500, 527], "old_statu": [475, 527], "216": [478, 529, 530, 538], "enhanc": [478, 479, 481, 499, 528, 529, 530, 531, 533, 538, 539, 541], "cosh": [478, 546], "180": [479, 531, 539, 546], "52": [479, 531], "flt_max": [480, 488, 489, 490, 492, 501, 521, 522, 532, 546], "log2": [480, 546], "dbl_max": [480, 488, 489, 490, 492, 501, 522, 532, 546], "ci": [480, 532, 534, 546], "51": [481, 533], "status_arrai": 482, "fixup": 482, "copysign": [482, 541, 546], "errarrai": 482, "status_cod": 482, "int_0": [484, 485, 486, 487], "int_x": [485, 491], "complimentari": 486, "cdfnorminv": [486, 487, 546], "e_1": 491, "int_1": 491, "xt": 491, "minu": [494, 525, 546], "modulu": [497, 546], "trunc": [497, 546], "provis": 499, "beyond": [505, 542], "scalea": 506, "shifta": 506, "scaleb": 506, "shiftb": 506, "addend": 506, "2emin": 506, "emax": 506, "2emax": 506, "\u03b41": 506, "\u03b42": 506, "emin": 506, "126": 506, "1022": 506, "1023": 506, "ifscalea": 506, "ifscaleb": 506, "fmax": [512, 546], "fmin": [513, 546], "truncat": [514, 763], "infinit": 518, "subnorm": 518, "treatment": [522, 523], "halfwai": 526, "new_statu": 527, "former": [527, 528], "new_mod": 528, "old_mod": 528, "sinh": [529, 546], "z1": 534, "z2": 534, "i2": [534, 560], "quiet": 534, "intersect": 534, "cpp": 537, "tan": [539, 540, 541, 546], "38": 539, "67": [539, 541], "erro": 540, "nonlinear": 544, "graphic": 544, "sinco": [545, 546], "sqr": 546, "mulbyconj": 546, "linearfrac": 546, "fmod": 546, "remaind": [546, 550, 551, 552], "inv": 546, "invsqrt": 546, "cbrt": 546, "invcbrt": 546, "pow2o3": 546, "pow3o2": 546, "powx": 546, "powr": 546, "exp2": 546, "exp10": 546, "expm1": 546, "log10": 546, "log1p": 546, "logb": 546, "asin": 546, "cospi": 546, "sinpi": 546, "tanpi": 546, "acospi": 546, "asinpi": 546, "atanpi": 546, "atan2pi": 546, "cosd": 546, "sind": 546, "tand": 546, "acosh": 546, "lgamma": 546, "tgamma": 546, "expint1": 546, "nearbyint": 546, "rint": 546, "inexact": 546, "modf": 546, "nextaft": 546, "fdim": 546, "maxmag": 546, "minmag": 546, "get_mod": 547, "set_statu": 547, "get_statu": 547, "clear_statu": 547, "subdivid": [548, 569, 570, 816], "worth": 548, "acknowledg": 548, "collaborative_call_onc": [549, 554], "collaborative_once_flag": 549, "parallel_reduc": [549, 552, 553, 556, 565, 572, 573, 803, 810, 811, 812, 816], "parallel_deterministic_reduc": 549, "parallel_scan": [549, 552, 567, 572, 573, 813, 814, 815, 816], "pre_scan_tag": [549, 565, 813], "final_scan_tag": [549, 565, 813], "parallel_for_each": [549, 555, 804, 807], "feeder": [549, 807], "parallel_invok": 549, "parallel_pipelin": [549, 561, 562, 563], "filter_mod": [549, 560], "flow_control": [549, 561, 769, 805, 824], "parallel_sort": [549, 804], "blocked_rang": [549, 550, 551, 553, 564, 565, 569, 570, 572, 573, 803, 816, 836], "blocked_range2d": [549, 551, 572, 573, 803, 816], "blocked_range3d": [549, 572, 573, 803, 816], "loop": [549, 552, 558, 568, 569, 570, 571, 744, 752, 816], "auto_partition": [549, 558, 564, 565], "affinity_partition": [549, 558, 564], "static_partition": [549, 556, 558, 564], "simple_partition": [549, 556, 558, 564, 565, 569], "i0": 550, "j0": 550, "i1": [550, 560], "j1": 550, "tbb": [550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 578, 581, 582, 584, 588, 590, 591, 593, 603, 605, 609, 617, 618, 620, 623, 631, 632, 634, 637, 645, 647, 653, 655, 661, 663, 666, 674, 677, 689, 692, 703, 706, 717, 720, 731, 734, 743, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 805, 807, 824, 830, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 850, 851, 858, 861], "rowvalu": [550, 551], "colvalu": [550, 551], "row_range_typ": [550, 551], "col_range_typ": [550, 551], "row_begin": [550, 551], "row_end": [550, 551], "size_typ": [550, 551, 552, 582, 588, 589, 590, 592, 594, 596, 601, 603, 608, 615, 616, 618, 622, 629, 630, 632, 636, 643, 644, 645, 646, 651, 653, 660, 661, 665, 672, 673, 674, 675, 676, 677, 679, 681, 687, 688, 689, 690, 691, 692, 693, 695, 701, 702, 703, 704, 705, 706, 707, 709, 715, 716, 717, 718, 719, 720, 721, 723, 729, 730, 731, 732, 733, 735, 740, 741, 742, 786, 788, 790, 818, 851, 856, 858], "row_grains": [550, 551], "col_begin": [550, 551], "col_end": [550, 551], "col_grains": [550, 551], "proportional_split": [550, 551, 552, 572, 816, 817], "is_divis": [550, 551, 552, 558, 564, 569, 570, 816], "statement": [550, 551, 552, 616, 630, 644, 673, 702, 730, 828, 829], "9": [550, 551, 576], "subrang": [550, 551, 552, 556, 558, 564, 565, 569, 570, 571, 616, 630, 644, 673, 688, 702, 716, 730, 810, 811, 816, 817], "repeat": [550, 551, 566, 836], "pagevalu": 551, "page_range_typ": 551, "page_begin": 551, "page_end": 551, "page_grains": 551, "splittabl": [552, 802, 816], "const_iter": [552, 582, 585, 590, 595, 600, 603, 607, 608, 613, 614, 616, 618, 621, 622, 627, 628, 630, 632, 635, 636, 641, 642, 644, 653, 656, 661, 664, 665, 670, 671, 673, 674, 680, 681, 685, 686, 688, 689, 694, 695, 699, 700, 702, 703, 708, 709, 713, 714, 716, 717, 722, 723, 727, 728, 730, 731, 736, 740, 851, 854, 858], "grainsiz": [552, 590, 600, 731, 740, 816, 818, 851, 854], "blockedrangevalu": [552, 802], "measur": [552, 861], "despit": 552, "mere": 552, "lazi": 553, "cachedproperti": 553, "foo": [553, 836, 853], "lazydata": 553, "getproperti": 553, "serial": [553, 558, 560, 564, 565, 585, 589, 595, 602, 616, 630, 644, 652, 656, 660, 673, 675, 688, 690, 702, 704, 716, 718, 730, 742, 759, 765, 770, 777, 780, 816, 839, 857], "collabor": 553, "inlet": 555, "moveconstruct": [555, 566], "bodi": [555, 556, 557, 558, 561, 564, 565, 569, 745, 750, 751, 752, 754, 755, 759, 761, 766, 767, 770, 775, 777, 780, 805, 806, 807, 810, 813, 817, 820, 821, 822, 824, 826, 830, 836, 864], "termin": [555, 557, 839, 842, 843, 844], "partition": [556, 558, 564, 565, 568, 569, 570, 571, 572, 573, 835, 849], "task_group_context": [556, 557, 558, 559, 560, 564, 756, 837, 846], "imper": 556, "react": 556, "steal": [556, 569], "coarsen": 556, "nearli": [556, 558, 564, 816], "piec": [556, 557, 558, 564, 817], "inputiter": [557, 582, 583, 584, 590, 592, 593, 597, 603, 604, 605, 614, 618, 619, 620, 628, 632, 633, 634, 642, 645, 646, 647, 653, 654, 655, 661, 662, 663, 671, 674, 676, 677, 686, 689, 691, 692, 700, 703, 705, 706, 714, 717, 719, 720, 728, 731, 732, 733, 734, 807], "parallelforeachbodi": [557, 802], "containerbasedsequ": [557, 566, 802], "mybodi": 557, "item_t": 557, "parallel_do_feed": 557, "new_item": 557, "parallelforbodi": [558, 802, 807], "parallelforindex": [558, 802, 808], "parallelforfunc": [558, 802], "around": [558, 752, 765], "lesser": 558, "someth": [558, 564], "look": [558, 565, 767, 802, 836], "trace": 558, "effici": [558, 570, 783, 816, 863], "tend": 558, "algortihm": 559, "bar": [559, 836], "myfunctor": 559, "runfunctionsinparallel": 559, "strongli": [560, 561], "max_number_of_live_token": 560, "filter_chain": 560, "make_filt": [560, 561], "mode0": 560, "g0": 560, "mode1": 560, "g1": 560, "i3": 560, "mode2": 560, "g2": 560, "moden": 560, "gn": 560, "notifi": [560, 823], "fc": [560, 563, 759, 769, 805, 824], "dummi": [560, 563, 567, 817], "rootmeansquar": 560, "serial_in_ord": [560, 562], "compos": [561, 779], "inputtyp": [561, 748, 766, 805], "outputtyp": [561, 748, 805], "firstfilterbodi": [561, 805], "lastfilterbodi": [561, 805], "middlefilterbodi": [561, 805], "singlefilterbodi": [561, 805], "composit": [561, 563], "filter_input": 561, "filter_output": 561, "serial_out_of_ord": 562, "filterbodi": [563, 802], "requiremnt": 563, "parallelreducebodi": [564, 802], "parallelreducefunc": [564, 802], "parallelreducereduct": [564, 802], "commut": 564, "noncommut": 564, "temp": [564, 565], "parallelsum": 564, "occurr": 564, "parallelscanbodi": [565, 802], "parallelscanfunc": [565, 802], "parallelscancombin": [565, 802], "inher": 565, "reassoci": 565, "outperform": 565, "prescan": 565, "why": 565, "get_sum": 565, "is_final_scan": [565, 567], "reverse_join": [565, 813], "doparallelscan": 565, "crucial": 565, "somewhat": 565, "understand": 565, "analog": [565, 785], "randomaccessiter": [566, 731, 736], "valueswapp": 566, "swappabl": 566, "alg": [566, 603, 618, 632, 645, 661, 771], "moveassign": [566, 588, 650, 659], "scan_tag": 567, "phase": 567, "copyconstructib": [568, 569, 570, 571], "subdivis": [569, 816], "opportun": [569, 571, 843], "global_contol": [569, 571], "task_arena": [569, 571, 782, 832, 834, 837, 838, 839, 840, 842, 844, 845], "stolen": [569, 844], "balanc": [569, 571], "bring": 571, "overhead": [571, 755], "openmp": 571, "_left": 572, "_right": 572, "macro": [574, 578, 781, 835], "debug_featur": 575, "tbb_use_debug": 575, "_debug": 575, "slow": 575, "stderr": [575, 578], "abort": [575, 582], "breakpoint": 575, "assertion_failur": 575, "xe": 575, "vtune": 575, "amplifi": 575, "advisor": 575, "feature_macro": 576, "microsoft": [576, 785], "linux": [576, 785], "maco": 576, "gnu": 576, "libstdc": 576, "10000": [576, 842], "patch": 576, "gcc": 576, "dumpvers": 576, "40902": 576, "incl": 577, "version_inform": 578, "reveal": 578, "tbb_version_major": 578, "tbb_version_minor": 578, "tbb_version_str": 578, "tbb_interface_version_major": 578, "tbb_interface_version_minor": 578, "tbb_interface_vers": 578, "decim": 578, "xyyz": 578, "concurrent_vector": [579, 733, 734, 736, 737, 738, 739, 740, 742], "concurrent_queu": [579, 582, 584, 654, 655, 656, 657, 658, 660], "concurrent_bounded_queu": [579, 583, 584, 585, 586, 587, 589], "concurrent_priority_queu": [579, 646, 647, 648, 649, 652], "concurrent_hash_map": [579, 581, 591, 592, 593, 595, 598, 599, 600, 602], "concurrent_unordered_map": [579, 580, 675, 676, 677, 679, 680, 682, 683, 685, 686, 688, 689, 692, 700], "concurrent_unordered_multimap": [579, 580, 674, 686, 690, 691, 692, 693, 694, 696, 697, 699, 700, 702], "concurrent_unordered_set": [579, 580, 703, 706, 714, 718, 719, 720, 721, 722, 724, 725, 727, 728, 730], "concurrent_unordered_multiset": [579, 580, 704, 705, 706, 707, 708, 710, 711, 713, 714, 716, 717, 728], "concurrent_map": [579, 580, 604, 605, 607, 609, 610, 611, 613, 614, 616, 617, 618, 620, 628], "concurrent_multimap": [579, 580, 603, 614, 619, 620, 621, 623, 624, 625, 627, 628, 630, 631], "concurrent_set": [579, 580, 632, 634, 642, 662, 663, 664, 666, 667, 668, 670, 671, 673], "concurrent_multiset": [579, 580, 633, 634, 635, 637, 638, 639, 641, 642, 644, 661, 671], "tbb_hash_compar": [579, 590, 593, 761, 762], "node_handl": 580, "key_typ": [580, 590, 592, 595, 596, 597, 603, 604, 606, 608, 616, 618, 619, 622, 630, 632, 633, 636, 644, 661, 662, 665, 673, 674, 675, 676, 678, 681, 688, 689, 690, 691, 695, 702, 703, 704, 705, 709, 716, 717, 718, 719, 723, 730], "mapped_typ": [580, 590, 597, 603, 618, 674, 689], "allocator_typ": [580, 582, 583, 584, 588, 589, 590, 592, 593, 602, 603, 604, 605, 612, 616, 618, 619, 620, 626, 630, 632, 633, 634, 640, 644, 645, 646, 647, 652, 653, 654, 655, 659, 660, 661, 662, 663, 669, 673, 674, 676, 677, 684, 688, 689, 691, 692, 698, 702, 703, 705, 706, 712, 716, 717, 719, 720, 726, 730, 731, 733, 734, 742, 790, 851, 858], "nh": [580, 603, 614, 618, 628, 632, 642, 661, 671, 674, 686, 689, 700, 703, 714, 717, 728], "node_typ": [580, 603, 614, 616, 618, 628, 630, 632, 642, 644, 661, 671, 673, 674, 686, 688, 689, 700, 702, 703, 714, 716, 717, 728, 730], "unsafe_extract": [580, 603, 616, 618, 630, 632, 644, 661, 673, 674, 688, 689, 702, 703, 716, 717, 730], "allocator_trait": [580, 582, 583, 589, 590, 592, 602, 603, 604, 616, 618, 619, 630, 632, 633, 644, 646, 652, 653, 654, 660, 661, 662, 673, 674, 676, 688, 689, 691, 702, 703, 705, 716, 717, 719, 730, 731, 733, 742], "propagate_on_container_move_assign": [580, 583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733, 786, 788, 790], "propagate_on_container_swap": [580, 589, 602, 616, 630, 644, 652, 660, 673, 688, 702, 716, 730, 742], "hash": [581, 590, 592, 674, 676, 677, 682, 683, 684, 689, 691, 692, 696, 697, 698, 703, 705, 706, 710, 711, 712, 717, 719, 720, 724, 725, 726, 762, 819, 825], "hashcompar": [581, 590, 591, 593, 598, 599, 761, 802], "pop": [582, 645, 653], "cache_aligned_alloc": [582, 584, 645, 647, 653, 655, 731, 734, 784, 787, 851], "const_refer": [582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 818, 851, 858], "const_point": [582, 590, 603, 618, 632, 653, 661, 674, 689, 703, 717, 731, 858], "forwarditer": [582, 585, 590, 595, 603, 607, 618, 621, 632, 635, 653, 656, 661, 664, 674, 675, 680, 689, 690, 694, 703, 704, 708, 717, 718, 722], "get_alloc": [582, 583, 589, 590, 602, 603, 604, 614, 616, 618, 619, 628, 630, 632, 633, 642, 644, 645, 646, 652, 653, 654, 660, 661, 662, 671, 673, 674, 676, 686, 688, 689, 691, 700, 702, 703, 705, 714, 716, 717, 719, 728, 730, 731, 742], "try_push": [582, 588], "emplac": [582, 588, 590, 603, 618, 632, 645, 650, 653, 659, 661, 674, 689, 703, 717], "try_emplac": [582, 588], "try_pop": [582, 588, 645, 650, 651, 653, 659], "set_capac": [582, 588], "new_capac": [582, 588], "unsafe_begin": [582, 653, 674, 675, 689, 690, 703, 704, 717, 718], "unsafe_cbegin": [582, 653, 674, 675, 689, 690, 703, 704, 717, 718], "unsafe_end": [582, 653, 674, 675, 689, 690, 703, 704, 717, 718], "unsafe_cend": [582, 653, 674, 675, 689, 690, 703, 704, 717, 718], "eras": [582, 590, 645, 653, 731], "impos": [582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 804], "stricter": [582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 804], "unsaf": [582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 756, 837, 851, 859], "reachabl": [582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731, 786, 788, 790, 861], "lh": [582, 586, 587, 590, 598, 599, 603, 609, 610, 611, 617, 618, 623, 624, 625, 631, 632, 637, 638, 639, 645, 648, 649, 653, 657, 658, 661, 666, 667, 668, 674, 682, 683, 689, 696, 697, 703, 710, 711, 717, 724, 725, 731, 737, 738, 739], "unbound": [583, 645, 653, 747, 762], "select_on_container_copy_construct": [583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733], "propagate_on_container_copy_assign": [583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733], "iterator_value_t": [584, 634, 647, 655, 663, 706, 720, 734], "resolut": [584, 593, 595, 596, 597, 605, 608, 614, 616, 620, 622, 628, 630, 634, 636, 644, 647, 655, 663, 665, 673, 677, 681, 686, 688, 692, 695, 700, 702, 706, 709, 716, 720, 723, 730, 732, 733, 734, 853, 861], "cq1": [584, 655], "cq2": [584, 655], "copyinsert": [588, 597, 614, 628, 642, 650, 659, 671, 686, 728, 732], "moveinsert": [588, 597, 614, 628, 642, 650, 659, 671, 686, 728, 732], "emplaceconstruct": [588, 597, 606, 614, 628, 642, 650, 659, 671, 678, 686, 728, 732], "wake": 588, "user_abort": 588, "unord": [590, 674, 689, 703, 717, 835], "erasur": [590, 601, 603, 618, 632, 661, 674, 689, 703, 717], "tbb_alloc": [590, 593, 603, 605, 618, 620, 632, 634, 661, 663, 674, 677, 689, 692, 703, 706, 717, 720, 784, 788], "hash_compare_typ": [590, 592, 595, 596, 597], "range_typ": [590, 600, 603, 613, 618, 627, 632, 641, 661, 670, 674, 685, 689, 699, 703, 713, 717, 727, 731, 740, 851, 854], "containerrang": [590, 600, 613, 627, 641, 670, 674, 685, 689, 699, 703, 713, 717, 727, 731, 740, 802, 854], "const_range_typ": [590, 600, 603, 613, 618, 627, 632, 641, 661, 670, 674, 685, 689, 699, 703, 713, 717, 727, 731, 740, 851, 854], "const_accessor": [590, 596, 597], "rehash": [590, 674, 689, 703, 717], "sz": 590, "bucket_count": [590, 674, 676, 689, 691, 703, 705, 717, 719], "max_siz": [590, 603, 618, 632, 661, 674, 689, 703, 717, 731, 742, 786], "item_accessor": [590, 597], "cbegin": [590, 603, 618, 632, 661, 674, 689, 703, 717, 731], "cend": [590, 603, 618, 632, 661, 674, 689, 703, 717, 731], "equal_rang": [590, 603, 618, 632, 661, 674, 689, 703, 717], "prealloc": 592, "iterator_key_t": [593, 605, 620, 677, 692], "iterator_alloc_value_t": [593, 605, 620, 677, 692], "iterator_mapped_t": [593, 605, 620, 677, 692], "first_typ": [593, 605, 620, 677, 692], "second_typ": [593, 605, 620, 677, 692], "add_const_t": [593, 605, 620, 677, 692], "chmap1": 593, "chmap2": 593, "is_transpar": [595, 596, 597, 608, 616, 622, 630, 636, 644, 665, 673, 674, 689, 703, 717], "defaultconstruct": [597, 732, 745, 754, 759, 761, 763, 766, 769, 780], "is_construct": [597, 614, 628, 686, 700], "wherea": [600, 613, 627, 641, 670, 685, 699, 713, 727, 740, 854], "pend": [601, 615, 629, 643, 651, 672, 687, 701, 715, 729], "key_compar": [603, 604, 608, 612, 616, 617, 618, 619, 622, 626, 630, 631, 632, 633, 636, 640, 644, 661, 662, 665, 669, 673], "value_compar": [603, 612, 618, 626, 632, 640, 661, 669], "emplace_hint": [603, 614, 618, 628, 632, 642, 661, 671, 674, 686, 689, 700, 703, 714, 717, 728], "srccompar": [603, 614, 618, 628, 632, 642, 661, 671], "unsafe_eras": [603, 616, 618, 630, 632, 644, 661, 673, 674, 688, 689, 702, 703, 716, 717, 730], "key_comp": [603, 618, 632, 661], "value_comp": [603, 618, 632, 661], "lexicograph": [603, 618, 632, 661, 731], "cm1": [605, 620], "cm2": [605, 620], "3f": [605, 620], "piecewise_construct": [606, 678], "forward_as_tupl": [606, 678], "took": [614, 671, 686, 728], "is_convert": [616, 630, 644, 673, 688, 702, 716, 730], "concurrent_mutlimap": 618, "cs1": [634, 663], "cs2": [634, 663], "init_capac": [645, 646], "cpq1": 647, "cpq2": 647, "unsafe_s": [653, 660], "keyequ": [674, 677, 682, 683, 689, 692, 696, 697, 703, 706, 710, 711, 717, 720, 724, 725], "hasher": [674, 676, 681, 684, 688, 689, 691, 695, 698, 702, 703, 705, 709, 712, 716, 717, 719, 723, 726, 730], "key_equ": [674, 676, 684, 688, 689, 691, 698, 702, 703, 705, 712, 716, 717, 719, 726, 730], "local_iter": [674, 675, 689, 690, 703, 704, 717, 718], "const_local_iter": [674, 675, 689, 690, 703, 704, 717, 718], "srchash": [674, 686, 689, 700, 703, 714, 717, 728], "srckeyequ": [674, 686, 689, 700, 703, 714, 717, 728], "unsafe_bucket_count": [674, 675, 679, 689, 690, 693, 703, 704, 707, 717, 718, 721], "unsafe_max_bucket_bount": [674, 689, 703, 717], "unsafe_bucket_s": [674, 675, 689, 690, 703, 704, 717, 718], "unsafe_bucket": [674, 675, 689, 690, 703, 704, 717, 718], "load_factor": [674, 679, 689, 693, 703, 707, 717, 721], "max_load_factor": [674, 679, 689, 693, 703, 707, 717, 721], "ml": [674, 679, 689, 693, 703, 707, 717, 721], "hash_funct": [674, 689, 703, 717], "key_eq": [674, 689, 703, 717], "binarypred": [674, 689, 703, 717], "transparent_key_equ": [674, 681, 688, 689, 695, 702, 703, 709, 716, 717, 723, 730], "unsafe_max_bucket_count": [675, 690, 704, 718], "is_always_equ": [676, 688, 691, 702, 705, 716, 719, 730, 733, 742, 786, 788, 790], "is_nothrow_move_assign": [676, 691, 705, 719], "map_size_typ": [677, 692], "customhash": [677, 692, 706, 720], "exceed": [679, 693, 707, 721, 785], "is_nothrow_swapp": [688, 702, 716, 730], "set_size_typ": [706, 720], "grown": 731, "reverse_iter": [731, 736], "const_reverse_iter": [731, 736], "growth": [731, 735], "grow_bi": 731, "grow_to_at_least": 731, "emplace_back": 731, "rbegin": 731, "crbegin": 731, "rend": 731, "crend": 731, "shrink_to_fit": 731, "grow": 731, "nonetheless": 731, "unalloc": [731, 735], "unbroken": 731, "arr": 734, "cv1": 734, "cv2": 734, "length_error": 742, "reorgan": 742, "task_arena_attach_tag": 743, "arena": [743, 835, 843, 844, 845], "flow_graph": [744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780], "behalf": 744, "reset_flag": 744, "graph_nod": [744, 745, 746, 747, 748, 750, 754, 758, 759, 761, 763, 766, 769, 771, 772, 777, 778, 780], "sender": [744, 745, 746, 747, 748, 749, 750, 754, 758, 759, 761, 763, 764, 766, 769, 771, 772, 774, 777, 778, 780], "successor": [744, 745, 746, 747, 752, 753, 754, 758, 759, 761, 762, 763, 764, 766, 769, 771, 772, 774, 777, 778, 780, 823], "continue_nod": [744, 751, 752, 753, 755, 763, 767, 821], "function_nod": [744, 751, 753, 755, 765, 767, 769, 770, 777, 780, 822], "input_nod": [744, 751, 753, 769, 777, 824], "multifunction_nod": [744, 751, 753, 755, 767, 768, 770, 826], "async_nod": [744, 751, 755, 767, 770, 820, 823], "copy_bodi": [744, 745, 750, 754, 759, 766], "overwrite_nod": [744, 753, 780], "write_once_nod": [744, 753, 769], "buffer_nod": [744, 753, 772, 780], "queue_nod": [744, 753], "priority_queue_nod": [744, 753], "sequencer_nod": [744, 753, 771, 827], "reusabl": 744, "limiter_nod": [744, 753], "broadcast_nod": [744, 752, 753, 765, 767, 778], "join_nod": [744, 753, 758, 760, 765, 769, 780, 825], "split_nod": [744, 753, 768], "indexer_nod": [744, 753, 760, 768, 779], "composite_nod": [744, 760, 768], "input_port": [744, 748, 758, 761, 765, 780], "output_port": [744, 748, 766, 778], "make_edg": [744, 750, 752, 755, 765, 767, 769, 777, 780], "remove_edg": [744, 750], "continue_msg": [744, 750, 752, 754, 763, 767, 821], "tagged_msg": [744, 758], "implemet": 745, "node_priority_t": [745, 750, 754, 766, 767], "no_prior": [745, 750, 754, 766, 767], "gateway_typ": [745, 820, 823], "gatewai": [745, 820], "try_put": [745, 746, 747, 750, 752, 754, 755, 763, 765, 766, 767, 769, 771, 772, 777, 778, 780, 823, 826], "try_get": [745, 746, 747, 750, 753, 754, 758, 759, 761, 762, 763, 769, 771, 772, 777, 780], "asyncnodebodi": [745, 802], "incom": [745, 746, 750, 754, 762, 765, 766, 778, 780], "settabl": [745, 754, 766], "held": [745, 750, 754, 759, 766, 769, 779, 780, 792, 794, 797, 800, 801, 829], "gatewaytyp": [745, 802, 820], "immedi": [746, 754, 824, 843, 845, 846], "unabl": [746, 762], "tri": [747, 753, 762, 763, 771, 772, 777, 792, 793, 797], "inputtupl": 748, "outputtupl": [748, 761, 825], "input_ports_typ": [748, 758, 761, 764, 774], "output_ports_typ": [748, 764, 766, 774, 778, 826], "set_external_port": 748, "input_ports_tupl": 748, "output_ports_tupl": 748, "border": 748, "mandatori": 748, "nth": 748, "number_of_predecessor": 750, "continuenodebodi": [750, 802], "continue_output_t": 750, "invoke_result_t": 750, "head": [752, 762], "cstdio": [752, 765], "my_nam": 752, "printf": [752, 765, 769, 777, 836], "c_str": 752, "wait_for_al": [752, 755, 756, 765, 767, 769, 777, 780, 840], "forwarding_and_buff": 753, "fate": 753, "resend": 753, "tag_match": [753, 761, 762], "fuction_nod": 754, "functionnodebodi": [754, 802], "decay_t": [754, 759, 761, 777], "input_t": [754, 759, 761, 777], "output_t": [754, 761], "function_node_polici": 755, "queueing_lightweight": 755, "rejecting_lightweight": 755, "rf_reset_protocol": [756, 775], "cancel": [756, 841, 846, 847], "is_cancel": 756, "exception_thrown": 756, "t0": 758, "implementation_defin": 758, "distinct": [758, 761, 786, 851, 856], "arriv": 758, "inputnodebodi": [759, 802], "toggl": 759, "inact": [759, 844], "nodetyp": [760, 768], "tag_valu": [761, 762], "joinpolici": 761, "khash": [761, 762], "key_match": [761, 762], "b0": 761, "b1": 761, "b2": 761, "b3": 761, "b4": 761, "b5": 761, "b6": 761, "b7": 761, "b8": 761, "b9": 761, "joinnodefunctionobject": [761, 802], "bn": 761, "join_node_polici": 762, "decrementtyp": 763, "embed": 763, "multioutputnod": [764, 774], "multiinputnod": [764, 774], "enter": [765, 843, 844], "squarer": 765, "cuber": 765, "summer": 765, "lock": [765, 792, 793, 794, 795, 796, 797, 798, 800, 801, 828, 829], "my_sum": 765, "multifunctionnodebodi": [766, 802], "node_prior": 767, "f1": 767, "f3": 767, "f2": 767, "fe": 767, "cmath": 767, "tick_count": [767, 860], "global_control": [767, 837, 842], "spin_for": 767, "delta_second": 767, "unit_of_tim": 767, "max_thread": 767, "max_allowed_parallel": [767, 839], "heavi": 767, "elaps": 767, "is_valid": [769, 780], "data_limit": 769, "data_set_prepar": 769, "overwrite_storag": 769, "data_gener": 769, "data_from_storag": 769, "concurrency_limit": 770, "enforc": [771, 828, 839], "fifo": 772, "taken": [772, 800, 801, 836], "rf_reset_bodi": 775, "rf_clear_edg": 775, "reiniti": [775, 841], "duplic": 777, "msg": [777, 780], "writer": [777, 797, 799, 801, 828, 829], "reciev": 777, "tupletyp": 778, "tagtyp": 779, "cast_to": 779, "is_a": 779, "static_result_computer_n": 780, "write_once_n": 780, "buffer_n": 780, "join_n": 780, "consumer_n": 780, "precomput": 780, "precomputed_result": 780, "dynamic_data": 780, "underscore_styl": 781, "pascalcas": 781, "__tbb": 781, "info_namespac": 782, "numa_node_id": [782, 843], "core_type_id": [782, 843], "numa_nod": [782, 843], "core_typ": [782, 843], "default_concurr": 782, "numa": [782, 843], "pars": 782, "intro": 783, "newer": 783, "multithread": 783, "memory_alloc": [784, 785, 786, 787, 788, 789, 790], "scalable_alloc": [784, 785, 789], "pmr": [784, 787, 789], "polymorphic_alloc": [784, 789], "mem": 784, "poli": 784, "memory_resourc": [784, 787, 789], "cache_aligned_resourc": 784, "scalable_memory_resourc": 784, "scalable_alloc_c_interfac": 785, "scalable_malloc": 785, "scalable_fre": [785, 789], "ptr": 785, "scalable_calloc": 785, "nobj": 785, "scalable_realloc": 785, "_msize": 785, "malloc_s": 785, "malloc_usable_s": 785, "scalable_ms": 785, "posix_memalign": 785, "scalable_posix_memalign": 785, "memptr": 785, "scalable_aligned_malloc": [785, 789], "scalable_aligned_fre": 785, "scalable_aligned_realloc": 785, "scalable_allocation_": 785, "tbbmalloc_ok": 785, "tbbmalloc_invalid_param": 785, "tbbmalloc_unsupport": 785, "tbbmalloc_no_memori": 785, "tbbmalloc_no_effect": 785, "scalableallocationresult": 785, "huge": 785, "tbbmalloc_use_huge_pag": 785, "forcefulli": 785, "clean": [785, 844], "tbbmalloc_set_soft_heap_limit": 785, "tbbmalloc_set_huge_size_threshold": 785, "allocationmodeparam": 785, "scalable_allocation_mod": 785, "intptr_t": 785, "tbbmalloc_clean_all_buff": 785, "tbbmalloc_clean_thread_buff": 785, "scalableallocationcmd": 785, "scalable_allocation_command": 785, "cmd": 785, "scalable_x": 785, "posix": 785, "succeed": [785, 792, 797], "tell": 785, "tbb_malloc_use_huge_pag": 785, "ask": 785, "administr": 785, "urg": 785, "bigger": 785, "tbb_malloc_set_huge_size_threshold": 785, "long_max": 785, "care": 785, "boundari": [786, 787], "hurt": 786, "net": 786, "traffic": 786, "inappropri": 786, "true_typ": [786, 788, 790], "upstream_resourc": 787, "do_alloc": 787, "do_dealloc": 787, "do_is_equ": 787, "get_default_resourc": 787, "beforehand": 787, "upstream": [787, 864], "revert": 790, "malloc_typ": 790, "race": 791, "rw_mutex": [791, 829], "spin_mutex": [791, 798, 828], "spin_rw_mutex": [791, 799, 829], "speculative_spin_mutex": [791, 828], "speculative_spin_rw_mutex": [791, 829], "queuing_mutex": [791, 828], "queuing_rw_mutex": [791, 829], "null_mutex": [791, 828], "null_rw_mutex": [791, 829], "adapt": [792, 797], "spin": [792, 797, 798, 800, 801], "fair": [792, 795, 796, 798, 799, 800, 828, 829, 864], "scoped_lock": [792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 828, 829], "try_lock": [792, 793, 794, 797, 800, 801], "unlock": [792, 793, 794, 795, 796, 797, 798, 799, 800, 801], "is_rw_mutex": [792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 828, 829], "is_recursive_mutex": [792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 828, 829], "is_fair_mutex": [792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 828, 829], "busi": [792, 797], "mutex": [793, 794, 795, 796, 797, 798, 799, 800, 801, 831, 833], "syntact": [793, 794, 802, 836], "readerwritermutex": [794, 796, 797, 799, 801, 802], "sharedmutex": [794, 797, 801], "lock_shar": [794, 797, 801], "try_lock_shar": [794, 797, 801], "unlock_shar": [794, 797, 801], "unfair": [797, 801], "reader": [797, 799, 801, 828, 829], "tsx": [798, 799], "contend": [798, 799], "specul": [798, 799], "conflict": [798, 799], "wors": [798, 799], "backoff": 801, "named_requir": 802, "chapter": 802, "cpprefer": 802, "com": 802, "site": 802, "sortabl": 802, "drawback": 802, "releg": 802, "concis": 802, "past": [802, 804], "deal": 802, "suspendfunc": [802, 840], "req": [803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830], "blocked_range_valu": 803, "container_based_sequ": 804, "filter_bodi": 805, "parallel_for_bodi": 806, "parallel_for_each_bodi": 807, "itemtyp": 807, "spawn": [807, 843, 844], "volatil": 807, "parallel_for_func": 808, "parallel_for_index": 809, "quotient": 809, "_note": 809, "parallel_reduce_bodi": [810, 811], "parallel_determinstic_reduc": [810, 811, 812], "parallel_reduce_reduct": 812, "parallel_scan_combin": 814, "parallel_scan_func": 815, "evenli": 816, "yield": 816, "biggest": 816, "indivis": 816, "fork": 817, "container_rang": 818, "cr": 818, "hash_compar": 819, "keytyp": 819, "returntyp": 819, "async_node_bodi": 820, "enclos": [820, 836], "continue_node_bodi": 821, "function_node_bodi": 822, "reserve_wait": 823, "release_wait": 823, "input_node_bodi": 824, "join_node_function_object": 825, "multifunction_node_bodi": 826, "outputportstyp": 826, "spartan": 828, "rememb": [828, 844], "mylock": 828, "mymutex": 828, "try_acquir": [828, 829], "copyabl": 828, "movabl": 828, "reentrant": [828, 829], "opposit": [828, 829], "rational": 828, "rwm": 829, "upgrade_to_writ": 829, "downgrade_to_read": 829, "superset": 829, "reacquir": 829, "suspend_func": 830, "suspend_point": [830, 840], "resum": [830, 837], "enumerable_thread_specif": [835, 849, 850, 852, 853, 854, 858], "flattened2d": [835, 849], "notational_convent": 836, "ital": 836, "titl": 836, "filenam": 836, "basenam": 836, "monospac": 836, "directori": 836, "alt": 836, "okcreateobj": 836, "hello": 836, "world": 836, "bold": 836, "emphas": 836, "0xf": 836, "bracket": 836, "fa": 836, "fac": 836, "brace": 836, "vertic": 836, "xk": 836, "xw": 836, "xp": 836, "metacharact": 836, "quotat": 836, "negat": 836, "ellipsi": 836, "seem": 836, "client": [836, 844], "foobas": 836, "foo_v3": 836, "internal_stuff": 836, "depart": 836, "distract": 836, "clutter": 836, "drive": 837, "quanta": 837, "worker": [837, 839, 842, 843, 844, 845], "preemptiv": 837, "unrel": 837, "task_scheduler_handl": [837, 838], "task_group": [837, 841, 843, 847], "task_group_statu": [837, 846], "task_handl": [837, 843, 845, 846], "this_task_arena": [837, 844], "task_scheduler_observ": [837, 843], "thread_stack_s": 839, "terminate_on_except": 839, "active_valu": 839, "parameter_valu": 839, "disjunct": 839, "rethrow": 839, "resumable_task": 840, "suspend": [840, 851], "async": 840, "async_act": 840, "forest": 841, "isol": [841, 845], "subtre": 841, "kind_t": 841, "traits_typ": 841, "fp_set": 841, "default_trait": 841, "relation_with_par": 841, "uintptr_t": 841, "cancel_group_execut": 841, "is_group_execution_cancel": 841, "capture_fp_set": 841, "child": 841, "relation_to_par": 841, "extant": [841, 844], "uncancel": 841, "subordin": 841, "nothrow_t": 842, "prematur": 842, "deactiv": 842, "unsafe_wait": 842, "cerr": 842, "not_initi": [843, 845], "numa_node_": 843, "max_concurrency_": 843, "set_numa_id": 843, "set_max_concurr": 843, "maximal_concurr": 843, "set_core_typ": 843, "set_max_threads_per_cor": 843, "threads_numb": 843, "numa_id": 843, "max_concurr": [843, 845], "max_threads_per_cor": 843, "reserved_for_mast": 843, "a_prior": 843, "a_constraint": 843, "is_act": 843, "lazili": [843, 849, 851], "pin": [843, 844], "eventu": 843, "ever": 843, "interest": 844, "is_observ": 844, "on_scheduler_entri": 844, "is_work": 844, "on_scheduler_exit": 844, "notif": 844, "whenev": 844, "owner": 844, "pinning_observ": 844, "affinity_mask_t": 844, "m_mask": 844, "hw": 844, "set_thread_affin": 844, "current_thread_index": [844, 845], "restore_thread_affin": 844, "outer": [845, 858], "reference_wrapp": 845, "defer": [846, 848], "run_and_wait": 846, "is_current_task_group_cancel": 846, "not_complet": 847, "nullptr_t": 848, "thread_local_storag": 849, "tl": [849, 850, 851, 853, 858], "flatten2d": [849, 858], "assist": 849, "idiom": 849, "binaryfunc": [850, 851, 852], "combine_each": [850, 851, 852], "intact": [850, 853], "ets_key_usage_typ": [851, 853], "ets_key_per_inst": 851, "ets_no_kei": 851, "ets_suspend_awar": 851, "ets_key_typ": 851, "exemplar": [851, 853, 855], "cachetyp": [851, 853], "freshli": 851, "this_thread": 851, "life": 851, "fairli": 851, "viewabl": 858, "thread_safeti": 859, "departur": 859, "liber": 859, "wall": [860, 861], "clock": [860, 861], "interval_t": 860, "durat": 861, "nonmemb": 861, "behind": 863, "matur": 863, "attain": 863, "divers": 863, "scientif": 863, "artifici": 863, "intellig": 863, "systol": 863, "middlewar": 863, "contributor": 863, "ecosystem": 863, "seek": 863, "conform": 863, "recompil": 863, "rfc": 863, "2119": 863, "creativ": 864, "mit": 864, "decad": 864, "histori": 864, "industri": 864, "academia": 864, "interoper": 864, "incorpor": 864, "prohibit": 864, "disclos": 864, "reproduc": 864, "oblig": 864, "intellectu": 864, "logo": 864, "trademark": 864, "corpor": 864, "countri": 864, "brand": 864}, "objects": {"": [[160, 0, 1, "c.DNNL_ARG_ATTR_SCALES", "DNNL_ARG_ATTR_SCALES"], [160, 0, 1, "c.DNNL_ARG_ATTR_ZERO_POINTS", "DNNL_ARG_ATTR_ZERO_POINTS"], [160, 0, 1, "c.DNNL_ARG_BIAS", "DNNL_ARG_BIAS"], [160, 0, 1, "c.DNNL_ARG_DIFF_BIAS", "DNNL_ARG_DIFF_BIAS"], [160, 0, 1, "c.DNNL_ARG_DIFF_DST", "DNNL_ARG_DIFF_DST"], [160, 0, 1, "c.DNNL_ARG_DIFF_DST_0", "DNNL_ARG_DIFF_DST_0"], [160, 0, 1, "c.DNNL_ARG_DIFF_DST_1", "DNNL_ARG_DIFF_DST_1"], [160, 0, 1, "c.DNNL_ARG_DIFF_DST_2", "DNNL_ARG_DIFF_DST_2"], [160, 0, 1, "c.DNNL_ARG_DIFF_DST_ITER", "DNNL_ARG_DIFF_DST_ITER"], [160, 0, 1, "c.DNNL_ARG_DIFF_DST_ITER_C", "DNNL_ARG_DIFF_DST_ITER_C"], [160, 0, 1, "c.DNNL_ARG_DIFF_DST_LAYER", "DNNL_ARG_DIFF_DST_LAYER"], [160, 0, 1, "c.DNNL_ARG_DIFF_SCALE", "DNNL_ARG_DIFF_SCALE"], [160, 0, 1, "c.DNNL_ARG_DIFF_SHIFT", "DNNL_ARG_DIFF_SHIFT"], [160, 0, 1, "c.DNNL_ARG_DIFF_SRC", "DNNL_ARG_DIFF_SRC"], [160, 0, 1, "c.DNNL_ARG_DIFF_SRC_0", "DNNL_ARG_DIFF_SRC_0"], [160, 0, 1, "c.DNNL_ARG_DIFF_SRC_1", "DNNL_ARG_DIFF_SRC_1"], [160, 0, 1, "c.DNNL_ARG_DIFF_SRC_2", "DNNL_ARG_DIFF_SRC_2"], [160, 0, 1, "c.DNNL_ARG_DIFF_SRC_ITER", "DNNL_ARG_DIFF_SRC_ITER"], [160, 0, 1, "c.DNNL_ARG_DIFF_SRC_ITER_C", "DNNL_ARG_DIFF_SRC_ITER_C"], [160, 0, 1, "c.DNNL_ARG_DIFF_SRC_LAYER", "DNNL_ARG_DIFF_SRC_LAYER"], [160, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS", "DNNL_ARG_DIFF_WEIGHTS"], [160, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_0", "DNNL_ARG_DIFF_WEIGHTS_0"], [160, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_1", "DNNL_ARG_DIFF_WEIGHTS_1"], [160, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_ITER", "DNNL_ARG_DIFF_WEIGHTS_ITER"], [160, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_LAYER", "DNNL_ARG_DIFF_WEIGHTS_LAYER"], [160, 0, 1, "c.DNNL_ARG_DST", "DNNL_ARG_DST"], [160, 0, 1, "c.DNNL_ARG_DST_0", "DNNL_ARG_DST_0"], [160, 0, 1, "c.DNNL_ARG_DST_1", "DNNL_ARG_DST_1"], [160, 0, 1, "c.DNNL_ARG_DST_2", "DNNL_ARG_DST_2"], [160, 0, 1, "c.DNNL_ARG_DST_ITER", "DNNL_ARG_DST_ITER"], [160, 0, 1, "c.DNNL_ARG_DST_ITER_C", "DNNL_ARG_DST_ITER_C"], [160, 0, 1, "c.DNNL_ARG_DST_LAYER", "DNNL_ARG_DST_LAYER"], [160, 0, 1, "c.DNNL_ARG_FROM", "DNNL_ARG_FROM"], [160, 0, 1, "c.DNNL_ARG_MEAN", "DNNL_ARG_MEAN"], [160, 0, 1, "c.DNNL_ARG_MULTIPLE_DST", "DNNL_ARG_MULTIPLE_DST"], [160, 0, 1, "c.DNNL_ARG_MULTIPLE_SRC", "DNNL_ARG_MULTIPLE_SRC"], [160, 0, 1, "c.DNNL_ARG_SCALE", "DNNL_ARG_SCALE"], [160, 0, 1, "c.DNNL_ARG_SCRATCHPAD", "DNNL_ARG_SCRATCHPAD"], [160, 0, 1, "c.DNNL_ARG_SHIFT", "DNNL_ARG_SHIFT"], [160, 0, 1, "c.DNNL_ARG_SRC", "DNNL_ARG_SRC"], [160, 0, 1, "c.DNNL_ARG_SRC_0", "DNNL_ARG_SRC_0"], [160, 0, 1, "c.DNNL_ARG_SRC_1", "DNNL_ARG_SRC_1"], [160, 0, 1, "c.DNNL_ARG_SRC_2", "DNNL_ARG_SRC_2"], [160, 0, 1, "c.DNNL_ARG_SRC_ITER", "DNNL_ARG_SRC_ITER"], [160, 0, 1, "c.DNNL_ARG_SRC_ITER_C", "DNNL_ARG_SRC_ITER_C"], [160, 0, 1, "c.DNNL_ARG_SRC_LAYER", "DNNL_ARG_SRC_LAYER"], [160, 0, 1, "c.DNNL_ARG_TO", "DNNL_ARG_TO"], [160, 0, 1, "c.DNNL_ARG_VARIANCE", "DNNL_ARG_VARIANCE"], [160, 0, 1, "c.DNNL_ARG_WEIGHTS", "DNNL_ARG_WEIGHTS"], [160, 0, 1, "c.DNNL_ARG_WEIGHTS_0", "DNNL_ARG_WEIGHTS_0"], [160, 0, 1, "c.DNNL_ARG_WEIGHTS_1", "DNNL_ARG_WEIGHTS_1"], [160, 0, 1, "c.DNNL_ARG_WEIGHTS_ITER", "DNNL_ARG_WEIGHTS_ITER"], [160, 0, 1, "c.DNNL_ARG_WEIGHTS_LAYER", "DNNL_ARG_WEIGHTS_LAYER"], [160, 0, 1, "c.DNNL_ARG_WORKSPACE", "DNNL_ARG_WORKSPACE"], [64, 0, 1, "c.DNNL_GRAPH_UNKNOWN_DIM", "DNNL_GRAPH_UNKNOWN_DIM"], [64, 0, 1, "c.DNNL_GRAPH_UNKNOWN_NDIMS", "DNNL_GRAPH_UNKNOWN_NDIMS"], [61, 0, 1, "c.DNNL_MEMORY_ALLOCATE", "DNNL_MEMORY_ALLOCATE"], [61, 0, 1, "c.DNNL_MEMORY_NONE", "DNNL_MEMORY_NONE"], [160, 0, 1, "c.DNNL_RUNTIME_DIM_VAL", "DNNL_RUNTIME_DIM_VAL"], [160, 0, 1, "c.DNNL_RUNTIME_F32_VAL", "DNNL_RUNTIME_F32_VAL"], [160, 0, 1, "c.DNNL_RUNTIME_S32_VAL", "DNNL_RUNTIME_S32_VAL"], [160, 0, 1, "c.DNNL_RUNTIME_SIZE_VAL", "DNNL_RUNTIME_SIZE_VAL"], [785, 0, 1, "c.TBBMALLOC_CLEAN_ALL_BUFFERS", "TBBMALLOC_CLEAN_ALL_BUFFERS"], [785, 0, 1, "c.TBBMALLOC_CLEAN_THREAD_BUFFERS", "TBBMALLOC_CLEAN_THREAD_BUFFERS"], [785, 0, 1, "c.TBBMALLOC_SET_HUGE_SIZE_THRESHOLD", "TBBMALLOC_SET_HUGE_SIZE_THRESHOLD"], [785, 0, 1, "c.TBBMALLOC_SET_SOFT_HEAP_LIMIT", "TBBMALLOC_SET_SOFT_HEAP_LIMIT"], [785, 0, 1, "c.TBBMALLOC_USE_HUGE_PAGES", "TBBMALLOC_USE_HUGE_PAGES"], [847, 0, 1, "c.canceled", "canceled"], [847, 0, 1, "c.complete", "complete"], [847, 0, 1, "c.not_complete", "not_complete"], [785, 1, 1, "c.scalable_allocation_command", "scalable_allocation_command"], [820, 3, 1, "_CPPv4N13AsyncNodeBody4Body4BodyERK4Body", "AsyncNodeBody::Body::Body"], [820, 3, 1, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType", "AsyncNodeBody::Body::operator()"], [820, 4, 1, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType", "AsyncNodeBody::Body::operator()::gateway"], [820, 4, 1, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType", "AsyncNodeBody::Body::operator()::v"], [820, 3, 1, "_CPPv4N13AsyncNodeBody4BodyD0Ev", "AsyncNodeBody::Body::~Body"], [806, 3, 1, "_CPPv4N4Body4BodyERK4Body", "Body::Body"], [813, 3, 1, "_CPPv4N4Body4BodyER4Body5split", "Body::Body"], [813, 4, 1, "_CPPv4N4Body4BodyER4Body5split", "Body::Body::b"], [813, 3, 1, "_CPPv4N4Body6assignER4Body", "Body::assign"], [813, 4, 1, "_CPPv4N4Body6assignER4Body", "Body::assign::b"], [806, 3, 1, "_CPPv4NK4BodyclER5Range", "Body::operator()"], [807, 3, 1, "_CPPv4NK4BodyclE8ItemType", "Body::operator()"], [807, 3, 1, "_CPPv4NK4BodyclE8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()"], [813, 3, 1, "_CPPv4N4BodyclERK5Range12pre_scan_tag", "Body::operator()"], [813, 3, 1, "_CPPv4N4BodyclERK5Range14final_scan_tag", "Body::operator()"], [807, 4, 1, "_CPPv4NK4BodyclE8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()::feeder"], [807, 4, 1, "_CPPv4NK4BodyclE8ItemType", "Body::operator()::item"], [807, 4, 1, "_CPPv4NK4BodyclE8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()::item"], [813, 4, 1, "_CPPv4N4BodyclERK5Range12pre_scan_tag", "Body::operator()::r"], [813, 4, 1, "_CPPv4N4BodyclERK5Range14final_scan_tag", "Body::operator()::r"], [806, 4, 1, "_CPPv4NK4BodyclER5Range", "Body::operator()::range"], [813, 3, 1, "_CPPv4N4Body12reverse_joinER4Body", "Body::reverse_join"], [813, 4, 1, "_CPPv4N4Body12reverse_joinER4Body", "Body::reverse_join::b"], [806, 3, 1, "_CPPv4N4BodyD0Ev", "Body::~Body"], [818, 3, 1, "_CPPv4N2CR5beginEv", "CR::begin"], [818, 5, 1, "_CPPv4N2CR15const_referenceE", "CR::const_reference"], [818, 5, 1, "_CPPv4N2CR15difference_typeE", "CR::difference_type"], [818, 3, 1, "_CPPv4N2CR3endEv", "CR::end"], [818, 3, 1, "_CPPv4NK2CR9grainsizeEv", "CR::grainsize"], [818, 5, 1, "_CPPv4N2CR8iteratorE", "CR::iterator"], [818, 5, 1, "_CPPv4N2CR9referenceE", "CR::reference"], [818, 5, 1, "_CPPv4N2CR9size_typeE", "CR::size_type"], [818, 5, 1, "_CPPv4N2CR10value_typeE", "CR::value_type"], [814, 3, 1, "_CPPv4NK7CombineclERK5ValueRK5Value", "Combine::operator()"], [814, 4, 1, "_CPPv4NK7CombineclERK5ValueRK5Value", "Combine::operator()::left"], [814, 4, 1, "_CPPv4NK7CombineclERK5ValueRK5Value", "Combine::operator()::right"], [821, 3, 1, "_CPPv4N16ContinueNodeBody4Body4BodyERK4Body", "ContinueNodeBody::Body::Body"], [821, 3, 1, "_CPPv4N16ContinueNodeBody4BodyclERK12continue_msg", "ContinueNodeBody::Body::operator()"], [821, 4, 1, "_CPPv4N16ContinueNodeBody4BodyclERK12continue_msg", "ContinueNodeBody::Body::operator()::v"], [821, 3, 1, "_CPPv4N16ContinueNodeBody4BodyD0Ev", "ContinueNodeBody::Body::~Body"], [808, 3, 1, "_CPPv4NK1FclE5Index", "F::operator()"], [808, 4, 1, "_CPPv4NK1FclE5Index", "F::operator()::index"], [805, 3, 1, "_CPPv4NK15FirstFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "FirstFilterBody::Body::operator()"], [805, 4, 1, "_CPPv4NK15FirstFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "FirstFilterBody::Body::operator()::fc"], [825, 3, 1, "_CPPv4N4Func4FuncERK4Func", "Func::Func"], [811, 3, 1, "_CPPv4NK4FuncclERK5RangeRK5Value", "Func::operator()"], [825, 3, 1, "_CPPv4N4FuncclERK5Input", "Func::operator()"], [811, 4, 1, "_CPPv4NK4FuncclERK5RangeRK5Value", "Func::operator()::range"], [825, 4, 1, "_CPPv4N4FuncclERK5Input", "Func::operator()::v"], [811, 4, 1, "_CPPv4NK4FuncclERK5RangeRK5Value", "Func::operator()::x"], [825, 3, 1, "_CPPv4N4FuncD0Ev", "Func::~Func"], [822, 3, 1, "_CPPv4N16FunctionNodeBody4Body4BodyERK4Body", "FunctionNodeBody::Body::Body"], [822, 3, 1, "_CPPv4N16FunctionNodeBody4BodyclERK5Input", "FunctionNodeBody::Body::operator()"], [822, 4, 1, "_CPPv4N16FunctionNodeBody4BodyclERK5Input", "FunctionNodeBody::Body::operator()::v"], [822, 3, 1, "_CPPv4N16FunctionNodeBody4BodyD0Ev", "FunctionNodeBody::Body::~Body"], [819, 3, 1, "_CPPv4N1H1HERK1H", "H::H"], [819, 3, 1, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType", "H::equal"], [819, 4, 1, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType", "H::equal::k1"], [819, 4, 1, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType", "H::equal::k2"], [819, 3, 1, "_CPPv4NK1H4hashERK7KeyType", "H::hash"], [819, 4, 1, "_CPPv4NK1H4hashERK7KeyType", "H::hash::k"], [819, 3, 1, "_CPPv4N1HD0Ev", "H::~H"], [809, 3, 1, "_CPPv4N5Index5IndexERK5Index", "Index::Index"], [809, 3, 1, "_CPPv4N5Index5IndexEi", "Index::Index"], [809, 3, 1, "_CPPv4N5IndexD0Ev", "Index::~Index"], [824, 3, 1, "_CPPv4N13InputNodeBody4Body4BodyERK4Body", "InputNodeBody::Body::Body"], [824, 3, 1, "_CPPv4N13InputNodeBody4BodyclERN6oneapi3tbb12flow_controlE", "InputNodeBody::Body::operator()"], [824, 4, 1, "_CPPv4N13InputNodeBody4BodyclERN6oneapi3tbb12flow_controlE", "InputNodeBody::Body::operator()::fc"], [824, 3, 1, "_CPPv4N13InputNodeBody4BodyD0Ev", "InputNodeBody::Body::~Body"], [805, 3, 1, "_CPPv4NK14LastFilterBody4BodyclE9InputType", "LastFilterBody::Body::operator()"], [805, 4, 1, "_CPPv4NK14LastFilterBody4BodyclE9InputType", "LastFilterBody::Body::operator()::item"], [805, 3, 1, "_CPPv4NK16MiddleFilterBody4BodyclE9InputType", "MiddleFilterBody::Body::operator()"], [805, 4, 1, "_CPPv4NK16MiddleFilterBody4BodyclE9InputType", "MiddleFilterBody::Body::operator()::item"], [826, 3, 1, "_CPPv4N21MultifunctionNodeBody4Body4BodyERK4Body", "MultifunctionNodeBody::Body::Body"], [826, 3, 1, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType", "MultifunctionNodeBody::Body::operator()"], [826, 4, 1, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType", "MultifunctionNodeBody::Body::operator()::p"], [826, 4, 1, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType", "MultifunctionNodeBody::Body::operator()::v"], [826, 3, 1, "_CPPv4N21MultifunctionNodeBody4BodyD0Ev", "MultifunctionNodeBody::Body::~Body"], [810, 3, 1, "_CPPv4N18ParallelReduceBody4Body4BodyER4Body5split", "ParallelReduceBody::Body::Body"], [810, 3, 1, "_CPPv4N18ParallelReduceBody4Body4joinER4Body", "ParallelReduceBody::Body::join"], [810, 4, 1, "_CPPv4N18ParallelReduceBody4Body4joinER4Body", "ParallelReduceBody::Body::join::rhs"], [810, 3, 1, "_CPPv4N18ParallelReduceBody4BodyclERK5Range", "ParallelReduceBody::Body::operator()"], [810, 4, 1, "_CPPv4N18ParallelReduceBody4BodyclERK5Range", "ParallelReduceBody::Body::operator()::range"], [810, 3, 1, "_CPPv4N18ParallelReduceBody4BodyD0Ev", "ParallelReduceBody::Body::~Body"], [816, 3, 1, "_CPPv4N1R1RER1R18proportional_split", "R::R"], [816, 3, 1, "_CPPv4N1R1RER1R5split", "R::R"], [816, 3, 1, "_CPPv4N1R1RERK1R", "R::R"], [816, 4, 1, "_CPPv4N1R1RER1R18proportional_split", "R::R::proportion"], [816, 4, 1, "_CPPv4N1R1RER1R18proportional_split", "R::R::r"], [816, 4, 1, "_CPPv4N1R1RER1R5split", "R::R::r"], [816, 3, 1, "_CPPv4NK1R5emptyEv", "R::empty"], [816, 3, 1, "_CPPv4NK1R12is_divisibleEv", "R::is_divisible"], [816, 3, 1, "_CPPv4N1RD0Ev", "R::~R"], [829, 5, 1, "_CPPv4N3RWM11scoped_lockE", "RWM::scoped_lock"], [829, 6, 1, "_CPPv4N3RWM11scoped_lock1M13is_fair_mutexE", "RWM::scoped_lock::M::is_fair_mutex"], [829, 6, 1, "_CPPv4N3RWM11scoped_lock1M18is_recursive_mutexE", "RWM::scoped_lock::M::is_recursive_mutex"], [829, 6, 1, "_CPPv4N3RWM11scoped_lock1M11is_rw_mutexE", "RWM::scoped_lock::M::is_rw_mutex"], [829, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockER3RWMb", "RWM::scoped_lock::RWM::scoped_lock"], [829, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockEv", "RWM::scoped_lock::RWM::scoped_lock"], [829, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::acquire"], [829, 4, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::acquire::write"], [829, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock19downgrade_to_readerEv", "RWM::scoped_lock::RWM::scoped_lock::downgrade_to_reader"], [829, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7releaseEv", "RWM::scoped_lock::RWM::scoped_lock::release"], [829, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock11try_acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::try_acquire"], [829, 4, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock11try_acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::try_acquire::write"], [829, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock17upgrade_to_writerEv", "RWM::scoped_lock::RWM::scoped_lock::upgrade_to_writer"], [829, 4, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::write"], [829, 3, 1, "_CPPv4N3RWM11scoped_lock3RWMD0Ev", "RWM::scoped_lock::RWM::~scoped_lock"], [812, 3, 1, "_CPPv4NK9ReductionclERK5ValueRK5Value", "Reduction::operator()"], [812, 4, 1, "_CPPv4NK9ReductionclERK5ValueRK5Value", "Reduction::operator()::x"], [812, 4, 1, "_CPPv4NK9ReductionclERK5ValueRK5Value", "Reduction::operator()::y"], [827, 3, 1, "_CPPv4N1S1SERK1S", "S::S"], [827, 3, 1, "_CPPv4N1SclERK1T", "S::operator()"], [827, 4, 1, "_CPPv4N1SclERK1T", "S::operator()::v"], [827, 3, 1, "_CPPv4N1SD0Ev", "S::~S"], [815, 3, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()"], [815, 4, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()::is_final"], [815, 4, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()::r"], [815, 4, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()::sum"], [805, 3, 1, "_CPPv4NK16SingleFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "SingleFilterBody::Body::operator()"], [805, 4, 1, "_CPPv4NK16SingleFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "SingleFilterBody::Body::operator()::fc"], [830, 3, 1, "_CPPv4N11SuspendFunc4Func4FuncERK4Func", "SuspendFunc::Func::Func"], [830, 3, 1, "_CPPv4N11SuspendFunc4FuncclEN6oneapi3tbb4task13suspend_pointE", "SuspendFunc::Func::operator()"], [823, 3, 1, "_CPPv4N1T12release_waitEv", "T::release_wait"], [823, 3, 1, "_CPPv4N1T12reserve_waitEv", "T::reserve_wait"], [823, 3, 1, "_CPPv4N1T7try_putERK6Output", "T::try_put"], [823, 4, 1, "_CPPv4N1T7try_putERK6Output", "T::try_put::v"], [803, 3, 1, "_CPPv4N5Value5ValueERK5Value", "Value::Value"], [803, 3, 1, "_CPPv4N5ValueD0Ev", "Value::~Value"], [817, 3, 1, "_CPPv4N1X1XER1X5split", "X::X"], [817, 4, 1, "_CPPv4N1X1XER1X5split", "X::X::x"], [759, 3, 1, "_CPPv48activatev", "activate"], [839, 3, 1, "_CPPv412active_value9parameter", "active_value"], [839, 4, 1, "_CPPv412active_value9parameter", "active_value::param"], [555, 3, 1, "_CPPv43addRK4Item", "add"], [555, 3, 1, "_CPPv43addRR4Item", "add"], [555, 4, 1, "_CPPv43addRK4Item", "add::item"], [555, 4, 1, "_CPPv43addRR4Item", "add::item"], [786, 3, 1, "_CPPv48allocate9size_type", "allocate"], [786, 4, 1, "_CPPv48allocate9size_type", "allocate::n"], [743, 7, 1, "_CPPv46attach", "attach"], [843, 6, 1, "_CPPv49automatic", "automatic"], [552, 3, 1, "_CPPv4NK5beginEv", "begin"], [552, 3, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range"], [552, 3, 1, "_CPPv413blocked_rangeR13blocked_range18proportional_split", "blocked_range"], [552, 3, 1, "_CPPv413blocked_rangeR13blocked_range5split", "blocked_range"], [552, 4, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range::begin"], [552, 4, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range::end"], [552, 4, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range::grainsize"], [552, 4, 1, "_CPPv413blocked_rangeR13blocked_range18proportional_split", "blocked_range::proportion"], [552, 4, 1, "_CPPv413blocked_rangeR13blocked_range18proportional_split", "blocked_range::range"], [552, 4, 1, "_CPPv413blocked_rangeR13blocked_range5split", "blocked_range::range"], [746, 3, 1, "_CPPv414broadcast_nodeR5graph", "broadcast_node"], [746, 3, 1, "_CPPv414broadcast_nodeRK14broadcast_node", "broadcast_node"], [746, 4, 1, "_CPPv414broadcast_nodeR5graph", "broadcast_node::g"], [746, 4, 1, "_CPPv414broadcast_nodeRK14broadcast_node", "broadcast_node::src"], [747, 3, 1, "_CPPv411buffer_nodeR5graph", "buffer_node"], [747, 3, 1, "_CPPv411buffer_nodeRK11buffer_node", "buffer_node"], [747, 4, 1, "_CPPv411buffer_nodeR5graph", "buffer_node::g"], [747, 4, 1, "_CPPv411buffer_nodeRK11buffer_node", "buffer_node::src"], [787, 3, 1, "_CPPv422cache_aligned_resourcePNSt3pmr15memory_resourceE", "cache_aligned_resource"], [787, 3, 1, "_CPPv422cache_aligned_resourcev", "cache_aligned_resource"], [787, 4, 1, "_CPPv422cache_aligned_resourcePNSt3pmr15memory_resourceE", "cache_aligned_resource::r"], [756, 3, 1, "_CPPv46cancelv", "cancel"], [841, 3, 1, "_CPPv422cancel_group_executionv", "cancel_group_execution"], [841, 3, 1, "_CPPv419capture_fp_settingsv", "capture_fp_settings"], [779, 3, 1, "_CPPv4I0ENK7cast_toERK1Vv", "cast_to"], [779, 8, 1, "_CPPv4I0ENK7cast_toERK1Vv", "cast_to::V"], [561, 3, 1, "_CPPv45clearv", "clear"], [554, 3, 1, "_CPPv423collaborative_once_flagv", "collaborative_once_flag"], [748, 3, 1, "_CPPv414composite_nodeR5graph", "composite_node"], [748, 4, 1, "_CPPv414composite_nodeR5graph", "composite_node::g"], [552, 5, 1, "_CPPv414const_iterator", "const_iterator"], [843, 7, 1, "_CPPv411constraints", "constraints"], [843, 3, 1, "_CPPv4N11constraints11constraintsE12numa_node_idi", "constraints::constraints"], [843, 4, 1, "_CPPv4N11constraints11constraintsE12numa_node_idi", "constraints::constraints::max_concurrency_"], [843, 4, 1, "_CPPv4N11constraints11constraintsE12numa_node_idi", "constraints::constraints::numa_node_"], [843, 6, 1, "_CPPv4N11constraints9core_typeE", "constraints::core_type"], [843, 6, 1, "_CPPv4N11constraints15max_concurrencyE", "constraints::max_concurrency"], [843, 6, 1, "_CPPv4N11constraints20max_threads_per_coreE", "constraints::max_threads_per_core"], [843, 6, 1, "_CPPv4N11constraints7numa_idE", "constraints::numa_id"], [843, 3, 1, "_CPPv4N11constraints13set_core_typeE12core_type_id", "constraints::set_core_type"], [843, 4, 1, "_CPPv4N11constraints13set_core_typeE12core_type_id", "constraints::set_core_type::id"], [843, 3, 1, "_CPPv4N11constraints19set_max_concurrencyEi", "constraints::set_max_concurrency"], [843, 4, 1, "_CPPv4N11constraints19set_max_concurrencyEi", "constraints::set_max_concurrency::maximal_concurrency"], [843, 3, 1, "_CPPv4N11constraints24set_max_threads_per_coreEi", "constraints::set_max_threads_per_core"], [843, 4, 1, "_CPPv4N11constraints24set_max_threads_per_coreEi", "constraints::set_max_threads_per_core::threads_number"], [843, 3, 1, "_CPPv4N11constraints11set_numa_idE12numa_node_id", "constraints::set_numa_id"], [843, 4, 1, "_CPPv4N11constraints11set_numa_idE12numa_node_id", "constraints::set_numa_id::id"], [782, 3, 1, "_CPPv410core_typesv", "core_types"], [786, 3, 1, "_CPPv410deallocateP1T9size_type", "deallocate"], [786, 4, 1, "_CPPv410deallocateP1T9size_type", "deallocate::n"], [786, 4, 1, "_CPPv410deallocateP1T9size_type", "deallocate::p"], [782, 3, 1, "_CPPv419default_concurrency12numa_node_id", "default_concurrency"], [782, 3, 1, "_CPPv419default_concurrencyN10task_arena11constraintsE", "default_concurrency"], [782, 4, 1, "_CPPv419default_concurrencyN10task_arena11constraintsE", "default_concurrency::c"], [782, 4, 1, "_CPPv419default_concurrency12numa_node_id", "default_concurrency::id"], [160, 9, 1, "_CPPv4N4dnnl9algorithmE", "dnnl::algorithm"], [160, 10, 1, "_CPPv4N4dnnl9algorithm10binary_addE", "dnnl::algorithm::binary_add"], [160, 10, 1, "_CPPv4N4dnnl9algorithm10binary_divE", "dnnl::algorithm::binary_div"], [160, 10, 1, "_CPPv4N4dnnl9algorithm9binary_eqE", "dnnl::algorithm::binary_eq"], [160, 10, 1, "_CPPv4N4dnnl9algorithm9binary_geE", "dnnl::algorithm::binary_ge"], [160, 10, 1, "_CPPv4N4dnnl9algorithm9binary_gtE", "dnnl::algorithm::binary_gt"], [160, 10, 1, "_CPPv4N4dnnl9algorithm9binary_leE", "dnnl::algorithm::binary_le"], [160, 10, 1, "_CPPv4N4dnnl9algorithm9binary_ltE", "dnnl::algorithm::binary_lt"], [160, 10, 1, "_CPPv4N4dnnl9algorithm10binary_maxE", "dnnl::algorithm::binary_max"], [160, 10, 1, "_CPPv4N4dnnl9algorithm10binary_minE", "dnnl::algorithm::binary_min"], [160, 10, 1, "_CPPv4N4dnnl9algorithm10binary_mulE", "dnnl::algorithm::binary_mul"], [160, 10, 1, "_CPPv4N4dnnl9algorithm9binary_neE", "dnnl::algorithm::binary_ne"], [160, 10, 1, "_CPPv4N4dnnl9algorithm10binary_subE", "dnnl::algorithm::binary_sub"], [160, 10, 1, "_CPPv4N4dnnl9algorithm16convolution_autoE", "dnnl::algorithm::convolution_auto"], [160, 10, 1, "_CPPv4N4dnnl9algorithm18convolution_directE", "dnnl::algorithm::convolution_direct"], [160, 10, 1, "_CPPv4N4dnnl9algorithm20convolution_winogradE", "dnnl::algorithm::convolution_winograd"], [160, 10, 1, "_CPPv4N4dnnl9algorithm20deconvolution_directE", "dnnl::algorithm::deconvolution_direct"], [160, 10, 1, "_CPPv4N4dnnl9algorithm22deconvolution_winogradE", "dnnl::algorithm::deconvolution_winograd"], [160, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_absE", "dnnl::algorithm::eltwise_abs"], [160, 10, 1, "_CPPv4N4dnnl9algorithm20eltwise_bounded_reluE", "dnnl::algorithm::eltwise_bounded_relu"], [160, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_clipE", "dnnl::algorithm::eltwise_clip"], [160, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_clip_use_dst_for_bwdE", "dnnl::algorithm::eltwise_clip_use_dst_for_bwd"], [160, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_eluE", "dnnl::algorithm::eltwise_elu"], [160, 10, 1, "_CPPv4N4dnnl9algorithm27eltwise_elu_use_dst_for_bwdE", "dnnl::algorithm::eltwise_elu_use_dst_for_bwd"], [160, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_expE", "dnnl::algorithm::eltwise_exp"], [160, 10, 1, "_CPPv4N4dnnl9algorithm27eltwise_exp_use_dst_for_bwdE", "dnnl::algorithm::eltwise_exp_use_dst_for_bwd"], [160, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_geluE", "dnnl::algorithm::eltwise_gelu"], [160, 10, 1, "_CPPv4N4dnnl9algorithm16eltwise_gelu_erfE", "dnnl::algorithm::eltwise_gelu_erf"], [160, 10, 1, "_CPPv4N4dnnl9algorithm17eltwise_gelu_tanhE", "dnnl::algorithm::eltwise_gelu_tanh"], [160, 10, 1, "_CPPv4N4dnnl9algorithm19eltwise_hardsigmoidE", "dnnl::algorithm::eltwise_hardsigmoid"], [160, 10, 1, "_CPPv4N4dnnl9algorithm17eltwise_hardswishE", "dnnl::algorithm::eltwise_hardswish"], [160, 10, 1, "_CPPv4N4dnnl9algorithm14eltwise_linearE", "dnnl::algorithm::eltwise_linear"], [160, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_logE", "dnnl::algorithm::eltwise_log"], [160, 10, 1, "_CPPv4N4dnnl9algorithm16eltwise_logisticE", "dnnl::algorithm::eltwise_logistic"], [160, 10, 1, "_CPPv4N4dnnl9algorithm32eltwise_logistic_use_dst_for_bwdE", "dnnl::algorithm::eltwise_logistic_use_dst_for_bwd"], [160, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_mishE", "dnnl::algorithm::eltwise_mish"], [160, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_powE", "dnnl::algorithm::eltwise_pow"], [160, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_reluE", "dnnl::algorithm::eltwise_relu"], [160, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_relu_use_dst_for_bwdE", "dnnl::algorithm::eltwise_relu_use_dst_for_bwd"], [160, 10, 1, "_CPPv4N4dnnl9algorithm13eltwise_roundE", "dnnl::algorithm::eltwise_round"], [160, 10, 1, "_CPPv4N4dnnl9algorithm17eltwise_soft_reluE", "dnnl::algorithm::eltwise_soft_relu"], [160, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_sqrtE", "dnnl::algorithm::eltwise_sqrt"], [160, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_sqrt_use_dst_for_bwdE", "dnnl::algorithm::eltwise_sqrt_use_dst_for_bwd"], [160, 10, 1, "_CPPv4N4dnnl9algorithm14eltwise_squareE", "dnnl::algorithm::eltwise_square"], [160, 10, 1, "_CPPv4N4dnnl9algorithm13eltwise_swishE", "dnnl::algorithm::eltwise_swish"], [160, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_tanhE", "dnnl::algorithm::eltwise_tanh"], [160, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_tanh_use_dst_for_bwdE", "dnnl::algorithm::eltwise_tanh_use_dst_for_bwd"], [160, 10, 1, "_CPPv4N4dnnl9algorithm7lbr_gruE", "dnnl::algorithm::lbr_gru"], [160, 10, 1, "_CPPv4N4dnnl9algorithm19lrn_across_channelsE", "dnnl::algorithm::lrn_across_channels"], [160, 10, 1, "_CPPv4N4dnnl9algorithm18lrn_within_channelE", "dnnl::algorithm::lrn_within_channel"], [160, 10, 1, "_CPPv4N4dnnl9algorithm11pooling_avgE", "dnnl::algorithm::pooling_avg"], [160, 10, 1, "_CPPv4N4dnnl9algorithm27pooling_avg_exclude_paddingE", "dnnl::algorithm::pooling_avg_exclude_padding"], [160, 10, 1, "_CPPv4N4dnnl9algorithm27pooling_avg_include_paddingE", "dnnl::algorithm::pooling_avg_include_padding"], [160, 10, 1, "_CPPv4N4dnnl9algorithm11pooling_maxE", "dnnl::algorithm::pooling_max"], [160, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_maxE", "dnnl::algorithm::reduction_max"], [160, 10, 1, "_CPPv4N4dnnl9algorithm14reduction_meanE", "dnnl::algorithm::reduction_mean"], [160, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_minE", "dnnl::algorithm::reduction_min"], [160, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_mulE", "dnnl::algorithm::reduction_mul"], [160, 10, 1, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_maxE", "dnnl::algorithm::reduction_norm_lp_max"], [160, 10, 1, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_maxE", "dnnl::algorithm::reduction_norm_lp_power_p_max"], [160, 10, 1, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_sumE", "dnnl::algorithm::reduction_norm_lp_power_p_sum"], [160, 10, 1, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_sumE", "dnnl::algorithm::reduction_norm_lp_sum"], [160, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_sumE", "dnnl::algorithm::reduction_sum"], [160, 10, 1, "_CPPv4N4dnnl9algorithm17resampling_linearE", "dnnl::algorithm::resampling_linear"], [160, 10, 1, "_CPPv4N4dnnl9algorithm18resampling_nearestE", "dnnl::algorithm::resampling_nearest"], [160, 10, 1, "_CPPv4N4dnnl9algorithm16softmax_accurateE", "dnnl::algorithm::softmax_accurate"], [160, 10, 1, "_CPPv4N4dnnl9algorithm11softmax_logE", "dnnl::algorithm::softmax_log"], [160, 10, 1, "_CPPv4N4dnnl9algorithm5undefE", "dnnl::algorithm::undef"], [160, 10, 1, "_CPPv4N4dnnl9algorithm11vanilla_gruE", "dnnl::algorithm::vanilla_gru"], [160, 10, 1, "_CPPv4N4dnnl9algorithm12vanilla_lstmE", "dnnl::algorithm::vanilla_lstm"], [160, 10, 1, "_CPPv4N4dnnl9algorithm11vanilla_rnnE", "dnnl::algorithm::vanilla_rnn"], [155, 7, 1, "_CPPv4N4dnnl28batch_normalization_backwardE", "dnnl::batch_normalization_backward"], [155, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardERK14primitive_desc", "dnnl::batch_normalization_backward::batch_normalization_backward"], [155, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardEv", "dnnl::batch_normalization_backward::batch_normalization_backward"], [155, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardERK14primitive_desc", "dnnl::batch_normalization_backward::batch_normalization_backward::pd"], [155, 7, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_descE", "dnnl::batch_normalization_backward::primitive_desc"], [155, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_dst_descEv", "dnnl::batch_normalization_backward::primitive_desc::diff_dst_desc"], [155, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_src_descEv", "dnnl::batch_normalization_backward::primitive_desc::diff_src_desc"], [155, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc17diff_weights_descEv", "dnnl::batch_normalization_backward::primitive_desc::diff_weights_desc"], [155, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8dst_descEv", "dnnl::batch_normalization_backward::primitive_desc::dst_desc"], [155, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc11get_epsilonEv", "dnnl::batch_normalization_backward::primitive_desc::get_epsilon"], [155, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9get_flagsEv", "dnnl::batch_normalization_backward::primitive_desc::get_flags"], [155, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13get_prop_kindEv", "dnnl::batch_normalization_backward::primitive_desc::get_prop_kind"], [155, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9mean_descEv", "dnnl::batch_normalization_backward::primitive_desc::mean_desc"], [155, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc"], [155, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descEv", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc"], [155, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::aengine"], [155, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::allow_empty"], [155, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::aprop_kind"], [155, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::attr"], [155, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::diff_dst_desc"], [155, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::diff_src_desc"], [155, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::epsilon"], [155, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::flags"], [155, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [155, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::src_desc"], [155, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8src_descEv", "dnnl::batch_normalization_backward::primitive_desc::src_desc"], [155, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13variance_descEv", "dnnl::batch_normalization_backward::primitive_desc::variance_desc"], [155, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc12weights_descEv", "dnnl::batch_normalization_backward::primitive_desc::weights_desc"], [155, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc14workspace_descEv", "dnnl::batch_normalization_backward::primitive_desc::workspace_desc"], [155, 7, 1, "_CPPv4N4dnnl27batch_normalization_forwardE", "dnnl::batch_normalization_forward"], [155, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardERK14primitive_desc", "dnnl::batch_normalization_forward::batch_normalization_forward"], [155, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardEv", "dnnl::batch_normalization_forward::batch_normalization_forward"], [155, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardERK14primitive_desc", "dnnl::batch_normalization_forward::batch_normalization_forward::pd"], [155, 7, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_descE", "dnnl::batch_normalization_forward::primitive_desc"], [155, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8dst_descEv", "dnnl::batch_normalization_forward::primitive_desc::dst_desc"], [155, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc11get_epsilonEv", "dnnl::batch_normalization_forward::primitive_desc::get_epsilon"], [155, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9get_flagsEv", "dnnl::batch_normalization_forward::primitive_desc::get_flags"], [155, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13get_prop_kindEv", "dnnl::batch_normalization_forward::primitive_desc::get_prop_kind"], [155, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9mean_descEv", "dnnl::batch_normalization_forward::primitive_desc::mean_desc"], [155, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc"], [155, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descEv", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc"], [155, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::aengine"], [155, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::allow_empty"], [155, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::aprop_kind"], [155, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::attr"], [155, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::dst_desc"], [155, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::epsilon"], [155, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::flags"], [155, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::src_desc"], [155, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8src_descEv", "dnnl::batch_normalization_forward::primitive_desc::src_desc"], [155, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13variance_descEv", "dnnl::batch_normalization_forward::primitive_desc::variance_desc"], [155, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc12weights_descEv", "dnnl::batch_normalization_forward::primitive_desc::weights_desc"], [155, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc14workspace_descEv", "dnnl::batch_normalization_forward::primitive_desc::workspace_desc"], [156, 7, 1, "_CPPv4N4dnnl6binaryE", "dnnl::binary"], [156, 3, 1, "_CPPv4N4dnnl6binary6binaryERK14primitive_desc", "dnnl::binary::binary"], [156, 3, 1, "_CPPv4N4dnnl6binary6binaryEv", "dnnl::binary::binary"], [156, 4, 1, "_CPPv4N4dnnl6binary6binaryERK14primitive_desc", "dnnl::binary::binary::pd"], [156, 7, 1, "_CPPv4N4dnnl6binary14primitive_descE", "dnnl::binary::primitive_desc"], [156, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc8dst_descEv", "dnnl::binary::primitive_desc::dst_desc"], [156, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc13get_algorithmEv", "dnnl::binary::primitive_desc::get_algorithm"], [156, 3, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descEv", "dnnl::binary::primitive_desc::primitive_desc"], [156, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::dst"], [156, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::src0"], [156, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::src1"], [156, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc9src0_descEv", "dnnl::binary::primitive_desc::src0_desc"], [156, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc9src1_descEv", "dnnl::binary::primitive_desc::src1_desc"], [156, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc8src_descEi", "dnnl::binary::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4NK4dnnl6binary14primitive_desc8src_descEi", "dnnl::binary::primitive_desc::src_desc::idx"], [157, 7, 1, "_CPPv4N4dnnl6concatE", "dnnl::concat"], [157, 3, 1, "_CPPv4N4dnnl6concat6concatERK14primitive_desc", "dnnl::concat::concat"], [157, 3, 1, "_CPPv4N4dnnl6concat6concatEv", "dnnl::concat::concat"], [157, 4, 1, "_CPPv4N4dnnl6concat6concatERK14primitive_desc", "dnnl::concat::concat::pd"], [157, 7, 1, "_CPPv4N4dnnl6concat14primitive_descE", "dnnl::concat::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl6concat14primitive_desc8dst_descEv", "dnnl::concat::primitive_desc::dst_desc"], [157, 3, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEv", "dnnl::concat::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::concat_dimension"], [157, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::concat_dimension"], [157, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::dst"], [157, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::srcs"], [157, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::srcs"], [157, 3, 1, "_CPPv4NK4dnnl6concat14primitive_desc8src_descEi", "dnnl::concat::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4NK4dnnl6concat14primitive_desc8src_descEi", "dnnl::concat::primitive_desc::src_desc::idx"], [158, 7, 1, "_CPPv4N4dnnl25convolution_backward_dataE", "dnnl::convolution_backward_data"], [158, 3, 1, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataERK14primitive_desc", "dnnl::convolution_backward_data::convolution_backward_data"], [158, 3, 1, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataEv", "dnnl::convolution_backward_data::convolution_backward_data"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataERK14primitive_desc", "dnnl::convolution_backward_data::convolution_backward_data::pd"], [158, 7, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_descE", "dnnl::convolution_backward_data::primitive_desc"], [158, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_dst_descEv", "dnnl::convolution_backward_data::primitive_desc::diff_dst_desc"], [158, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_src_descEv", "dnnl::convolution_backward_data::primitive_desc::diff_src_desc"], [158, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_algorithmEv", "dnnl::convolution_backward_data::primitive_desc::get_algorithm"], [158, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_dilationsEv", "dnnl::convolution_backward_data::primitive_desc::get_dilations"], [158, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_lEv", "dnnl::convolution_backward_data::primitive_desc::get_padding_l"], [158, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_rEv", "dnnl::convolution_backward_data::primitive_desc::get_padding_r"], [158, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_prop_kindEv", "dnnl::convolution_backward_data::primitive_desc::get_prop_kind"], [158, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc11get_stridesEv", "dnnl::convolution_backward_data::primitive_desc::get_strides"], [158, 3, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descEv", "dnnl::convolution_backward_data::primitive_desc::primitive_desc"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::dilates"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [158, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [158, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc12weights_descEv", "dnnl::convolution_backward_data::primitive_desc::weights_desc"], [158, 7, 1, "_CPPv4N4dnnl28convolution_backward_weightsE", "dnnl::convolution_backward_weights"], [158, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsERK14primitive_desc", "dnnl::convolution_backward_weights::convolution_backward_weights"], [158, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsEv", "dnnl::convolution_backward_weights::convolution_backward_weights"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsERK14primitive_desc", "dnnl::convolution_backward_weights::convolution_backward_weights::pd"], [158, 7, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_descE", "dnnl::convolution_backward_weights::primitive_desc"], [158, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc14diff_bias_descEv", "dnnl::convolution_backward_weights::primitive_desc::diff_bias_desc"], [158, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13diff_dst_descEv", "dnnl::convolution_backward_weights::primitive_desc::diff_dst_desc"], [158, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc17diff_weights_descEv", "dnnl::convolution_backward_weights::primitive_desc::diff_weights_desc"], [158, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_algorithmEv", "dnnl::convolution_backward_weights::primitive_desc::get_algorithm"], [158, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_dilationsEv", "dnnl::convolution_backward_weights::primitive_desc::get_dilations"], [158, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_lEv", "dnnl::convolution_backward_weights::primitive_desc::get_padding_l"], [158, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_rEv", "dnnl::convolution_backward_weights::primitive_desc::get_padding_r"], [158, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_prop_kindEv", "dnnl::convolution_backward_weights::primitive_desc::get_prop_kind"], [158, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc11get_stridesEv", "dnnl::convolution_backward_weights::primitive_desc::get_strides"], [158, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descEv", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::dilates"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::dilates"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [158, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc8src_descEv", "dnnl::convolution_backward_weights::primitive_desc::src_desc"], [158, 7, 1, "_CPPv4N4dnnl19convolution_forwardE", "dnnl::convolution_forward"], [158, 3, 1, "_CPPv4N4dnnl19convolution_forward19convolution_forwardERK14primitive_desc", "dnnl::convolution_forward::convolution_forward"], [158, 3, 1, "_CPPv4N4dnnl19convolution_forward19convolution_forwardEv", "dnnl::convolution_forward::convolution_forward"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward19convolution_forwardERK14primitive_desc", "dnnl::convolution_forward::convolution_forward::pd"], [158, 7, 1, "_CPPv4N4dnnl19convolution_forward14primitive_descE", "dnnl::convolution_forward::primitive_desc"], [158, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc9bias_descEv", "dnnl::convolution_forward::primitive_desc::bias_desc"], [158, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8dst_descEv", "dnnl::convolution_forward::primitive_desc::dst_desc"], [158, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_algorithmEv", "dnnl::convolution_forward::primitive_desc::get_algorithm"], [158, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_dilationsEv", "dnnl::convolution_forward::primitive_desc::get_dilations"], [158, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_lEv", "dnnl::convolution_forward::primitive_desc::get_padding_l"], [158, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_rEv", "dnnl::convolution_forward::primitive_desc::get_padding_r"], [158, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_prop_kindEv", "dnnl::convolution_forward::primitive_desc::get_prop_kind"], [158, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc11get_stridesEv", "dnnl::convolution_forward::primitive_desc::get_strides"], [158, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descEv", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::bias_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::bias_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dilates"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dilates"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [158, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [158, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8src_descEv", "dnnl::convolution_forward::primitive_desc::src_desc"], [158, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc12weights_descEv", "dnnl::convolution_forward::primitive_desc::weights_desc"], [158, 7, 1, "_CPPv4N4dnnl27deconvolution_backward_dataE", "dnnl::deconvolution_backward_data"], [158, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataERK14primitive_desc", "dnnl::deconvolution_backward_data::deconvolution_backward_data"], [158, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataEv", "dnnl::deconvolution_backward_data::deconvolution_backward_data"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataERK14primitive_desc", "dnnl::deconvolution_backward_data::deconvolution_backward_data::pd"], [158, 7, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_descE", "dnnl::deconvolution_backward_data::primitive_desc"], [158, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_dst_descEv", "dnnl::deconvolution_backward_data::primitive_desc::diff_dst_desc"], [158, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_src_descEv", "dnnl::deconvolution_backward_data::primitive_desc::diff_src_desc"], [158, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_algorithmEv", "dnnl::deconvolution_backward_data::primitive_desc::get_algorithm"], [158, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_dilationsEv", "dnnl::deconvolution_backward_data::primitive_desc::get_dilations"], [158, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_lEv", "dnnl::deconvolution_backward_data::primitive_desc::get_padding_l"], [158, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_rEv", "dnnl::deconvolution_backward_data::primitive_desc::get_padding_r"], [158, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_prop_kindEv", "dnnl::deconvolution_backward_data::primitive_desc::get_prop_kind"], [158, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc11get_stridesEv", "dnnl::deconvolution_backward_data::primitive_desc::get_strides"], [158, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descEv", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::dilates"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [158, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [158, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc12weights_descEv", "dnnl::deconvolution_backward_data::primitive_desc::weights_desc"], [158, 7, 1, "_CPPv4N4dnnl30deconvolution_backward_weightsE", "dnnl::deconvolution_backward_weights"], [158, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsERK14primitive_desc", "dnnl::deconvolution_backward_weights::deconvolution_backward_weights"], [158, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsEv", "dnnl::deconvolution_backward_weights::deconvolution_backward_weights"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsERK14primitive_desc", "dnnl::deconvolution_backward_weights::deconvolution_backward_weights::pd"], [158, 7, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_descE", "dnnl::deconvolution_backward_weights::primitive_desc"], [158, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc14diff_bias_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::diff_bias_desc"], [158, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13diff_dst_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::diff_dst_desc"], [158, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc17diff_weights_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::diff_weights_desc"], [158, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_algorithmEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_algorithm"], [158, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_dilationsEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_dilations"], [158, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_lEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_l"], [158, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_rEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_r"], [158, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_prop_kindEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_prop_kind"], [158, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc11get_stridesEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_strides"], [158, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::dilates"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::dilates"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [158, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc8src_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::src_desc"], [158, 7, 1, "_CPPv4N4dnnl21deconvolution_forwardE", "dnnl::deconvolution_forward"], [158, 3, 1, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardERK14primitive_desc", "dnnl::deconvolution_forward::deconvolution_forward"], [158, 3, 1, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardEv", "dnnl::deconvolution_forward::deconvolution_forward"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardERK14primitive_desc", "dnnl::deconvolution_forward::deconvolution_forward::pd"], [158, 7, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_descE", "dnnl::deconvolution_forward::primitive_desc"], [158, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc9bias_descEv", "dnnl::deconvolution_forward::primitive_desc::bias_desc"], [158, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8dst_descEv", "dnnl::deconvolution_forward::primitive_desc::dst_desc"], [158, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_algorithmEv", "dnnl::deconvolution_forward::primitive_desc::get_algorithm"], [158, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_dilationsEv", "dnnl::deconvolution_forward::primitive_desc::get_dilations"], [158, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_lEv", "dnnl::deconvolution_forward::primitive_desc::get_padding_l"], [158, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_rEv", "dnnl::deconvolution_forward::primitive_desc::get_padding_r"], [158, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_prop_kindEv", "dnnl::deconvolution_forward::primitive_desc::get_prop_kind"], [158, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc11get_stridesEv", "dnnl::deconvolution_forward::primitive_desc::get_strides"], [158, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descEv", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::bias_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::bias_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dilates"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dilates"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [158, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [158, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8src_descEv", "dnnl::deconvolution_forward::primitive_desc::src_desc"], [158, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc12weights_descEv", "dnnl::deconvolution_forward::primitive_desc::weights_desc"], [159, 7, 1, "_CPPv4N4dnnl16eltwise_backwardE", "dnnl::eltwise_backward"], [159, 3, 1, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardERK14primitive_desc", "dnnl::eltwise_backward::eltwise_backward"], [159, 3, 1, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardEv", "dnnl::eltwise_backward::eltwise_backward"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardERK14primitive_desc", "dnnl::eltwise_backward::eltwise_backward::pd"], [159, 7, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_descE", "dnnl::eltwise_backward::primitive_desc"], [159, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_dst_descEv", "dnnl::eltwise_backward::primitive_desc::diff_dst_desc"], [159, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_src_descEv", "dnnl::eltwise_backward::primitive_desc::diff_src_desc"], [159, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_algorithmEv", "dnnl::eltwise_backward::primitive_desc::get_algorithm"], [159, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc9get_alphaEv", "dnnl::eltwise_backward::primitive_desc::get_alpha"], [159, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8get_betaEv", "dnnl::eltwise_backward::primitive_desc::get_beta"], [159, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_prop_kindEv", "dnnl::eltwise_backward::primitive_desc::get_prop_kind"], [159, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [159, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [159, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [159, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descEv", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aalgorithm"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aalgorithm"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aalgorithm"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aengine"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aengine"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aengine"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::allow_empty"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::allow_empty"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::allow_empty"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::alpha"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::alpha"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::attr"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::attr"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::attr"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::beta"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::data_desc"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::data_desc"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::data_desc"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_dst_desc"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_dst_desc"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_dst_desc"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_src_desc"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_src_desc"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_src_desc"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [159, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [159, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8src_descEv", "dnnl::eltwise_backward::primitive_desc::src_desc"], [159, 7, 1, "_CPPv4N4dnnl15eltwise_forwardE", "dnnl::eltwise_forward"], [159, 3, 1, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardERK14primitive_desc", "dnnl::eltwise_forward::eltwise_forward"], [159, 3, 1, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardEv", "dnnl::eltwise_forward::eltwise_forward"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardERK14primitive_desc", "dnnl::eltwise_forward::eltwise_forward::pd"], [159, 7, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_descE", "dnnl::eltwise_forward::primitive_desc"], [159, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8dst_descEv", "dnnl::eltwise_forward::primitive_desc::dst_desc"], [159, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_algorithmEv", "dnnl::eltwise_forward::primitive_desc::get_algorithm"], [159, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc9get_alphaEv", "dnnl::eltwise_forward::primitive_desc::get_alpha"], [159, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8get_betaEv", "dnnl::eltwise_forward::primitive_desc::get_beta"], [159, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_prop_kindEv", "dnnl::eltwise_forward::primitive_desc::get_prop_kind"], [159, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [159, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [159, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [159, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descEv", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aalgorithm"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aalgorithm"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aalgorithm"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aengine"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aengine"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aengine"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::allow_empty"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::allow_empty"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::allow_empty"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::alpha"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::alpha"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aprop_kind"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aprop_kind"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aprop_kind"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::attr"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::attr"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::attr"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::beta"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::dst_desc"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::dst_desc"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::dst_desc"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::src_desc"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::src_desc"], [159, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::src_desc"], [159, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8src_descEv", "dnnl::eltwise_forward::primitive_desc::src_desc"], [62, 7, 1, "_CPPv4N4dnnl6engineE", "dnnl::engine"], [62, 3, 1, "_CPPv4N4dnnl6engine6engineE4kind6size_t", "dnnl::engine::engine"], [62, 3, 1, "_CPPv4N4dnnl6engine6engineEv", "dnnl::engine::engine"], [62, 4, 1, "_CPPv4N4dnnl6engine6engineE4kind6size_t", "dnnl::engine::engine::akind"], [62, 4, 1, "_CPPv4N4dnnl6engine6engineE4kind6size_t", "dnnl::engine::engine::index"], [62, 3, 1, "_CPPv4N4dnnl6engine9get_countE4kind", "dnnl::engine::get_count"], [62, 4, 1, "_CPPv4N4dnnl6engine9get_countE4kind", "dnnl::engine::get_count::akind"], [62, 3, 1, "_CPPv4NK4dnnl6engine8get_kindEv", "dnnl::engine::get_kind"], [62, 9, 1, "_CPPv4N4dnnl6engine4kindE", "dnnl::engine::kind"], [62, 10, 1, "_CPPv4N4dnnl6engine4kind3anyE", "dnnl::engine::kind::any"], [62, 10, 1, "_CPPv4N4dnnl6engine4kind3cpuE", "dnnl::engine::kind::cpu"], [62, 10, 1, "_CPPv4N4dnnl6engine4kind3gpuE", "dnnl::engine::kind::gpu"], [152, 7, 1, "_CPPv4N4dnnl5errorE", "dnnl::error"], [64, 7, 1, "_CPPv4N4dnnl5graph5graphE", "dnnl::graph::graph"], [64, 3, 1, "_CPPv4N4dnnl5graph5graph6add_opERK2opb", "dnnl::graph::graph::add_op"], [64, 4, 1, "_CPPv4N4dnnl5graph5graph6add_opERK2opb", "dnnl::graph::graph::add_op::allow_exception"], [64, 4, 1, "_CPPv4N4dnnl5graph5graph6add_opERK2opb", "dnnl::graph::graph::add_op::op"], [64, 3, 1, "_CPPv4N4dnnl5graph5graph8finalizeEv", "dnnl::graph::graph::finalize"], [64, 3, 1, "_CPPv4N4dnnl5graph5graph14get_partitionsEN9partition6policyE", "dnnl::graph::graph::get_partitions"], [64, 4, 1, "_CPPv4N4dnnl5graph5graph14get_partitionsEN9partition6policyE", "dnnl::graph::graph::get_partitions::policy"], [64, 3, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindE", "dnnl::graph::graph::graph"], [64, 3, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE", "dnnl::graph::graph::graph"], [64, 4, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindE", "dnnl::graph::graph::graph::engine_kind"], [64, 4, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE", "dnnl::graph::graph::graph::engine_kind"], [64, 4, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE", "dnnl::graph::graph::graph::mode"], [64, 3, 1, "_CPPv4NK4dnnl5graph5graph12is_finalizedEv", "dnnl::graph::graph::is_finalized"], [64, 7, 1, "_CPPv4N4dnnl5graph14logical_tensorE", "dnnl::graph::logical_tensor"], [64, 9, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_typeE", "dnnl::graph::logical_tensor::data_type"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type4bf16E", "dnnl::graph::logical_tensor::data_type::bf16"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type7booleanE", "dnnl::graph::logical_tensor::data_type::boolean"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f16E", "dnnl::graph::logical_tensor::data_type::f16"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f32E", "dnnl::graph::logical_tensor::data_type::f32"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type3s32E", "dnnl::graph::logical_tensor::data_type::s32"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type2s8E", "dnnl::graph::logical_tensor::data_type::s8"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type2u8E", "dnnl::graph::logical_tensor::data_type::u8"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type5undefE", "dnnl::graph::logical_tensor::data_type::undef"], [64, 5, 1, "_CPPv4N4dnnl5graph14logical_tensor3dimE", "dnnl::graph::logical_tensor::dim"], [64, 5, 1, "_CPPv4N4dnnl5graph14logical_tensor4dimsE", "dnnl::graph::logical_tensor::dims"], [64, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor13get_data_typeEv", "dnnl::graph::logical_tensor::get_data_type"], [64, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor8get_dimsEv", "dnnl::graph::logical_tensor::get_dims"], [64, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor6get_idEv", "dnnl::graph::logical_tensor::get_id"], [64, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor13get_layout_idEv", "dnnl::graph::logical_tensor::get_layout_id"], [64, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor15get_layout_typeEv", "dnnl::graph::logical_tensor::get_layout_type"], [64, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor12get_mem_sizeEv", "dnnl::graph::logical_tensor::get_mem_size"], [64, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor17get_property_typeEv", "dnnl::graph::logical_tensor::get_property_type"], [64, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor11get_stridesEv", "dnnl::graph::logical_tensor::get_strides"], [64, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor8is_equalERK14logical_tensor", "dnnl::graph::logical_tensor::is_equal"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor8is_equalERK14logical_tensor", "dnnl::graph::logical_tensor::is_equal::lt"], [64, 9, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_typeE", "dnnl::graph::logical_tensor::layout_type"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type3anyE", "dnnl::graph::logical_tensor::layout_type::any"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type6opaqueE", "dnnl::graph::logical_tensor::layout_type::opaque"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type7stridedE", "dnnl::graph::logical_tensor::layout_type::strided"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type5undefE", "dnnl::graph::logical_tensor::layout_type::undef"], [64, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor"], [64, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [64, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [64, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [64, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [64, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorERK14logical_tensor", "dnnl::graph::logical_tensor::logical_tensor"], [64, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorEv", "dnnl::graph::logical_tensor::logical_tensor"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::adims"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::adims"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::adims"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::lid"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor::ltype"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ltype"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ltype"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ndims"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorERK14logical_tensor", "dnnl::graph::logical_tensor::logical_tensor::other"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::strides"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [64, 3, 1, "_CPPv4N4dnnl5graph14logical_tensoraSERK14logical_tensor", "dnnl::graph::logical_tensor::operator="], [64, 4, 1, "_CPPv4N4dnnl5graph14logical_tensoraSERK14logical_tensor", "dnnl::graph::logical_tensor::operator=::other"], [64, 9, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_typeE", "dnnl::graph::logical_tensor::property_type"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_type8constantE", "dnnl::graph::logical_tensor::property_type::constant"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_type5undefE", "dnnl::graph::logical_tensor::property_type::undef"], [64, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_type8variableE", "dnnl::graph::logical_tensor::property_type::variable"], [64, 7, 1, "_CPPv4N4dnnl5graph2opE", "dnnl::graph::op"], [64, 3, 1, "_CPPv4N4dnnl5graph2op9add_inputERK14logical_tensor", "dnnl::graph::op::add_input"], [64, 4, 1, "_CPPv4N4dnnl5graph2op9add_inputERK14logical_tensor", "dnnl::graph::op::add_input::t"], [64, 3, 1, "_CPPv4N4dnnl5graph2op10add_inputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_inputs"], [64, 4, 1, "_CPPv4N4dnnl5graph2op10add_inputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_inputs::ts"], [64, 3, 1, "_CPPv4N4dnnl5graph2op10add_outputERK14logical_tensor", "dnnl::graph::op::add_output"], [64, 4, 1, "_CPPv4N4dnnl5graph2op10add_outputERK14logical_tensor", "dnnl::graph::op::add_output::t"], [64, 3, 1, "_CPPv4N4dnnl5graph2op11add_outputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_outputs"], [64, 4, 1, "_CPPv4N4dnnl5graph2op11add_outputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_outputs::ts"], [64, 9, 1, "_CPPv4N4dnnl5graph2op4attrE", "dnnl::graph::op::attr"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr5alphaE", "dnnl::graph::op::attr::alpha"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr14auto_broadcastE", "dnnl::graph::op::attr::auto_broadcast"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr8auto_padE", "dnnl::graph::op::attr::auto_pad"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr4axesE", "dnnl::graph::op::attr::axes"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr4axisE", "dnnl::graph::op::attr::axis"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr15begin_norm_axisE", "dnnl::graph::op::attr::begin_norm_axis"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr4betaE", "dnnl::graph::op::attr::beta"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr30coordinate_transformation_modeE", "dnnl::graph::op::attr::coordinate_transformation_mode"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr11data_formatE", "dnnl::graph::op::attr::data_format"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr9dilationsE", "dnnl::graph::op::attr::dilations"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr9dst_shapeE", "dnnl::graph::op::attr::dst_shape"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr7epsilonE", "dnnl::graph::op::attr::epsilon"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr11exclude_padE", "dnnl::graph::op::attr::exclude_pad"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr6groupsE", "dnnl::graph::op::attr::groups"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr9keep_dimsE", "dnnl::graph::op::attr::keep_dims"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr10keep_statsE", "dnnl::graph::op::attr::keep_stats"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr6kernelE", "dnnl::graph::op::attr::kernel"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr3maxE", "dnnl::graph::op::attr::max"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr3minE", "dnnl::graph::op::attr::min"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr4modeE", "dnnl::graph::op::attr::mode"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr8momentumE", "dnnl::graph::op::attr::momentum"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr5orderE", "dnnl::graph::op::attr::order"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr14output_paddingE", "dnnl::graph::op::attr::output_padding"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr10pads_beginE", "dnnl::graph::op::attr::pads_begin"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr8pads_endE", "dnnl::graph::op::attr::pads_end"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr21per_channel_broadcastE", "dnnl::graph::op::attr::per_channel_broadcast"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr5qtypeE", "dnnl::graph::op::attr::qtype"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr13rounding_typeE", "dnnl::graph::op::attr::rounding_type"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr6scalesE", "dnnl::graph::op::attr::scales"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr5shapeE", "dnnl::graph::op::attr::shape"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr5sizesE", "dnnl::graph::op::attr::sizes"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr12special_zeroE", "dnnl::graph::op::attr::special_zero"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr9src_shapeE", "dnnl::graph::op::attr::src_shape"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr7stridesE", "dnnl::graph::op::attr::strides"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr11transpose_aE", "dnnl::graph::op::attr::transpose_a"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr11transpose_bE", "dnnl::graph::op::attr::transpose_b"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr5undefE", "dnnl::graph::op::attr::undef"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr10use_affineE", "dnnl::graph::op::attr::use_affine"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr7use_dstE", "dnnl::graph::op::attr::use_dst"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr14weights_formatE", "dnnl::graph::op::attr::weights_format"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr13weights_shapeE", "dnnl::graph::op::attr::weights_shape"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4attr3zpsE", "dnnl::graph::op::attr::zps"], [64, 9, 1, "_CPPv4N4dnnl5graph2op4kindE", "dnnl::graph::op::kind"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind3AbsE", "dnnl::graph::op::kind::Abs"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind11AbsBackwardE", "dnnl::graph::op::kind::AbsBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind3AddE", "dnnl::graph::op::kind::Add"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind7AvgPoolE", "dnnl::graph::op::kind::AvgPool"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind15AvgPoolBackwardE", "dnnl::graph::op::kind::AvgPoolBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind24BatchNormForwardTrainingE", "dnnl::graph::op::kind::BatchNormForwardTraining"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind18BatchNormInferenceE", "dnnl::graph::op::kind::BatchNormInference"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind25BatchNormTrainingBackwardE", "dnnl::graph::op::kind::BatchNormTrainingBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind7BiasAddE", "dnnl::graph::op::kind::BiasAdd"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind15BiasAddBackwardE", "dnnl::graph::op::kind::BiasAddBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind5ClampE", "dnnl::graph::op::kind::Clamp"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind13ClampBackwardE", "dnnl::graph::op::kind::ClampBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind6ConcatE", "dnnl::graph::op::kind::Concat"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind13ConvTransposeE", "dnnl::graph::op::kind::ConvTranspose"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind25ConvTransposeBackwardDataE", "dnnl::graph::op::kind::ConvTransposeBackwardData"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind28ConvTransposeBackwardWeightsE", "dnnl::graph::op::kind::ConvTransposeBackwardWeights"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind11ConvolutionE", "dnnl::graph::op::kind::Convolution"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind23ConvolutionBackwardDataE", "dnnl::graph::op::kind::ConvolutionBackwardData"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind26ConvolutionBackwardWeightsE", "dnnl::graph::op::kind::ConvolutionBackwardWeights"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind10DequantizeE", "dnnl::graph::op::kind::Dequantize"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind6DivideE", "dnnl::graph::op::kind::Divide"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind17DynamicDequantizeE", "dnnl::graph::op::kind::DynamicDequantize"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind15DynamicQuantizeE", "dnnl::graph::op::kind::DynamicQuantize"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind3EluE", "dnnl::graph::op::kind::Elu"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind11EluBackwardE", "dnnl::graph::op::kind::EluBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind3EndE", "dnnl::graph::op::kind::End"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind3ExpE", "dnnl::graph::op::kind::Exp"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind4GELUE", "dnnl::graph::op::kind::GELU"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind12GELUBackwardE", "dnnl::graph::op::kind::GELUBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind11HardSigmoidE", "dnnl::graph::op::kind::HardSigmoid"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind19HardSigmoidBackwardE", "dnnl::graph::op::kind::HardSigmoidBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind9HardSwishE", "dnnl::graph::op::kind::HardSwish"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind17HardSwishBackwardE", "dnnl::graph::op::kind::HardSwishBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind11InterpolateE", "dnnl::graph::op::kind::Interpolate"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind19InterpolateBackwardE", "dnnl::graph::op::kind::InterpolateBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind10LastSymbolE", "dnnl::graph::op::kind::LastSymbol"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind9LayerNormE", "dnnl::graph::op::kind::LayerNorm"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind17LayerNormBackwardE", "dnnl::graph::op::kind::LayerNormBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind9LeakyReLUE", "dnnl::graph::op::kind::LeakyReLU"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind3LogE", "dnnl::graph::op::kind::Log"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind10LogSoftmaxE", "dnnl::graph::op::kind::LogSoftmax"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind18LogSoftmaxBackwardE", "dnnl::graph::op::kind::LogSoftmaxBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind6MatMulE", "dnnl::graph::op::kind::MatMul"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind7MaxPoolE", "dnnl::graph::op::kind::MaxPool"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind15MaxPoolBackwardE", "dnnl::graph::op::kind::MaxPoolBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind7MaximumE", "dnnl::graph::op::kind::Maximum"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind7MinimumE", "dnnl::graph::op::kind::Minimum"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind4MishE", "dnnl::graph::op::kind::Mish"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind12MishBackwardE", "dnnl::graph::op::kind::MishBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind8MultiplyE", "dnnl::graph::op::kind::Multiply"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind5PReLUE", "dnnl::graph::op::kind::PReLU"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind13PReLUBackwardE", "dnnl::graph::op::kind::PReLUBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind3PowE", "dnnl::graph::op::kind::Pow"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind8QuantizeE", "dnnl::graph::op::kind::Quantize"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind4ReLUE", "dnnl::graph::op::kind::ReLU"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind12ReLUBackwardE", "dnnl::graph::op::kind::ReLUBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind10ReciprocalE", "dnnl::graph::op::kind::Reciprocal"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind8ReduceL1E", "dnnl::graph::op::kind::ReduceL1"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind8ReduceL2E", "dnnl::graph::op::kind::ReduceL2"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind9ReduceMaxE", "dnnl::graph::op::kind::ReduceMax"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind10ReduceMeanE", "dnnl::graph::op::kind::ReduceMean"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind9ReduceMinE", "dnnl::graph::op::kind::ReduceMin"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind10ReduceProdE", "dnnl::graph::op::kind::ReduceProd"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind9ReduceSumE", "dnnl::graph::op::kind::ReduceSum"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind7ReorderE", "dnnl::graph::op::kind::Reorder"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind5RoundE", "dnnl::graph::op::kind::Round"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind6SelectE", "dnnl::graph::op::kind::Select"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind7SigmoidE", "dnnl::graph::op::kind::Sigmoid"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind15SigmoidBackwardE", "dnnl::graph::op::kind::SigmoidBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind7SoftMaxE", "dnnl::graph::op::kind::SoftMax"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind15SoftMaxBackwardE", "dnnl::graph::op::kind::SoftMaxBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind8SoftPlusE", "dnnl::graph::op::kind::SoftPlus"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind16SoftPlusBackwardE", "dnnl::graph::op::kind::SoftPlusBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind4SqrtE", "dnnl::graph::op::kind::Sqrt"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind12SqrtBackwardE", "dnnl::graph::op::kind::SqrtBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind6SquareE", "dnnl::graph::op::kind::Square"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind17SquaredDifferenceE", "dnnl::graph::op::kind::SquaredDifference"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind13StaticReshapeE", "dnnl::graph::op::kind::StaticReshape"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind15StaticTransposeE", "dnnl::graph::op::kind::StaticTranspose"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind8SubtractE", "dnnl::graph::op::kind::Subtract"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind4TanhE", "dnnl::graph::op::kind::Tanh"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind12TanhBackwardE", "dnnl::graph::op::kind::TanhBackward"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind8TypeCastE", "dnnl::graph::op::kind::TypeCast"], [64, 10, 1, "_CPPv4N4dnnl5graph2op4kind8WildcardE", "dnnl::graph::op::kind::Wildcard"], [64, 3, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op"], [64, 3, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op"], [64, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op::akind"], [64, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::akind"], [64, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op::id"], [64, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::id"], [64, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::inputs"], [64, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op::name"], [64, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::name"], [64, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::outputs"], [64, 3, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr"], [64, 8, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr::Type"], [64, 4, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr::name"], [64, 4, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr::value"], [171, 7, 1, "_CPPv4N4dnnl12gru_backwardE", "dnnl::gru_backward"], [171, 3, 1, "_CPPv4N4dnnl12gru_backward12gru_backwardERK14primitive_desc", "dnnl::gru_backward::gru_backward"], [171, 3, 1, "_CPPv4N4dnnl12gru_backward12gru_backwardEv", "dnnl::gru_backward::gru_backward"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward12gru_backwardERK14primitive_desc", "dnnl::gru_backward::gru_backward::pd"], [171, 7, 1, "_CPPv4N4dnnl12gru_backward14primitive_descE", "dnnl::gru_backward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc9bias_descEv", "dnnl::gru_backward::primitive_desc::bias_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14diff_bias_descEv", "dnnl::gru_backward::primitive_desc::diff_bias_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::gru_backward::primitive_desc::diff_dst_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::gru_backward::primitive_desc::diff_dst_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_src_iter_descEv", "dnnl::gru_backward::primitive_desc::diff_src_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_src_layer_descEv", "dnnl::gru_backward::primitive_desc::diff_src_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::gru_backward::primitive_desc::diff_weights_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::gru_backward::primitive_desc::diff_weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13dst_iter_descEv", "dnnl::gru_backward::primitive_desc::dst_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14dst_layer_descEv", "dnnl::gru_backward::primitive_desc::dst_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_cell_kindEv", "dnnl::gru_backward::primitive_desc::get_cell_kind"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_directionEv", "dnnl::gru_backward::primitive_desc::get_direction"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_prop_kindEv", "dnnl::gru_backward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descEv", "dnnl::gru_backward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_bias_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13src_iter_descEv", "dnnl::gru_backward::primitive_desc::src_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14src_layer_descEv", "dnnl::gru_backward::primitive_desc::src_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc17weights_iter_descEv", "dnnl::gru_backward::primitive_desc::weights_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc18weights_layer_descEv", "dnnl::gru_backward::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14workspace_descEv", "dnnl::gru_backward::primitive_desc::workspace_desc"], [171, 7, 1, "_CPPv4N4dnnl11gru_forwardE", "dnnl::gru_forward"], [171, 3, 1, "_CPPv4N4dnnl11gru_forward11gru_forwardERK14primitive_desc", "dnnl::gru_forward::gru_forward"], [171, 3, 1, "_CPPv4N4dnnl11gru_forward11gru_forwardEv", "dnnl::gru_forward::gru_forward"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward11gru_forwardERK14primitive_desc", "dnnl::gru_forward::gru_forward::pd"], [171, 7, 1, "_CPPv4N4dnnl11gru_forward14primitive_descE", "dnnl::gru_forward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc9bias_descEv", "dnnl::gru_forward::primitive_desc::bias_desc"], [171, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13dst_iter_descEv", "dnnl::gru_forward::primitive_desc::dst_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc14dst_layer_descEv", "dnnl::gru_forward::primitive_desc::dst_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_cell_kindEv", "dnnl::gru_forward::primitive_desc::get_cell_kind"], [171, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_directionEv", "dnnl::gru_forward::primitive_desc::get_direction"], [171, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_prop_kindEv", "dnnl::gru_forward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descEv", "dnnl::gru_forward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13src_iter_descEv", "dnnl::gru_forward::primitive_desc::src_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc14src_layer_descEv", "dnnl::gru_forward::primitive_desc::src_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc17weights_iter_descEv", "dnnl::gru_forward::primitive_desc::weights_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc18weights_layer_descEv", "dnnl::gru_forward::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc14workspace_descEv", "dnnl::gru_forward::primitive_desc::workspace_desc"], [162, 7, 1, "_CPPv4N4dnnl27inner_product_backward_dataE", "dnnl::inner_product_backward_data"], [162, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataERK14primitive_desc", "dnnl::inner_product_backward_data::inner_product_backward_data"], [162, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataEv", "dnnl::inner_product_backward_data::inner_product_backward_data"], [162, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataERK14primitive_desc", "dnnl::inner_product_backward_data::inner_product_backward_data::pd"], [162, 7, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_descE", "dnnl::inner_product_backward_data::primitive_desc"], [162, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_dst_descEv", "dnnl::inner_product_backward_data::primitive_desc::diff_dst_desc"], [162, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_src_descEv", "dnnl::inner_product_backward_data::primitive_desc::diff_src_desc"], [162, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13get_prop_kindEv", "dnnl::inner_product_backward_data::primitive_desc::get_prop_kind"], [162, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descEv", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc"], [162, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [162, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [162, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [162, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::weights_desc"], [162, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc12weights_descEv", "dnnl::inner_product_backward_data::primitive_desc::weights_desc"], [162, 7, 1, "_CPPv4N4dnnl30inner_product_backward_weightsE", "dnnl::inner_product_backward_weights"], [162, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsERK14primitive_desc", "dnnl::inner_product_backward_weights::inner_product_backward_weights"], [162, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsEv", "dnnl::inner_product_backward_weights::inner_product_backward_weights"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsERK14primitive_desc", "dnnl::inner_product_backward_weights::inner_product_backward_weights::pd"], [162, 7, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_descE", "dnnl::inner_product_backward_weights::primitive_desc"], [162, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc14diff_bias_descEv", "dnnl::inner_product_backward_weights::primitive_desc::diff_bias_desc"], [162, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13diff_dst_descEv", "dnnl::inner_product_backward_weights::primitive_desc::diff_dst_desc"], [162, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc17diff_weights_descEv", "dnnl::inner_product_backward_weights::primitive_desc::diff_weights_desc"], [162, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13get_prop_kindEv", "dnnl::inner_product_backward_weights::primitive_desc::get_prop_kind"], [162, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descEv", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::src_desc"], [162, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::src_desc"], [162, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc8src_descEv", "dnnl::inner_product_backward_weights::primitive_desc::src_desc"], [162, 7, 1, "_CPPv4N4dnnl21inner_product_forwardE", "dnnl::inner_product_forward"], [162, 3, 1, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardERK14primitive_desc", "dnnl::inner_product_forward::inner_product_forward"], [162, 3, 1, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardEv", "dnnl::inner_product_forward::inner_product_forward"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardERK14primitive_desc", "dnnl::inner_product_forward::inner_product_forward::pd"], [162, 7, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_descE", "dnnl::inner_product_forward::primitive_desc"], [162, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc9bias_descEv", "dnnl::inner_product_forward::primitive_desc::bias_desc"], [162, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8dst_descEv", "dnnl::inner_product_forward::primitive_desc::dst_desc"], [162, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc13get_prop_kindEv", "dnnl::inner_product_forward::primitive_desc::get_prop_kind"], [162, 3, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descEv", "dnnl::inner_product_forward::primitive_desc::primitive_desc"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aprop_kind"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aprop_kind"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::bias_desc"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::dst_desc"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::dst_desc"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::src_desc"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::src_desc"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::weights_desc"], [162, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::weights_desc"], [162, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8src_descEv", "dnnl::inner_product_forward::primitive_desc::src_desc"], [162, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc12weights_descEv", "dnnl::inner_product_forward::primitive_desc::weights_desc"], [163, 7, 1, "_CPPv4N4dnnl28layer_normalization_backwardE", "dnnl::layer_normalization_backward"], [163, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardERK14primitive_desc", "dnnl::layer_normalization_backward::layer_normalization_backward"], [163, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardEv", "dnnl::layer_normalization_backward::layer_normalization_backward"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardERK14primitive_desc", "dnnl::layer_normalization_backward::layer_normalization_backward::pd"], [163, 7, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_descE", "dnnl::layer_normalization_backward::primitive_desc"], [163, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_dst_descEv", "dnnl::layer_normalization_backward::primitive_desc::diff_dst_desc"], [163, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_src_descEv", "dnnl::layer_normalization_backward::primitive_desc::diff_src_desc"], [163, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc17diff_weights_descEv", "dnnl::layer_normalization_backward::primitive_desc::diff_weights_desc"], [163, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8dst_descEv", "dnnl::layer_normalization_backward::primitive_desc::dst_desc"], [163, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc11get_epsilonEv", "dnnl::layer_normalization_backward::primitive_desc::get_epsilon"], [163, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9get_flagsEv", "dnnl::layer_normalization_backward::primitive_desc::get_flags"], [163, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13get_prop_kindEv", "dnnl::layer_normalization_backward::primitive_desc::get_prop_kind"], [163, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9mean_descEv", "dnnl::layer_normalization_backward::primitive_desc::mean_desc"], [163, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc"], [163, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc"], [163, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descEv", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aengine"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aengine"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::allow_empty"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::allow_empty"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aprop_kind"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aprop_kind"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::attr"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::attr"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_dst_desc"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_dst_desc"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_src_desc"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_src_desc"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::epsilon"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::epsilon"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::flags"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::flags"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::src_desc"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::src_desc"], [163, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::stat_desc"], [163, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8src_descEv", "dnnl::layer_normalization_backward::primitive_desc::src_desc"], [163, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13variance_descEv", "dnnl::layer_normalization_backward::primitive_desc::variance_desc"], [163, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc12weights_descEv", "dnnl::layer_normalization_backward::primitive_desc::weights_desc"], [163, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc14workspace_descEv", "dnnl::layer_normalization_backward::primitive_desc::workspace_desc"], [163, 7, 1, "_CPPv4N4dnnl27layer_normalization_forwardE", "dnnl::layer_normalization_forward"], [163, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardERK14primitive_desc", "dnnl::layer_normalization_forward::layer_normalization_forward"], [163, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardEv", "dnnl::layer_normalization_forward::layer_normalization_forward"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardERK14primitive_desc", "dnnl::layer_normalization_forward::layer_normalization_forward::pd"], [163, 7, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_descE", "dnnl::layer_normalization_forward::primitive_desc"], [163, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8dst_descEv", "dnnl::layer_normalization_forward::primitive_desc::dst_desc"], [163, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc11get_epsilonEv", "dnnl::layer_normalization_forward::primitive_desc::get_epsilon"], [163, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9get_flagsEv", "dnnl::layer_normalization_forward::primitive_desc::get_flags"], [163, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13get_prop_kindEv", "dnnl::layer_normalization_forward::primitive_desc::get_prop_kind"], [163, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9mean_descEv", "dnnl::layer_normalization_forward::primitive_desc::mean_desc"], [163, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc"], [163, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc"], [163, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descEv", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aengine"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aengine"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::allow_empty"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::allow_empty"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aprop_kind"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aprop_kind"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::attr"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::attr"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::dst_desc"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::dst_desc"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::epsilon"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::epsilon"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::flags"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::flags"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::src_desc"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::src_desc"], [163, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::stat_desc"], [163, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8src_descEv", "dnnl::layer_normalization_forward::primitive_desc::src_desc"], [163, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13variance_descEv", "dnnl::layer_normalization_forward::primitive_desc::variance_desc"], [163, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc12weights_descEv", "dnnl::layer_normalization_forward::primitive_desc::weights_desc"], [163, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc14workspace_descEv", "dnnl::layer_normalization_forward::primitive_desc::workspace_desc"], [171, 7, 1, "_CPPv4N4dnnl16lbr_gru_backwardE", "dnnl::lbr_gru_backward"], [171, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardERK14primitive_desc", "dnnl::lbr_gru_backward::lbr_gru_backward"], [171, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardEv", "dnnl::lbr_gru_backward::lbr_gru_backward"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardERK14primitive_desc", "dnnl::lbr_gru_backward::lbr_gru_backward::pd"], [171, 7, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_descE", "dnnl::lbr_gru_backward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc9bias_descEv", "dnnl::lbr_gru_backward::primitive_desc::bias_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14diff_bias_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_bias_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_dst_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_dst_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_src_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_src_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_src_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_src_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_weights_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13dst_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::dst_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14dst_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::dst_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_cell_kindEv", "dnnl::lbr_gru_backward::primitive_desc::get_cell_kind"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_directionEv", "dnnl::lbr_gru_backward::primitive_desc::get_direction"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_prop_kindEv", "dnnl::lbr_gru_backward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descEv", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_bias_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13src_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::src_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14src_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::src_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc17weights_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::weights_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18weights_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14workspace_descEv", "dnnl::lbr_gru_backward::primitive_desc::workspace_desc"], [171, 7, 1, "_CPPv4N4dnnl15lbr_gru_forwardE", "dnnl::lbr_gru_forward"], [171, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardERK14primitive_desc", "dnnl::lbr_gru_forward::lbr_gru_forward"], [171, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardEv", "dnnl::lbr_gru_forward::lbr_gru_forward"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardERK14primitive_desc", "dnnl::lbr_gru_forward::lbr_gru_forward::pd"], [171, 7, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_descE", "dnnl::lbr_gru_forward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc9bias_descEv", "dnnl::lbr_gru_forward::primitive_desc::bias_desc"], [171, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13dst_iter_descEv", "dnnl::lbr_gru_forward::primitive_desc::dst_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14dst_layer_descEv", "dnnl::lbr_gru_forward::primitive_desc::dst_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_cell_kindEv", "dnnl::lbr_gru_forward::primitive_desc::get_cell_kind"], [171, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_directionEv", "dnnl::lbr_gru_forward::primitive_desc::get_direction"], [171, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_prop_kindEv", "dnnl::lbr_gru_forward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descEv", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13src_iter_descEv", "dnnl::lbr_gru_forward::primitive_desc::src_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14src_layer_descEv", "dnnl::lbr_gru_forward::primitive_desc::src_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc17weights_iter_descEv", "dnnl::lbr_gru_forward::primitive_desc::weights_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc18weights_layer_descEv", "dnnl::lbr_gru_forward::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14workspace_descEv", "dnnl::lbr_gru_forward::primitive_desc::workspace_desc"], [164, 7, 1, "_CPPv4N4dnnl12lrn_backwardE", "dnnl::lrn_backward"], [164, 3, 1, "_CPPv4N4dnnl12lrn_backward12lrn_backwardERK14primitive_desc", "dnnl::lrn_backward::lrn_backward"], [164, 3, 1, "_CPPv4N4dnnl12lrn_backward12lrn_backwardEv", "dnnl::lrn_backward::lrn_backward"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward12lrn_backwardERK14primitive_desc", "dnnl::lrn_backward::lrn_backward::pd"], [164, 7, 1, "_CPPv4N4dnnl12lrn_backward14primitive_descE", "dnnl::lrn_backward::primitive_desc"], [164, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_dst_descEv", "dnnl::lrn_backward::primitive_desc::diff_dst_desc"], [164, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_src_descEv", "dnnl::lrn_backward::primitive_desc::diff_src_desc"], [164, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_algorithmEv", "dnnl::lrn_backward::primitive_desc::get_algorithm"], [164, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc9get_alphaEv", "dnnl::lrn_backward::primitive_desc::get_alpha"], [164, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc8get_betaEv", "dnnl::lrn_backward::primitive_desc::get_beta"], [164, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc5get_kEv", "dnnl::lrn_backward::primitive_desc::get_k"], [164, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14get_local_sizeEv", "dnnl::lrn_backward::primitive_desc::get_local_size"], [164, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_prop_kindEv", "dnnl::lrn_backward::primitive_desc::get_prop_kind"], [164, 3, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc"], [164, 3, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descEv", "dnnl::lrn_backward::primitive_desc::primitive_desc"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::aalgorithm"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::aengine"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::allow_empty"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::alpha"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::attr"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::beta"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::diff_dst_desc"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::diff_src_desc"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::k"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::local_size"], [164, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::src_desc"], [164, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14workspace_descEv", "dnnl::lrn_backward::primitive_desc::workspace_desc"], [164, 7, 1, "_CPPv4N4dnnl11lrn_forwardE", "dnnl::lrn_forward"], [164, 3, 1, "_CPPv4N4dnnl11lrn_forward11lrn_forwardERK14primitive_desc", "dnnl::lrn_forward::lrn_forward"], [164, 3, 1, "_CPPv4N4dnnl11lrn_forward11lrn_forwardEv", "dnnl::lrn_forward::lrn_forward"], [164, 4, 1, "_CPPv4N4dnnl11lrn_forward11lrn_forwardERK14primitive_desc", "dnnl::lrn_forward::lrn_forward::pd"], [164, 7, 1, "_CPPv4N4dnnl11lrn_forward14primitive_descE", "dnnl::lrn_forward::primitive_desc"], [164, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8dst_descEv", "dnnl::lrn_forward::primitive_desc::dst_desc"], [164, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_algorithmEv", "dnnl::lrn_forward::primitive_desc::get_algorithm"], [164, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc9get_alphaEv", "dnnl::lrn_forward::primitive_desc::get_alpha"], [164, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8get_betaEv", "dnnl::lrn_forward::primitive_desc::get_beta"], [164, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc5get_kEv", "dnnl::lrn_forward::primitive_desc::get_k"], [164, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14get_local_sizeEv", "dnnl::lrn_forward::primitive_desc::get_local_size"], [164, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_prop_kindEv", "dnnl::lrn_forward::primitive_desc::get_prop_kind"], [164, 3, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc"], [164, 3, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descEv", "dnnl::lrn_forward::primitive_desc::primitive_desc"], [164, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::aalgorithm"], [164, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::aengine"], [164, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::allow_empty"], [164, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::alpha"], [164, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::aprop_kind"], [164, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::attr"], [164, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::beta"], [164, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::dst_desc"], [164, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::k"], [164, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::local_size"], [164, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::src_desc"], [164, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8src_descEv", "dnnl::lrn_forward::primitive_desc::src_desc"], [164, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14workspace_descEv", "dnnl::lrn_forward::primitive_desc::workspace_desc"], [171, 7, 1, "_CPPv4N4dnnl13lstm_backwardE", "dnnl::lstm_backward"], [171, 3, 1, "_CPPv4N4dnnl13lstm_backward13lstm_backwardERK14primitive_desc", "dnnl::lstm_backward::lstm_backward"], [171, 3, 1, "_CPPv4N4dnnl13lstm_backward13lstm_backwardEv", "dnnl::lstm_backward::lstm_backward"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward13lstm_backwardERK14primitive_desc", "dnnl::lstm_backward::lstm_backward::pd"], [171, 7, 1, "_CPPv4N4dnnl13lstm_backward14primitive_descE", "dnnl::lstm_backward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc9bias_descEv", "dnnl::lstm_backward::primitive_desc::bias_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14diff_bias_descEv", "dnnl::lstm_backward::primitive_desc::diff_bias_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_dst_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::diff_dst_iter_c_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::lstm_backward::primitive_desc::diff_dst_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::lstm_backward::primitive_desc::diff_dst_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_src_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::diff_src_iter_c_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_src_iter_descEv", "dnnl::lstm_backward::primitive_desc::diff_src_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_src_layer_descEv", "dnnl::lstm_backward::primitive_desc::diff_src_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc26diff_weights_peephole_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_peephole_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc28diff_weights_projection_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_projection_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15dst_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::dst_iter_c_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13dst_iter_descEv", "dnnl::lstm_backward::primitive_desc::dst_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14dst_layer_descEv", "dnnl::lstm_backward::primitive_desc::dst_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_cell_kindEv", "dnnl::lstm_backward::primitive_desc::get_cell_kind"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_directionEv", "dnnl::lstm_backward::primitive_desc::get_direction"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_prop_kindEv", "dnnl::lstm_backward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descEv", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_bias_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_bias_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_bias_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_peephole_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_peephole_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_projection_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_peephole_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_peephole_desc"], [171, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_projection_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15src_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::src_iter_c_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13src_iter_descEv", "dnnl::lstm_backward::primitive_desc::src_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14src_layer_descEv", "dnnl::lstm_backward::primitive_desc::src_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc17weights_iter_descEv", "dnnl::lstm_backward::primitive_desc::weights_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18weights_layer_descEv", "dnnl::lstm_backward::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc21weights_peephole_descEv", "dnnl::lstm_backward::primitive_desc::weights_peephole_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23weights_projection_descEv", "dnnl::lstm_backward::primitive_desc::weights_projection_desc"], [171, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14workspace_descEv", "dnnl::lstm_backward::primitive_desc::workspace_desc"], [171, 7, 1, "_CPPv4N4dnnl12lstm_forwardE", "dnnl::lstm_forward"], [171, 3, 1, "_CPPv4N4dnnl12lstm_forward12lstm_forwardERK14primitive_desc", "dnnl::lstm_forward::lstm_forward"], [171, 3, 1, "_CPPv4N4dnnl12lstm_forward12lstm_forwardEv", "dnnl::lstm_forward::lstm_forward"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward12lstm_forwardERK14primitive_desc", "dnnl::lstm_forward::lstm_forward::pd"], [171, 7, 1, "_CPPv4N4dnnl12lstm_forward14primitive_descE", "dnnl::lstm_forward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc9bias_descEv", "dnnl::lstm_forward::primitive_desc::bias_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15dst_iter_c_descEv", "dnnl::lstm_forward::primitive_desc::dst_iter_c_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13dst_iter_descEv", "dnnl::lstm_forward::primitive_desc::dst_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14dst_layer_descEv", "dnnl::lstm_forward::primitive_desc::dst_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_cell_kindEv", "dnnl::lstm_forward::primitive_desc::get_cell_kind"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_directionEv", "dnnl::lstm_forward::primitive_desc::get_direction"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_prop_kindEv", "dnnl::lstm_forward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descEv", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_c_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_peephole_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_peephole_desc"], [171, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_projection_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15src_iter_c_descEv", "dnnl::lstm_forward::primitive_desc::src_iter_c_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13src_iter_descEv", "dnnl::lstm_forward::primitive_desc::src_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14src_layer_descEv", "dnnl::lstm_forward::primitive_desc::src_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc17weights_iter_descEv", "dnnl::lstm_forward::primitive_desc::weights_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc18weights_layer_descEv", "dnnl::lstm_forward::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc21weights_peephole_descEv", "dnnl::lstm_forward::primitive_desc::weights_peephole_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc23weights_projection_descEv", "dnnl::lstm_forward::primitive_desc::weights_projection_desc"], [171, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14workspace_descEv", "dnnl::lstm_forward::primitive_desc::workspace_desc"], [165, 7, 1, "_CPPv4N4dnnl6matmulE", "dnnl::matmul"], [165, 3, 1, "_CPPv4N4dnnl6matmul6matmulERK14primitive_desc", "dnnl::matmul::matmul"], [165, 3, 1, "_CPPv4N4dnnl6matmul6matmulEv", "dnnl::matmul::matmul"], [165, 4, 1, "_CPPv4N4dnnl6matmul6matmulERK14primitive_desc", "dnnl::matmul::matmul::pd"], [165, 7, 1, "_CPPv4N4dnnl6matmul14primitive_descE", "dnnl::matmul::primitive_desc"], [165, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc9bias_descEv", "dnnl::matmul::primitive_desc::bias_desc"], [165, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc8dst_descEv", "dnnl::matmul::primitive_desc::dst_desc"], [165, 3, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc"], [165, 3, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc"], [165, 3, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descEv", "dnnl::matmul::primitive_desc::primitive_desc"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::aengine"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::aengine"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::allow_empty"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::allow_empty"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::attr"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::attr"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::bias_desc"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::dst_desc"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::dst_desc"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::src_desc"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::src_desc"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::weights_desc"], [165, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::weights_desc"], [165, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc8src_descEv", "dnnl::matmul::primitive_desc::src_desc"], [165, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc12weights_descEv", "dnnl::matmul::primitive_desc::weights_desc"], [61, 7, 1, "_CPPv4N4dnnl6memoryE", "dnnl::memory"], [56, 9, 1, "_CPPv4N4dnnl6memory9data_typeE", "dnnl::memory::data_type"], [56, 10, 1, "_CPPv4N4dnnl6memory9data_type4bf16E", "dnnl::memory::data_type::bf16"], [56, 10, 1, "_CPPv4N4dnnl6memory9data_type3f16E", "dnnl::memory::data_type::f16"], [56, 10, 1, "_CPPv4N4dnnl6memory9data_type3f32E", "dnnl::memory::data_type::f32"], [56, 10, 1, "_CPPv4N4dnnl6memory9data_type3s32E", "dnnl::memory::data_type::s32"], [56, 10, 1, "_CPPv4N4dnnl6memory9data_type2s8E", "dnnl::memory::data_type::s8"], [56, 10, 1, "_CPPv4N4dnnl6memory9data_type2u8E", "dnnl::memory::data_type::u8"], [56, 10, 1, "_CPPv4N4dnnl6memory9data_type5undefE", "dnnl::memory::data_type::undef"], [61, 7, 1, "_CPPv4N4dnnl6memory4descE", "dnnl::memory::desc"], [61, 3, 1, "_CPPv4NK4dnnl6memory4desc9data_typeEv", "dnnl::memory::desc::data_type"], [61, 3, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc"], [61, 3, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc"], [61, 3, 1, "_CPPv4N4dnnl6memory4desc4descEv", "dnnl::memory::desc::desc"], [61, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::adata_type"], [61, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::adata_type"], [61, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::adims"], [61, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::adims"], [61, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::aformat_tag"], [61, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::allow_empty"], [61, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::allow_empty"], [61, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::strides"], [61, 3, 1, "_CPPv4NK4dnnl6memory4desc4dimsEv", "dnnl::memory::desc::dims"], [61, 3, 1, "_CPPv4NK4dnnl6memory4desc8get_sizeEv", "dnnl::memory::desc::get_size"], [61, 3, 1, "_CPPv4NK4dnnl6memory4desc7is_zeroEv", "dnnl::memory::desc::is_zero"], [61, 3, 1, "_CPPv4NK4dnnl6memory4descneERK4desc", "dnnl::memory::desc::operator!="], [61, 4, 1, "_CPPv4NK4dnnl6memory4descneERK4desc", "dnnl::memory::desc::operator!=::other"], [61, 3, 1, "_CPPv4NK4dnnl6memory4desceqERK4desc", "dnnl::memory::desc::operator=="], [61, 4, 1, "_CPPv4NK4dnnl6memory4desceqERK4desc", "dnnl::memory::desc::operator==::other"], [61, 3, 1, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb", "dnnl::memory::desc::permute_axes"], [61, 4, 1, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb", "dnnl::memory::desc::permute_axes::allow_empty"], [61, 4, 1, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb", "dnnl::memory::desc::permute_axes::permutation"], [61, 3, 1, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb", "dnnl::memory::desc::reshape"], [61, 4, 1, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb", "dnnl::memory::desc::reshape::adims"], [61, 4, 1, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb", "dnnl::memory::desc::reshape::allow_empty"], [61, 3, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc"], [61, 4, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc::adims"], [61, 4, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc::allow_empty"], [61, 4, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc::offsets"], [60, 5, 1, "_CPPv4N4dnnl6memory3dimE", "dnnl::memory::dim"], [60, 5, 1, "_CPPv4N4dnnl6memory4dimsE", "dnnl::memory::dims"], [59, 9, 1, "_CPPv4N4dnnl6memory10format_tagE", "dnnl::memory::format_tag"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag1aE", "dnnl::memory::format_tag::a"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag2abE", "dnnl::memory::format_tag::ab"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3abcE", "dnnl::memory::format_tag::abc"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4abcdE", "dnnl::memory::format_tag::abcd"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5abcdeE", "dnnl::memory::format_tag::abcde"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag6abcdefE", "dnnl::memory::format_tag::abcdef"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4abdcE", "dnnl::memory::format_tag::abdc"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5abdecE", "dnnl::memory::format_tag::abdec"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3acbE", "dnnl::memory::format_tag::acb"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5acbdeE", "dnnl::memory::format_tag::acbde"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag6acbdefE", "dnnl::memory::format_tag::acbdef"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4acdbE", "dnnl::memory::format_tag::acdb"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5acdebE", "dnnl::memory::format_tag::acdeb"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3anyE", "dnnl::memory::format_tag::any"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag2baE", "dnnl::memory::format_tag::ba"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3bacE", "dnnl::memory::format_tag::bac"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4bacdE", "dnnl::memory::format_tag::bacd"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5bacdeE", "dnnl::memory::format_tag::bacde"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3bcaE", "dnnl::memory::format_tag::bca"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4bcdaE", "dnnl::memory::format_tag::bcda"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5bcdeaE", "dnnl::memory::format_tag::bcdea"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3cbaE", "dnnl::memory::format_tag::cba"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4cdbaE", "dnnl::memory::format_tag::cdba"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5cdebaE", "dnnl::memory::format_tag::cdeba"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4chwnE", "dnnl::memory::format_tag::chwn"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag2cnE", "dnnl::memory::format_tag::cn"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4dcabE", "dnnl::memory::format_tag::dcab"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5decabE", "dnnl::memory::format_tag::decab"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag6defcabE", "dnnl::memory::format_tag::defcab"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag6dhwigoE", "dnnl::memory::format_tag::dhwigo"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5dhwioE", "dnnl::memory::format_tag::dhwio"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag6giodhwE", "dnnl::memory::format_tag::giodhw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5giohwE", "dnnl::memory::format_tag::giohw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag6goidhwE", "dnnl::memory::format_tag::goidhw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5goihwE", "dnnl::memory::format_tag::goihw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4goiwE", "dnnl::memory::format_tag::goiw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5hwigoE", "dnnl::memory::format_tag::hwigo"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4hwioE", "dnnl::memory::format_tag::hwio"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5idhwoE", "dnnl::memory::format_tag::idhwo"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ihwoE", "dnnl::memory::format_tag::ihwo"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag2ioE", "dnnl::memory::format_tag::io"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5iodhwE", "dnnl::memory::format_tag::iodhw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4iohwE", "dnnl::memory::format_tag::iohw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3iwoE", "dnnl::memory::format_tag::iwo"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldgoE", "dnnl::memory::format_tag::ldgo"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ldgoiE", "dnnl::memory::format_tag::ldgoi"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ldigoE", "dnnl::memory::format_tag::ldigo"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldioE", "dnnl::memory::format_tag::ldio"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldncE", "dnnl::memory::format_tag::ldnc"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldoiE", "dnnl::memory::format_tag::ldoi"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag2ncE", "dnnl::memory::format_tag::nc"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ncdhwE", "dnnl::memory::format_tag::ncdhw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4nchwE", "dnnl::memory::format_tag::nchw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3ncwE", "dnnl::memory::format_tag::ncw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ndhwcE", "dnnl::memory::format_tag::ndhwc"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4nhwcE", "dnnl::memory::format_tag::nhwc"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag2ntE", "dnnl::memory::format_tag::nt"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3ntcE", "dnnl::memory::format_tag::ntc"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3nwcE", "dnnl::memory::format_tag::nwc"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5odhwiE", "dnnl::memory::format_tag::odhwi"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ohwiE", "dnnl::memory::format_tag::ohwi"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag2oiE", "dnnl::memory::format_tag::oi"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5oidhwE", "dnnl::memory::format_tag::oidhw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4oihwE", "dnnl::memory::format_tag::oihw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3oiwE", "dnnl::memory::format_tag::oiw"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3owiE", "dnnl::memory::format_tag::owi"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag2tnE", "dnnl::memory::format_tag::tn"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3tncE", "dnnl::memory::format_tag::tnc"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag5undefE", "dnnl::memory::format_tag::undef"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag4wigoE", "dnnl::memory::format_tag::wigo"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag3wioE", "dnnl::memory::format_tag::wio"], [59, 10, 1, "_CPPv4N4dnnl6memory10format_tag1xE", "dnnl::memory::format_tag::x"], [61, 3, 1, "_CPPv4NK4dnnl6memory15get_data_handleEv", "dnnl::memory::get_data_handle"], [61, 3, 1, "_CPPv4NK4dnnl6memory8get_descEv", "dnnl::memory::get_desc"], [61, 3, 1, "_CPPv4NK4dnnl6memory10get_engineEv", "dnnl::memory::get_engine"], [61, 3, 1, "_CPPv4I0ENK4dnnl6memory8map_dataEP1Tv", "dnnl::memory::map_data"], [61, 8, 1, "_CPPv4I0ENK4dnnl6memory8map_dataEP1Tv", "dnnl::memory::map_data::T"], [61, 3, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine", "dnnl::memory::memory"], [61, 3, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory"], [61, 3, 1, "_CPPv4N4dnnl6memory6memoryEv", "dnnl::memory::memory"], [61, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine", "dnnl::memory::memory::aengine"], [61, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory::aengine"], [61, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory::handle"], [61, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine", "dnnl::memory::memory::md"], [61, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory::md"], [61, 3, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPv", "dnnl::memory::set_data_handle"], [61, 3, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream", "dnnl::memory::set_data_handle"], [61, 4, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream", "dnnl::memory::set_data_handle::astream"], [61, 4, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPv", "dnnl::memory::set_data_handle::handle"], [61, 4, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream", "dnnl::memory::set_data_handle::handle"], [61, 3, 1, "_CPPv4NK4dnnl6memory10unmap_dataEPv", "dnnl::memory::unmap_data"], [61, 4, 1, "_CPPv4NK4dnnl6memory10unmap_dataEPv", "dnnl::memory::unmap_data::mapped_ptr"], [160, 9, 1, "_CPPv4N4dnnl19normalization_flagsE", "dnnl::normalization_flags"], [160, 10, 1, "_CPPv4N4dnnl19normalization_flags14fuse_norm_reluE", "dnnl::normalization_flags::fuse_norm_relu"], [160, 10, 1, "_CPPv4N4dnnl19normalization_flags4noneE", "dnnl::normalization_flags::none"], [160, 10, 1, "_CPPv4N4dnnl19normalization_flags16use_global_statsE", "dnnl::normalization_flags::use_global_stats"], [160, 10, 1, "_CPPv4N4dnnl19normalization_flags9use_scaleE", "dnnl::normalization_flags::use_scale"], [160, 10, 1, "_CPPv4N4dnnl19normalization_flags9use_shiftE", "dnnl::normalization_flags::use_shift"], [166, 7, 1, "_CPPv4N4dnnl16pooling_backwardE", "dnnl::pooling_backward"], [166, 3, 1, "_CPPv4N4dnnl16pooling_backward16pooling_backwardERK14primitive_desc", "dnnl::pooling_backward::pooling_backward"], [166, 3, 1, "_CPPv4N4dnnl16pooling_backward16pooling_backwardEv", "dnnl::pooling_backward::pooling_backward"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward16pooling_backwardERK14primitive_desc", "dnnl::pooling_backward::pooling_backward::pd"], [166, 7, 1, "_CPPv4N4dnnl16pooling_backward14primitive_descE", "dnnl::pooling_backward::primitive_desc"], [166, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_dst_descEv", "dnnl::pooling_backward::primitive_desc::diff_dst_desc"], [166, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_src_descEv", "dnnl::pooling_backward::primitive_desc::diff_src_desc"], [166, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_algorithmEv", "dnnl::pooling_backward::primitive_desc::get_algorithm"], [166, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_dilationsEv", "dnnl::pooling_backward::primitive_desc::get_dilations"], [166, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc10get_kernelEv", "dnnl::pooling_backward::primitive_desc::get_kernel"], [166, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_lEv", "dnnl::pooling_backward::primitive_desc::get_padding_l"], [166, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_rEv", "dnnl::pooling_backward::primitive_desc::get_padding_r"], [166, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_prop_kindEv", "dnnl::pooling_backward::primitive_desc::get_prop_kind"], [166, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc11get_stridesEv", "dnnl::pooling_backward::primitive_desc::get_strides"], [166, 3, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc"], [166, 3, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descEv", "dnnl::pooling_backward::primitive_desc::primitive_desc"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::aalgorithm"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::aengine"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::allow_empty"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::attr"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::diff_dst_desc"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::diff_src_desc"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::dilation"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::kernel"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::padding_l"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::padding_r"], [166, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::strides"], [166, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc14workspace_descEv", "dnnl::pooling_backward::primitive_desc::workspace_desc"], [166, 7, 1, "_CPPv4N4dnnl15pooling_forwardE", "dnnl::pooling_forward"], [166, 3, 1, "_CPPv4N4dnnl15pooling_forward15pooling_forwardERK14primitive_desc", "dnnl::pooling_forward::pooling_forward"], [166, 3, 1, "_CPPv4N4dnnl15pooling_forward15pooling_forwardEv", "dnnl::pooling_forward::pooling_forward"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward15pooling_forwardERK14primitive_desc", "dnnl::pooling_forward::pooling_forward::pd"], [166, 7, 1, "_CPPv4N4dnnl15pooling_forward14primitive_descE", "dnnl::pooling_forward::primitive_desc"], [166, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8dst_descEv", "dnnl::pooling_forward::primitive_desc::dst_desc"], [166, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_algorithmEv", "dnnl::pooling_forward::primitive_desc::get_algorithm"], [166, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_dilationsEv", "dnnl::pooling_forward::primitive_desc::get_dilations"], [166, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc10get_kernelEv", "dnnl::pooling_forward::primitive_desc::get_kernel"], [166, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_lEv", "dnnl::pooling_forward::primitive_desc::get_padding_l"], [166, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_rEv", "dnnl::pooling_forward::primitive_desc::get_padding_r"], [166, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_prop_kindEv", "dnnl::pooling_forward::primitive_desc::get_prop_kind"], [166, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc11get_stridesEv", "dnnl::pooling_forward::primitive_desc::get_strides"], [166, 3, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc"], [166, 3, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descEv", "dnnl::pooling_forward::primitive_desc::primitive_desc"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::aalgorithm"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::aengine"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::allow_empty"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::aprop_kind"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::attr"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::dilation"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::dst_desc"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::kernel"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::padding_l"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::padding_r"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::src_desc"], [166, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::strides"], [166, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8src_descEv", "dnnl::pooling_forward::primitive_desc::src_desc"], [166, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc14workspace_descEv", "dnnl::pooling_forward::primitive_desc::workspace_desc"], [154, 7, 1, "_CPPv4N4dnnl8post_opsE", "dnnl::post_ops"], [154, 3, 1, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE", "dnnl::post_ops::append_binary"], [154, 4, 1, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE", "dnnl::post_ops::append_binary::aalgorithm"], [154, 4, 1, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE", "dnnl::post_ops::append_binary::src1_desc"], [154, 3, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise"], [154, 4, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise::aalgorithm"], [154, 4, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise::alpha"], [154, 4, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise::beta"], [154, 3, 1, "_CPPv4N4dnnl8post_ops10append_sumEN6memory9data_typeE", "dnnl::post_ops::append_sum"], [154, 4, 1, "_CPPv4N4dnnl8post_ops10append_sumEN6memory9data_typeE", "dnnl::post_ops::append_sum::data_type"], [154, 3, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary::aalgorithm"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary::index"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary::src1_desc"], [154, 3, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::aalgorithm"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::alpha"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::beta"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::index"], [154, 3, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf", "dnnl::post_ops::get_params_sum"], [154, 3, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum::data_type"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf", "dnnl::post_ops::get_params_sum::index"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum::index"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf", "dnnl::post_ops::get_params_sum::scale"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum::scale"], [154, 3, 1, "_CPPv4NK4dnnl8post_ops4kindEi", "dnnl::post_ops::kind"], [154, 4, 1, "_CPPv4NK4dnnl8post_ops4kindEi", "dnnl::post_ops::kind::index"], [154, 3, 1, "_CPPv4NK4dnnl8post_ops3lenEv", "dnnl::post_ops::len"], [154, 3, 1, "_CPPv4N4dnnl8post_ops8post_opsEv", "dnnl::post_ops::post_ops"], [167, 7, 1, "_CPPv4N4dnnl14prelu_backwardE", "dnnl::prelu_backward"], [167, 3, 1, "_CPPv4N4dnnl14prelu_backward14prelu_backwardERK14primitive_desc", "dnnl::prelu_backward::prelu_backward"], [167, 3, 1, "_CPPv4N4dnnl14prelu_backward14prelu_backwardEv", "dnnl::prelu_backward::prelu_backward"], [167, 4, 1, "_CPPv4N4dnnl14prelu_backward14prelu_backwardERK14primitive_desc", "dnnl::prelu_backward::prelu_backward::pd"], [167, 7, 1, "_CPPv4N4dnnl14prelu_backward14primitive_descE", "dnnl::prelu_backward::primitive_desc"], [167, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_dst_descEv", "dnnl::prelu_backward::primitive_desc::diff_dst_desc"], [167, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_src_descEv", "dnnl::prelu_backward::primitive_desc::diff_src_desc"], [167, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13get_prop_kindEv", "dnnl::prelu_backward::primitive_desc::get_prop_kind"], [167, 3, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc"], [167, 3, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descEv", "dnnl::prelu_backward::primitive_desc::primitive_desc"], [167, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::aengine"], [167, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::allow_empty"], [167, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::attr"], [167, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::diff_dst_desc"], [167, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::diff_src_desc"], [167, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::diff_weights_desc"], [167, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [167, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::src_desc"], [167, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::weight_desc"], [167, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc8src_descEv", "dnnl::prelu_backward::primitive_desc::src_desc"], [167, 7, 1, "_CPPv4N4dnnl13prelu_forwardE", "dnnl::prelu_forward"], [167, 3, 1, "_CPPv4N4dnnl13prelu_forward13prelu_forwardERK14primitive_desc", "dnnl::prelu_forward::prelu_forward"], [167, 3, 1, "_CPPv4N4dnnl13prelu_forward13prelu_forwardEv", "dnnl::prelu_forward::prelu_forward"], [167, 4, 1, "_CPPv4N4dnnl13prelu_forward13prelu_forwardERK14primitive_desc", "dnnl::prelu_forward::prelu_forward::pd"], [167, 7, 1, "_CPPv4N4dnnl13prelu_forward14primitive_descE", "dnnl::prelu_forward::primitive_desc"], [167, 3, 1, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8dst_descEv", "dnnl::prelu_forward::primitive_desc::dst_desc"], [167, 3, 1, "_CPPv4NK4dnnl13prelu_forward14primitive_desc13get_prop_kindEv", "dnnl::prelu_forward::primitive_desc::get_prop_kind"], [167, 3, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc"], [167, 3, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descEv", "dnnl::prelu_forward::primitive_desc::primitive_desc"], [167, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::aengine"], [167, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::allow_empty"], [167, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::aprop_kind"], [167, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::attr"], [167, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::dst_desc"], [167, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::src_desc"], [167, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::weight_desc"], [167, 3, 1, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8src_descEv", "dnnl::prelu_forward::primitive_desc::src_desc"], [160, 7, 1, "_CPPv4N4dnnl9primitiveE", "dnnl::primitive"], [160, 3, 1, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE", "dnnl::primitive::execute"], [160, 4, 1, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE", "dnnl::primitive::execute::args"], [160, 4, 1, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE", "dnnl::primitive::execute::astream"], [160, 3, 1, "_CPPv4NK4dnnl9primitive8get_kindEv", "dnnl::primitive::get_kind"], [160, 9, 1, "_CPPv4N4dnnl9primitive4kindE", "dnnl::primitive::kind"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind19batch_normalizationE", "dnnl::primitive::kind::batch_normalization"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind6binaryE", "dnnl::primitive::kind::binary"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind6concatE", "dnnl::primitive::kind::concat"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind11convolutionE", "dnnl::primitive::kind::convolution"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind13deconvolutionE", "dnnl::primitive::kind::deconvolution"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind7eltwiseE", "dnnl::primitive::kind::eltwise"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind13inner_productE", "dnnl::primitive::kind::inner_product"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind19layer_normalizationE", "dnnl::primitive::kind::layer_normalization"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind3lrnE", "dnnl::primitive::kind::lrn"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind6matmulE", "dnnl::primitive::kind::matmul"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind7poolingE", "dnnl::primitive::kind::pooling"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind5preluE", "dnnl::primitive::kind::prelu"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind7reorderE", "dnnl::primitive::kind::reorder"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind10resamplingE", "dnnl::primitive::kind::resampling"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind3rnnE", "dnnl::primitive::kind::rnn"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind7shuffleE", "dnnl::primitive::kind::shuffle"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind7softmaxE", "dnnl::primitive::kind::softmax"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind3sumE", "dnnl::primitive::kind::sum"], [160, 10, 1, "_CPPv4N4dnnl9primitive4kind5undefE", "dnnl::primitive::kind::undef"], [160, 3, 1, "_CPPv4N4dnnl9primitiveaSERK9primitive", "dnnl::primitive::operator="], [160, 4, 1, "_CPPv4N4dnnl9primitiveaSERK9primitive", "dnnl::primitive::operator=::rhs"], [160, 3, 1, "_CPPv4N4dnnl9primitive9primitiveERK19primitive_desc_base", "dnnl::primitive::primitive"], [160, 3, 1, "_CPPv4N4dnnl9primitive9primitiveEv", "dnnl::primitive::primitive"], [160, 4, 1, "_CPPv4N4dnnl9primitive9primitiveERK19primitive_desc_base", "dnnl::primitive::primitive::pd"], [153, 7, 1, "_CPPv4N4dnnl14primitive_attrE", "dnnl::primitive_attr"], [153, 3, 1, "_CPPv4NK4dnnl14primitive_attr15get_fpmath_modeEv", "dnnl::primitive_attr::get_fpmath_mode"], [153, 3, 1, "_CPPv4NK4dnnl14primitive_attr12get_post_opsEv", "dnnl::primitive_attr::get_post_ops"], [153, 3, 1, "_CPPv4NK4dnnl14primitive_attr15get_scales_maskEi", "dnnl::primitive_attr::get_scales_mask"], [153, 4, 1, "_CPPv4NK4dnnl14primitive_attr15get_scales_maskEi", "dnnl::primitive_attr::get_scales_mask::arg"], [153, 3, 1, "_CPPv4NK4dnnl14primitive_attr19get_scratchpad_modeEv", "dnnl::primitive_attr::get_scratchpad_mode"], [153, 3, 1, "_CPPv4N4dnnl14primitive_attr14primitive_attrEv", "dnnl::primitive_attr::primitive_attr"], [153, 3, 1, "_CPPv4N4dnnl14primitive_attr15set_fpmath_modeE11fpmath_mode", "dnnl::primitive_attr::set_fpmath_mode"], [153, 4, 1, "_CPPv4N4dnnl14primitive_attr15set_fpmath_modeE11fpmath_mode", "dnnl::primitive_attr::set_fpmath_mode::mode"], [153, 3, 1, "_CPPv4N4dnnl14primitive_attr12set_post_opsEK8post_ops", "dnnl::primitive_attr::set_post_ops"], [153, 4, 1, "_CPPv4N4dnnl14primitive_attr12set_post_opsEK8post_ops", "dnnl::primitive_attr::set_post_ops::ops"], [153, 3, 1, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff", "dnnl::primitive_attr::set_rnn_data_qparams"], [153, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff", "dnnl::primitive_attr::set_rnn_data_qparams::scale"], [153, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff", "dnnl::primitive_attr::set_rnn_data_qparams::shift"], [153, 3, 1, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE", "dnnl::primitive_attr::set_rnn_weights_qparams"], [153, 4, 1, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE", "dnnl::primitive_attr::set_rnn_weights_qparams::mask"], [153, 4, 1, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE", "dnnl::primitive_attr::set_rnn_weights_qparams::scales"], [153, 3, 1, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii", "dnnl::primitive_attr::set_scales_mask"], [153, 4, 1, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii", "dnnl::primitive_attr::set_scales_mask::arg"], [153, 4, 1, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii", "dnnl::primitive_attr::set_scales_mask::mask"], [153, 3, 1, "_CPPv4N4dnnl14primitive_attr19set_scratchpad_modeE15scratchpad_mode", "dnnl::primitive_attr::set_scratchpad_mode"], [153, 4, 1, "_CPPv4N4dnnl14primitive_attr19set_scratchpad_modeE15scratchpad_mode", "dnnl::primitive_attr::set_scratchpad_mode::mode"], [153, 3, 1, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii", "dnnl::primitive_attr::set_zero_points_mask"], [153, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii", "dnnl::primitive_attr::set_zero_points_mask::arg"], [153, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii", "dnnl::primitive_attr::set_zero_points_mask::mask"], [160, 7, 1, "_CPPv4N4dnnl14primitive_descE", "dnnl::primitive_desc"], [160, 3, 1, "_CPPv4N4dnnl14primitive_desc9next_implEv", "dnnl::primitive_desc::next_impl"], [160, 3, 1, "_CPPv4N4dnnl14primitive_desc14primitive_descEv", "dnnl::primitive_desc::primitive_desc"], [160, 7, 1, "_CPPv4N4dnnl19primitive_desc_baseE", "dnnl::primitive_desc_base"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base9bias_descEv", "dnnl::primitive_desc_base::bias_desc"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEi", "dnnl::primitive_desc_base::diff_dst_desc"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEv", "dnnl::primitive_desc_base::diff_dst_desc"], [160, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEi", "dnnl::primitive_desc_base::diff_dst_desc::idx"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEi", "dnnl::primitive_desc_base::diff_src_desc"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEv", "dnnl::primitive_desc_base::diff_src_desc"], [160, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEi", "dnnl::primitive_desc_base::diff_src_desc::idx"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEi", "dnnl::primitive_desc_base::diff_weights_desc"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEv", "dnnl::primitive_desc_base::diff_weights_desc"], [160, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEi", "dnnl::primitive_desc_base::diff_weights_desc::idx"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEi", "dnnl::primitive_desc_base::dst_desc"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEv", "dnnl::primitive_desc_base::dst_desc"], [160, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEi", "dnnl::primitive_desc_base::dst_desc::idx"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base19get_activation_kindEv", "dnnl::primitive_desc_base::get_activation_kind"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_algorithmEv", "dnnl::primitive_desc_base::get_algorithm"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base9get_alphaEv", "dnnl::primitive_desc_base::get_alpha"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8get_axisEv", "dnnl::primitive_desc_base::get_axis"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8get_betaEv", "dnnl::primitive_desc_base::get_beta"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_cell_kindEv", "dnnl::primitive_desc_base::get_cell_kind"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_dilationsEv", "dnnl::primitive_desc_base::get_dilations"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_directionEv", "dnnl::primitive_desc_base::get_direction"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base10get_engineEv", "dnnl::primitive_desc_base::get_engine"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base11get_epsilonEv", "dnnl::primitive_desc_base::get_epsilon"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base11get_factorsEv", "dnnl::primitive_desc_base::get_factors"], [160, 3, 1, "_CPPv4I0ENK4dnnl19primitive_desc_base9get_flagsE1Tv", "dnnl::primitive_desc_base::get_flags"], [160, 8, 1, "_CPPv4I0ENK4dnnl19primitive_desc_base9get_flagsE1Tv", "dnnl::primitive_desc_base::get_flags::T"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base14get_group_sizeEv", "dnnl::primitive_desc_base::get_group_size"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base5get_kEv", "dnnl::primitive_desc_base::get_k"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base10get_kernelEv", "dnnl::primitive_desc_base::get_kernel"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8get_kindEv", "dnnl::primitive_desc_base::get_kind"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base14get_local_sizeEv", "dnnl::primitive_desc_base::get_local_size"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base5get_pEv", "dnnl::primitive_desc_base::get_p"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_lEv", "dnnl::primitive_desc_base::get_padding_l"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_rEv", "dnnl::primitive_desc_base::get_padding_r"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base18get_primitive_attrEv", "dnnl::primitive_desc_base::get_primitive_attr"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_prop_kindEv", "dnnl::primitive_desc_base::get_prop_kind"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base11get_stridesEv", "dnnl::primitive_desc_base::get_strides"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13impl_info_strEv", "dnnl::primitive_desc_base::impl_info_str"], [160, 3, 1, "_CPPv4N4dnnl19primitive_desc_base19primitive_desc_baseEv", "dnnl::primitive_desc_base::primitive_desc_base"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi", "dnnl::primitive_desc_base::query_md"], [160, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi", "dnnl::primitive_desc_base::query_md::idx"], [160, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi", "dnnl::primitive_desc_base::query_md::what"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base9query_s64E5query", "dnnl::primitive_desc_base::query_s64"], [160, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base9query_s64E5query", "dnnl::primitive_desc_base::query_s64::what"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base15scratchpad_descEv", "dnnl::primitive_desc_base::scratchpad_desc"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base17scratchpad_engineEv", "dnnl::primitive_desc_base::scratchpad_engine"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8src_descEi", "dnnl::primitive_desc_base::src_desc"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8src_descEv", "dnnl::primitive_desc_base::src_desc"], [160, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8src_descEi", "dnnl::primitive_desc_base::src_desc::idx"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEi", "dnnl::primitive_desc_base::weights_desc"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEv", "dnnl::primitive_desc_base::weights_desc"], [160, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEi", "dnnl::primitive_desc_base::weights_desc::idx"], [160, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base14workspace_descEv", "dnnl::primitive_desc_base::workspace_desc"], [160, 9, 1, "_CPPv4N4dnnl9prop_kindE", "dnnl::prop_kind"], [160, 10, 1, "_CPPv4N4dnnl9prop_kind8backwardE", "dnnl::prop_kind::backward"], [160, 10, 1, "_CPPv4N4dnnl9prop_kind13backward_biasE", "dnnl::prop_kind::backward_bias"], [160, 10, 1, "_CPPv4N4dnnl9prop_kind13backward_dataE", "dnnl::prop_kind::backward_data"], [160, 10, 1, "_CPPv4N4dnnl9prop_kind16backward_weightsE", "dnnl::prop_kind::backward_weights"], [160, 10, 1, "_CPPv4N4dnnl9prop_kind7forwardE", "dnnl::prop_kind::forward"], [160, 10, 1, "_CPPv4N4dnnl9prop_kind17forward_inferenceE", "dnnl::prop_kind::forward_inference"], [160, 10, 1, "_CPPv4N4dnnl9prop_kind15forward_scoringE", "dnnl::prop_kind::forward_scoring"], [160, 10, 1, "_CPPv4N4dnnl9prop_kind16forward_trainingE", "dnnl::prop_kind::forward_training"], [160, 10, 1, "_CPPv4N4dnnl9prop_kind5undefE", "dnnl::prop_kind::undef"], [168, 7, 1, "_CPPv4N4dnnl9reductionE", "dnnl::reduction"], [168, 7, 1, "_CPPv4N4dnnl9reduction14primitive_descE", "dnnl::reduction::primitive_desc"], [168, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc8dst_descEv", "dnnl::reduction::primitive_desc::dst_desc"], [168, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc13get_algorithmEv", "dnnl::reduction::primitive_desc::get_algorithm"], [168, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc11get_epsilonEv", "dnnl::reduction::primitive_desc::get_epsilon"], [168, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc5get_pEv", "dnnl::reduction::primitive_desc::get_p"], [168, 3, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc"], [168, 3, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descEv", "dnnl::reduction::primitive_desc::primitive_desc"], [168, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::aalgorithm"], [168, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::aengine"], [168, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::allow_empty"], [168, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::attr"], [168, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::dst_desc"], [168, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::eps"], [168, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::p"], [168, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::src_desc"], [168, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc8src_descEv", "dnnl::reduction::primitive_desc::src_desc"], [168, 3, 1, "_CPPv4N4dnnl9reduction9reductionEv", "dnnl::reduction::reduction"], [169, 7, 1, "_CPPv4N4dnnl7reorderE", "dnnl::reorder"], [169, 3, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute"], [169, 4, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute::astream"], [169, 4, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute::dst"], [169, 4, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute::src"], [169, 7, 1, "_CPPv4N4dnnl7reorder14primitive_descE", "dnnl::reorder::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc8dst_descEv", "dnnl::reorder::primitive_desc::dst_desc"], [169, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc14get_dst_engineEv", "dnnl::reorder::primitive_desc::get_dst_engine"], [169, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc14get_src_engineEv", "dnnl::reorder::primitive_desc::get_src_engine"], [169, 3, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descEv", "dnnl::reorder::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::dst"], [169, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::dst_engine"], [169, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::dst_md"], [169, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::src"], [169, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::src_engine"], [169, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::src_md"], [169, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc8src_descEv", "dnnl::reorder::primitive_desc::src_desc"], [169, 3, 1, "_CPPv4N4dnnl7reorder7reorderERK14primitive_desc", "dnnl::reorder::reorder"], [169, 3, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder"], [169, 3, 1, "_CPPv4N4dnnl7reorder7reorderEv", "dnnl::reorder::reorder"], [169, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder::attr"], [169, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder::dst"], [169, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK14primitive_desc", "dnnl::reorder::reorder::pd"], [169, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder::src"], [170, 7, 1, "_CPPv4N4dnnl19resampling_backwardE", "dnnl::resampling_backward"], [170, 7, 1, "_CPPv4N4dnnl19resampling_backward14primitive_descE", "dnnl::resampling_backward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_dst_descEv", "dnnl::resampling_backward::primitive_desc::diff_dst_desc"], [170, 3, 1, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_src_descEv", "dnnl::resampling_backward::primitive_desc::diff_src_desc"], [170, 3, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descEv", "dnnl::resampling_backward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aalgorithm"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aalgorithm"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_dst_desc"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_dst_desc"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_src_desc"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_src_desc"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::factors"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 3, 1, "_CPPv4N4dnnl19resampling_backward19resampling_backwardERK14primitive_desc", "dnnl::resampling_backward::resampling_backward"], [170, 3, 1, "_CPPv4N4dnnl19resampling_backward19resampling_backwardEv", "dnnl::resampling_backward::resampling_backward"], [170, 4, 1, "_CPPv4N4dnnl19resampling_backward19resampling_backwardERK14primitive_desc", "dnnl::resampling_backward::resampling_backward::pd"], [170, 7, 1, "_CPPv4N4dnnl18resampling_forwardE", "dnnl::resampling_forward"], [170, 7, 1, "_CPPv4N4dnnl18resampling_forward14primitive_descE", "dnnl::resampling_forward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8dst_descEv", "dnnl::resampling_forward::primitive_desc::dst_desc"], [170, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descEv", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aalgorithm"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aalgorithm"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aalgorithm"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::dst_desc"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::dst_desc"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::factors"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::factors"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::src_desc"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::src_desc"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::src_desc"], [170, 3, 1, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8src_descEv", "dnnl::resampling_forward::primitive_desc::src_desc"], [170, 3, 1, "_CPPv4N4dnnl18resampling_forward18resampling_forwardERK14primitive_desc", "dnnl::resampling_forward::resampling_forward"], [170, 3, 1, "_CPPv4N4dnnl18resampling_forward18resampling_forwardEv", "dnnl::resampling_forward::resampling_forward"], [170, 4, 1, "_CPPv4N4dnnl18resampling_forward18resampling_forwardERK14primitive_desc", "dnnl::resampling_forward::resampling_forward::pd"], [171, 9, 1, "_CPPv4N4dnnl13rnn_directionE", "dnnl::rnn_direction"], [171, 10, 1, "_CPPv4N4dnnl13rnn_direction20bidirectional_concatE", "dnnl::rnn_direction::bidirectional_concat"], [171, 10, 1, "_CPPv4N4dnnl13rnn_direction17bidirectional_sumE", "dnnl::rnn_direction::bidirectional_sum"], [171, 10, 1, "_CPPv4N4dnnl13rnn_direction5undefE", "dnnl::rnn_direction::undef"], [171, 10, 1, "_CPPv4N4dnnl13rnn_direction14unidirectionalE", "dnnl::rnn_direction::unidirectional"], [171, 10, 1, "_CPPv4N4dnnl13rnn_direction25unidirectional_left2rightE", "dnnl::rnn_direction::unidirectional_left2right"], [171, 10, 1, "_CPPv4N4dnnl13rnn_direction25unidirectional_right2leftE", "dnnl::rnn_direction::unidirectional_right2left"], [171, 9, 1, "_CPPv4N4dnnl9rnn_flagsE", "dnnl::rnn_flags"], [171, 10, 1, "_CPPv4N4dnnl9rnn_flags5undefE", "dnnl::rnn_flags::undef"], [160, 7, 1, "_CPPv4N4dnnl23rnn_primitive_desc_baseE", "dnnl::rnn_primitive_desc_base"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base20augru_attention_descEv", "dnnl::rnn_primitive_desc_base::augru_attention_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base9bias_descEv", "dnnl::rnn_primitive_desc_base::bias_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base25diff_augru_attention_descEv", "dnnl::rnn_primitive_desc_base::diff_augru_attention_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base14diff_bias_descEv", "dnnl::rnn_primitive_desc_base::diff_bias_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_dst_iter_c_descEv", "dnnl::rnn_primitive_desc_base::diff_dst_iter_c_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_dst_iter_descEv", "dnnl::rnn_primitive_desc_base::diff_dst_iter_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_dst_layer_descEv", "dnnl::rnn_primitive_desc_base::diff_dst_layer_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_src_iter_c_descEv", "dnnl::rnn_primitive_desc_base::diff_src_iter_c_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_src_iter_descEv", "dnnl::rnn_primitive_desc_base::diff_src_iter_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_src_layer_descEv", "dnnl::rnn_primitive_desc_base::diff_src_layer_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base22diff_weights_iter_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_iter_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base23diff_weights_layer_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_layer_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base26diff_weights_peephole_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_peephole_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base28diff_weights_projection_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_projection_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base15dst_iter_c_descEv", "dnnl::rnn_primitive_desc_base::dst_iter_c_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base13dst_iter_descEv", "dnnl::rnn_primitive_desc_base::dst_iter_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base14dst_layer_descEv", "dnnl::rnn_primitive_desc_base::dst_layer_desc"], [160, 3, 1, "_CPPv4N4dnnl23rnn_primitive_desc_base23rnn_primitive_desc_baseEv", "dnnl::rnn_primitive_desc_base::rnn_primitive_desc_base"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base15src_iter_c_descEv", "dnnl::rnn_primitive_desc_base::src_iter_c_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base13src_iter_descEv", "dnnl::rnn_primitive_desc_base::src_iter_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base14src_layer_descEv", "dnnl::rnn_primitive_desc_base::src_layer_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base17weights_iter_descEv", "dnnl::rnn_primitive_desc_base::weights_iter_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base18weights_layer_descEv", "dnnl::rnn_primitive_desc_base::weights_layer_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base21weights_peephole_descEv", "dnnl::rnn_primitive_desc_base::weights_peephole_desc"], [160, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base23weights_projection_descEv", "dnnl::rnn_primitive_desc_base::weights_projection_desc"], [153, 9, 1, "_CPPv4N4dnnl15scratchpad_modeE", "dnnl::scratchpad_mode"], [153, 10, 1, "_CPPv4N4dnnl15scratchpad_mode7libraryE", "dnnl::scratchpad_mode::library"], [153, 10, 1, "_CPPv4N4dnnl15scratchpad_mode4userE", "dnnl::scratchpad_mode::user"], [172, 7, 1, "_CPPv4N4dnnl16shuffle_backwardE", "dnnl::shuffle_backward"], [172, 7, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_descE", "dnnl::shuffle_backward::primitive_desc"], [172, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_dst_descEv", "dnnl::shuffle_backward::primitive_desc::diff_dst_desc"], [172, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_src_descEv", "dnnl::shuffle_backward::primitive_desc::diff_src_desc"], [172, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc8get_axisEv", "dnnl::shuffle_backward::primitive_desc::get_axis"], [172, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc14get_group_sizeEv", "dnnl::shuffle_backward::primitive_desc::get_group_size"], [172, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13get_prop_kindEv", "dnnl::shuffle_backward::primitive_desc::get_prop_kind"], [172, 3, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc"], [172, 3, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descEv", "dnnl::shuffle_backward::primitive_desc::primitive_desc"], [172, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::aengine"], [172, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::allow_empty"], [172, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::attr"], [172, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::axis"], [172, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::diff_dst_desc"], [172, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::diff_src_desc"], [172, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::group_size"], [172, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [172, 3, 1, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardERK14primitive_desc", "dnnl::shuffle_backward::shuffle_backward"], [172, 3, 1, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardEv", "dnnl::shuffle_backward::shuffle_backward"], [172, 4, 1, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardERK14primitive_desc", "dnnl::shuffle_backward::shuffle_backward::pd"], [172, 7, 1, "_CPPv4N4dnnl15shuffle_forwardE", "dnnl::shuffle_forward"], [172, 7, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_descE", "dnnl::shuffle_forward::primitive_desc"], [172, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8dst_descEv", "dnnl::shuffle_forward::primitive_desc::dst_desc"], [172, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8get_axisEv", "dnnl::shuffle_forward::primitive_desc::get_axis"], [172, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc14get_group_sizeEv", "dnnl::shuffle_forward::primitive_desc::get_group_size"], [172, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc13get_prop_kindEv", "dnnl::shuffle_forward::primitive_desc::get_prop_kind"], [172, 3, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc"], [172, 3, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descEv", "dnnl::shuffle_forward::primitive_desc::primitive_desc"], [172, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::aengine"], [172, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::allow_empty"], [172, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::aprop_kind"], [172, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::attr"], [172, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::axis"], [172, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::dst_desc"], [172, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::group_size"], [172, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::src_desc"], [172, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8src_descEv", "dnnl::shuffle_forward::primitive_desc::src_desc"], [172, 3, 1, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardERK14primitive_desc", "dnnl::shuffle_forward::shuffle_forward"], [172, 3, 1, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardEv", "dnnl::shuffle_forward::shuffle_forward"], [172, 4, 1, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardERK14primitive_desc", "dnnl::shuffle_forward::shuffle_forward::pd"], [173, 7, 1, "_CPPv4N4dnnl16softmax_backwardE", "dnnl::softmax_backward"], [173, 7, 1, "_CPPv4N4dnnl16softmax_backward14primitive_descE", "dnnl::softmax_backward::primitive_desc"], [173, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_dst_descEv", "dnnl::softmax_backward::primitive_desc::diff_dst_desc"], [173, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_src_descEv", "dnnl::softmax_backward::primitive_desc::diff_src_desc"], [173, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8dst_descEv", "dnnl::softmax_backward::primitive_desc::dst_desc"], [173, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_algorithmEv", "dnnl::softmax_backward::primitive_desc::get_algorithm"], [173, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8get_axisEv", "dnnl::softmax_backward::primitive_desc::get_axis"], [173, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_prop_kindEv", "dnnl::softmax_backward::primitive_desc::get_prop_kind"], [173, 3, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc"], [173, 3, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descEv", "dnnl::softmax_backward::primitive_desc::primitive_desc"], [173, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::aalgorithm"], [173, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::aengine"], [173, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::allow_empty"], [173, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::attr"], [173, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::axis"], [173, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::diff_dst_desc"], [173, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::diff_src_desc"], [173, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::dst_desc"], [173, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [173, 3, 1, "_CPPv4N4dnnl16softmax_backward16softmax_backwardERK14primitive_desc", "dnnl::softmax_backward::softmax_backward"], [173, 3, 1, "_CPPv4N4dnnl16softmax_backward16softmax_backwardEv", "dnnl::softmax_backward::softmax_backward"], [173, 4, 1, "_CPPv4N4dnnl16softmax_backward16softmax_backwardERK14primitive_desc", "dnnl::softmax_backward::softmax_backward::pd"], [173, 7, 1, "_CPPv4N4dnnl15softmax_forwardE", "dnnl::softmax_forward"], [173, 7, 1, "_CPPv4N4dnnl15softmax_forward14primitive_descE", "dnnl::softmax_forward::primitive_desc"], [173, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8dst_descEv", "dnnl::softmax_forward::primitive_desc::dst_desc"], [173, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_algorithmEv", "dnnl::softmax_forward::primitive_desc::get_algorithm"], [173, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8get_axisEv", "dnnl::softmax_forward::primitive_desc::get_axis"], [173, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_prop_kindEv", "dnnl::softmax_forward::primitive_desc::get_prop_kind"], [173, 3, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc"], [173, 3, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descEv", "dnnl::softmax_forward::primitive_desc::primitive_desc"], [173, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::aalgorithm"], [173, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::aengine"], [173, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::allow_empty"], [173, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::aprop_kind"], [173, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::attr"], [173, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::axis"], [173, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::dst_desc"], [173, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::src_desc"], [173, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8src_descEv", "dnnl::softmax_forward::primitive_desc::src_desc"], [173, 3, 1, "_CPPv4N4dnnl15softmax_forward15softmax_forwardERK14primitive_desc", "dnnl::softmax_forward::softmax_forward"], [173, 3, 1, "_CPPv4N4dnnl15softmax_forward15softmax_forwardEv", "dnnl::softmax_forward::softmax_forward"], [173, 4, 1, "_CPPv4N4dnnl15softmax_forward15softmax_forwardERK14primitive_desc", "dnnl::softmax_forward::softmax_forward::pd"], [62, 7, 1, "_CPPv4N4dnnl6streamE", "dnnl::stream"], [62, 9, 1, "_CPPv4N4dnnl6stream5flagsE", "dnnl::stream::flags"], [62, 10, 1, "_CPPv4N4dnnl6stream5flags13default_flagsE", "dnnl::stream::flags::default_flags"], [62, 10, 1, "_CPPv4N4dnnl6stream5flags8in_orderE", "dnnl::stream::flags::in_order"], [62, 10, 1, "_CPPv4N4dnnl6stream5flags12out_of_orderE", "dnnl::stream::flags::out_of_order"], [62, 3, 1, "_CPPv4NK4dnnl6stream10get_engineEv", "dnnl::stream::get_engine"], [62, 3, 1, "_CPPv4N4dnnl6stream6streamERK6engine5flags", "dnnl::stream::stream"], [62, 3, 1, "_CPPv4N4dnnl6stream6streamEv", "dnnl::stream::stream"], [62, 4, 1, "_CPPv4N4dnnl6stream6streamERK6engine5flags", "dnnl::stream::stream::aengine"], [62, 4, 1, "_CPPv4N4dnnl6stream6streamERK6engine5flags", "dnnl::stream::stream::aflags"], [62, 3, 1, "_CPPv4N4dnnl6stream4waitEv", "dnnl::stream::wait"], [174, 7, 1, "_CPPv4N4dnnl3sumE", "dnnl::sum"], [174, 7, 1, "_CPPv4N4dnnl3sum14primitive_descE", "dnnl::sum::primitive_desc"], [174, 3, 1, "_CPPv4NK4dnnl3sum14primitive_desc8dst_descEv", "dnnl::sum::primitive_desc::dst_desc"], [174, 3, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc"], [174, 3, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc"], [174, 3, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descEv", "dnnl::sum::primitive_desc::primitive_desc"], [174, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::aengine"], [174, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::aengine"], [174, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::attr"], [174, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::attr"], [174, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::dst"], [174, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::scales"], [174, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::scales"], [174, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::srcs"], [174, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::srcs"], [174, 3, 1, "_CPPv4NK4dnnl3sum14primitive_desc8src_descEi", "dnnl::sum::primitive_desc::src_desc"], [174, 4, 1, "_CPPv4NK4dnnl3sum14primitive_desc8src_descEi", "dnnl::sum::primitive_desc::src_desc::idx"], [174, 3, 1, "_CPPv4N4dnnl3sum3sumERK14primitive_desc", "dnnl::sum::sum"], [174, 3, 1, "_CPPv4N4dnnl3sum3sumEv", "dnnl::sum::sum"], [174, 4, 1, "_CPPv4N4dnnl3sum3sumERK14primitive_desc", "dnnl::sum::sum::pd"], [160, 3, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute"], [160, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::aprimitive"], [160, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::args"], [160, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::astream"], [160, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::dependencies"], [61, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer"], [61, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer::T"], [61, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer::amemory"], [61, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer::ndims"], [62, 3, 1, "_CPPv4N4dnnl12sycl_interop11get_contextERK6engine", "dnnl::sycl_interop::get_context"], [62, 4, 1, "_CPPv4N4dnnl12sycl_interop11get_contextERK6engine", "dnnl::sycl_interop::get_context::aengine"], [62, 3, 1, "_CPPv4N4dnnl12sycl_interop10get_deviceERK6engine", "dnnl::sycl_interop::get_device"], [62, 4, 1, "_CPPv4N4dnnl12sycl_interop10get_deviceERK6engine", "dnnl::sycl_interop::get_device::aengine"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop15get_memory_kindERK6memory", "dnnl::sycl_interop::get_memory_kind"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop15get_memory_kindERK6memory", "dnnl::sycl_interop::get_memory_kind::amemory"], [62, 3, 1, "_CPPv4N4dnnl12sycl_interop9get_queueERK6stream", "dnnl::sycl_interop::get_queue"], [62, 4, 1, "_CPPv4N4dnnl12sycl_interop9get_queueERK6stream", "dnnl::sycl_interop::get_queue::astream"], [62, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE", "dnnl::sycl_interop::make_engine"], [62, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE", "dnnl::sycl_interop::make_engine::acontext"], [62, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE", "dnnl::sycl_interop::make_engine::adevice"], [61, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory"], [61, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory"], [61, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::T"], [61, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::T"], [61, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::abuffer"], [61, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::abuffer"], [61, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::adesc"], [61, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::adesc"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::adesc"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::adesc"], [61, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::aengine"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::aengine"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::ahandle"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::ahandle"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::akind"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::akind"], [61, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::astream"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::astream"], [61, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::ndims"], [61, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::ndims"], [62, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE", "dnnl::sycl_interop::make_stream"], [62, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE", "dnnl::sycl_interop::make_stream::aengine"], [62, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE", "dnnl::sycl_interop::make_stream::aqueue"], [61, 9, 1, "_CPPv4N4dnnl12sycl_interop11memory_kindE", "dnnl::sycl_interop::memory_kind"], [61, 10, 1, "_CPPv4N4dnnl12sycl_interop11memory_kind6bufferE", "dnnl::sycl_interop::memory_kind::buffer"], [61, 10, 1, "_CPPv4N4dnnl12sycl_interop11memory_kind3usmE", "dnnl::sycl_interop::memory_kind::usm"], [61, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer"], [61, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer"], [61, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::T"], [61, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::T"], [61, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::abuffer"], [61, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::abuffer"], [61, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::amemory"], [61, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::amemory"], [61, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::astream"], [61, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::ndims"], [61, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::ndims"], [171, 7, 1, "_CPPv4N4dnnl20vanilla_rnn_backwardE", "dnnl::vanilla_rnn_backward"], [171, 7, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_descE", "dnnl::vanilla_rnn_backward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9bias_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::bias_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14diff_bias_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_bias_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_src_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_src_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13dst_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::dst_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14dst_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::dst_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19get_activation_kindEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_activation_kind"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9get_alphaEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_alpha"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc8get_betaEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_beta"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_cell_kindEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_cell_kind"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_directionEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_direction"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_prop_kindEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::activation"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::activation"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::alpha"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_bias_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_bias_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13src_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::src_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14src_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::src_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc17weights_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::weights_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18weights_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14workspace_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::workspace_desc"], [171, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardERK14primitive_desc", "dnnl::vanilla_rnn_backward::vanilla_rnn_backward"], [171, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardEv", "dnnl::vanilla_rnn_backward::vanilla_rnn_backward"], [171, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardERK14primitive_desc", "dnnl::vanilla_rnn_backward::vanilla_rnn_backward::pd"], [171, 7, 1, "_CPPv4N4dnnl19vanilla_rnn_forwardE", "dnnl::vanilla_rnn_forward"], [171, 7, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_descE", "dnnl::vanilla_rnn_forward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9bias_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::bias_desc"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13dst_iter_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::dst_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14dst_layer_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::dst_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc19get_activation_kindEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_activation_kind"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9get_alphaEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_alpha"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc8get_betaEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_beta"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_cell_kindEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_cell_kind"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_directionEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_direction"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_prop_kindEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::activation"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::activation"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::alpha"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::bias_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::direction"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_iter_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13src_iter_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::src_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14src_layer_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::src_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc17weights_iter_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::weights_iter_desc"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc18weights_layer_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::weights_layer_desc"], [171, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14workspace_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::workspace_desc"], [171, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardERK14primitive_desc", "dnnl::vanilla_rnn_forward::vanilla_rnn_forward"], [171, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardEv", "dnnl::vanilla_rnn_forward::vanilla_rnn_forward"], [171, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardERK14primitive_desc", "dnnl::vanilla_rnn_forward::vanilla_rnn_forward::pd"], [787, 3, 1, "_CPPv411do_allocate6size_t6size_t", "do_allocate"], [787, 4, 1, "_CPPv411do_allocate6size_t6size_t", "do_allocate::alignment"], [787, 4, 1, "_CPPv411do_allocate6size_t6size_t", "do_allocate::n"], [787, 3, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate"], [787, 4, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate::alignment"], [787, 4, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate::n"], [787, 4, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate::p"], [787, 3, 1, "_CPPv4NK11do_is_equalERKNSt3pmr15memory_resourceE", "do_is_equal"], [787, 4, 1, "_CPPv4NK11do_is_equalERKNSt3pmr15memory_resourceE", "do_is_equal::other"], [552, 3, 1, "_CPPv4NK5emptyEv", "empty"], [552, 3, 1, "_CPPv4NK3endEv", "end"], [843, 3, 1, "_CPPv47enqueueRR11task_handle", "enqueue"], [843, 3, 1, "_CPPv4I_1FE7enqueuevRR1F", "enqueue"], [843, 4, 1, "_CPPv4I_1FE7enqueuevRR1F", "enqueue::f"], [843, 4, 1, "_CPPv47enqueueRR11task_handle", "enqueue::h"], [851, 9, 1, "_CPPv4N18ets_key_usage_type20ets_key_per_instanceE", "ets_key_usage_type::ets_key_per_instance"], [851, 9, 1, "_CPPv4N18ets_key_usage_type10ets_no_keyE", "ets_key_usage_type::ets_no_key"], [851, 9, 1, "_CPPv4N18ets_key_usage_type17ets_suspend_awareE", "ets_key_usage_type::ets_suspend_aware"], [756, 3, 1, "_CPPv416exception_thrownv", "exception_thrown"], [843, 3, 1, "_CPPv4I_1FE7executeDTcl1fEERR1F", "execute"], [843, 4, 1, "_CPPv4I_1FE7executeDTcl1fEERR1F", "execute::f"], [561, 3, 1, "_CPPv46filterv", "filter"], [561, 3, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter"], [561, 8, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter::Body"], [561, 4, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter::body"], [561, 4, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter::mode"], [842, 3, 1, "_CPPv48finalizeR21task_scheduler_handle", "finalize"], [842, 3, 1, "_CPPv48finalizeR21task_scheduler_handleRKNSt9nothrow_tE", "finalize"], [842, 4, 1, "_CPPv48finalizeR21task_scheduler_handle", "finalize::handle"], [842, 4, 1, "_CPPv48finalizeR21task_scheduler_handleRKNSt9nothrow_tE", "finalize::handle"], [839, 3, 1, "_CPPv414global_control9parameter6size_t", "global_control"], [839, 4, 1, "_CPPv414global_control9parameter6size_t", "global_control::param"], [839, 4, 1, "_CPPv414global_control9parameter6size_t", "global_control::value"], [552, 3, 1, "_CPPv4NK9grainsizeEv", "grainsize"], [756, 3, 1, "_CPPv45graphR18task_group_context", "graph"], [756, 4, 1, "_CPPv45graphR18task_group_context", "graph::context"], [743, 3, 1, "_CPPv410initializeN10task_arena6attachE", "initialize"], [843, 3, 1, "_CPPv410initialize11constraintsj8priority", "initialize"], [843, 3, 1, "_CPPv410initializeN6oneapi3tbb6attachE", "initialize"], [843, 3, 1, "_CPPv410initializeij8priority", "initialize"], [843, 3, 1, "_CPPv410initializev", "initialize"], [843, 4, 1, "_CPPv410initialize11constraintsj8priority", "initialize::a_constraints"], [843, 4, 1, "_CPPv410initialize11constraintsj8priority", "initialize::a_priority"], [843, 4, 1, "_CPPv410initializeij8priority", "initialize::a_priority"], [843, 4, 1, "_CPPv410initializeij8priority", "initialize::max_concurrency"], [843, 4, 1, "_CPPv410initialize11constraintsj8priority", "initialize::reserved_for_masters"], [843, 4, 1, "_CPPv410initializeij8priority", "initialize::reserved_for_masters"], [759, 3, 1, "_CPPv410input_nodeRK10input_node", "input_node"], [759, 3, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node"], [759, 8, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node::Body"], [759, 4, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node::body"], [759, 4, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node::g"], [759, 4, 1, "_CPPv410input_nodeRK10input_node", "input_node::src"], [748, 3, 1, "_CPPv411input_portsv", "input_ports"], [779, 3, 1, "_CPPv4I0ENK4is_aEbv", "is_a"], [779, 8, 1, "_CPPv4I0ENK4is_aEbv", "is_a::V"], [843, 3, 1, "_CPPv4NK9is_activeEv", "is_active"], [756, 3, 1, "_CPPv412is_cancelledv", "is_cancelled"], [552, 3, 1, "_CPPv4NK12is_divisibleEv", "is_divisible"], [567, 3, 1, "_CPPv413is_final_scanv", "is_final_scan"], [841, 3, 1, "_CPPv4NK28is_group_execution_cancelledEv", "is_group_execution_cancelled"], [844, 3, 1, "_CPPv4NK12is_observingEv", "is_observing"], [841, 9, 1, "_CPPv4N6kind_t5boundE", "kind_t::bound"], [841, 9, 1, "_CPPv4N6kind_t8isolatedE", "kind_t::isolated"], [572, 3, 1, "_CPPv4NK4leftEv", "left"], [793, 3, 1, "_CPPv44lockv", "lock"], [561, 3, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter"], [561, 8, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::Func"], [561, 8, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::T"], [561, 8, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::U"], [561, 4, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::f"], [561, 4, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::mode"], [843, 3, 1, "_CPPv4NK15max_concurrencyEv", "max_concurrency"], [786, 3, 1, "_CPPv4NK8max_sizeEv", "max_size"], [828, 6, 1, "_CPPv4N10mutex_func1M13is_fair_mutexE", "mutex_func::M::is_fair_mutex"], [828, 6, 1, "_CPPv4N10mutex_func1M18is_recursive_mutexE", "mutex_func::M::is_recursive_mutex"], [828, 6, 1, "_CPPv4N10mutex_func1M11is_rw_mutexE", "mutex_func::M::is_rw_mutex"], [828, 3, 1, "_CPPv4N10mutex_func1M11scoped_lockER1M", "mutex_func::M::scoped_lock"], [828, 3, 1, "_CPPv4N10mutex_func1M11scoped_lockEv", "mutex_func::M::scoped_lock"], [828, 3, 1, "_CPPv4N10mutex_func1M11scoped_lock7acquireER1M", "mutex_func::M::scoped_lock::acquire"], [828, 3, 1, "_CPPv4N10mutex_func1M11scoped_lock7releaseEv", "mutex_func::M::scoped_lock::release"], [828, 3, 1, "_CPPv4N10mutex_func1M11scoped_lock11try_acquireER1M", "mutex_func::M::scoped_lock::try_acquire"], [828, 3, 1, "_CPPv4N10mutex_func1MD0Ev", "mutex_func::M::~scoped_lock"], [828, 5, 1, "_CPPv4N10mutex_type1M11scoped_lockE", "mutex_type::M::scoped_lock"], [843, 6, 1, "_CPPv415not_initialized", "not_initialized"], [793, 3, 1, "_CPPv410null_mutexv", "null_mutex"], [782, 3, 1, "_CPPv410numa_nodesv", "numa_nodes"], [844, 3, 1, "_CPPv47observeb", "observe"], [844, 4, 1, "_CPPv47observeb", "observe::state"], [844, 3, 1, "_CPPv418on_scheduler_entryb", "on_scheduler_entry"], [844, 4, 1, "_CPPv418on_scheduler_entryb", "on_scheduler_entry::is_worker"], [844, 3, 1, "_CPPv417on_scheduler_exitb", "on_scheduler_exit"], [844, 4, 1, "_CPPv417on_scheduler_exitb", "on_scheduler_exit::is_worker"], [38, 7, 1, "_CPPv4I0EN6oneapi3dal5arrayE", "oneapi::dal::array"], [38, 8, 1, "_CPPv4I0EN6oneapi3dal5arrayE", "oneapi::dal::array::Data"], [38, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array"], [38, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array"], [38, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI4DataE", "oneapi::dal::array::array"], [38, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI4DataE", "oneapi::dal::array::array"], [38, 3, 1, "_CPPv4N6oneapi3dal5array5arrayEv", "oneapi::dal::array::array"], [38, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::Deleter"], [38, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::ExtData"], [38, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::ExtData"], [38, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::RefData"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::count"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::count"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::data"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::data"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::deleter"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::dependencies"], [38, 4, 1, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI4DataE", "oneapi::dal::array::array::other"], [38, 4, 1, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI4DataE", "oneapi::dal::array::array::other"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::queue"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::ref"], [38, 3, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty"], [38, 4, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty::alloc"], [38, 4, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty::count"], [38, 4, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty::queue"], [38, 3, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full"], [38, 8, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::Element"], [38, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::alloc"], [38, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::count"], [38, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::element"], [38, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::queue"], [38, 3, 1, "_CPPv4NK6oneapi3dal5array9get_countEv", "oneapi::dal::array::get_count"], [38, 3, 1, "_CPPv4NK6oneapi3dal5array8get_dataEv", "oneapi::dal::array::get_data"], [38, 3, 1, "_CPPv4NK6oneapi3dal5array16get_mutable_dataEv", "oneapi::dal::array::get_mutable_data"], [38, 3, 1, "_CPPv4NK6oneapi3dal5array8get_sizeEv", "oneapi::dal::array::get_size"], [38, 3, 1, "_CPPv4NK6oneapi3dal5array16has_mutable_dataEv", "oneapi::dal::array::has_mutable_data"], [38, 3, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE", "oneapi::dal::array::need_mutable_data"], [38, 4, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE", "oneapi::dal::array::need_mutable_data::alloc"], [38, 4, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE", "oneapi::dal::array::need_mutable_data::queue"], [38, 3, 1, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI4DataE", "oneapi::dal::array::operator="], [38, 3, 1, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI4DataE", "oneapi::dal::array::operator="], [38, 4, 1, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI4DataE", "oneapi::dal::array::operator=::other"], [38, 4, 1, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI4DataE", "oneapi::dal::array::operator=::other"], [38, 3, 1, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE", "oneapi::dal::array::operator[]"], [38, 4, 1, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE", "oneapi::dal::array::operator[]::index"], [38, 3, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset"], [38, 3, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset"], [38, 3, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset"], [38, 3, 1, "_CPPv4N6oneapi3dal5array5resetEv", "oneapi::dal::array::reset"], [38, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::Deleter"], [38, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::ExtData"], [38, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::ExtData"], [38, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::RefData"], [38, 4, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset::alloc"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::count"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::count"], [38, 4, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset::count"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::data"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::data"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::deleter"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::dependencies"], [38, 4, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset::queue"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::ref"], [38, 3, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap"], [38, 8, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::ExtData"], [38, 4, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::count"], [38, 4, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::data"], [38, 4, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::dependencies"], [38, 3, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros"], [38, 4, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros::alloc"], [38, 4, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros::count"], [38, 4, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros::queue"], [35, 7, 1, "_CPPv4I0EN6oneapi3dal15column_accessorE", "oneapi::dal::column_accessor"], [35, 8, 1, "_CPPv4I0EN6oneapi3dal15column_accessorE", "oneapi::dal::column_accessor::Data"], [35, 3, 1, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor"], [35, 4, 1, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor::obj"], [35, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull"], [35, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull"], [35, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::alloc"], [35, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::alloc"], [35, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::block"], [35, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::column_index"], [35, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::column_index"], [35, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::queue"], [35, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::queue"], [35, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::rows"], [35, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::rows"], [39, 7, 1, "_CPPv4N6oneapi3dal3csv11data_sourceE", "oneapi::dal::csv::data_source"], [39, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source"], [39, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source"], [39, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::delimiter"], [39, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::delimiter"], [39, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::file_name"], [39, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::file_name"], [39, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::opts"], [39, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::opts"], [39, 6, 1, "_CPPv4N6oneapi3dal3csv11data_source9delimiterE", "oneapi::dal::csv::data_source::delimiter"], [39, 6, 1, "_CPPv4N6oneapi3dal3csv11data_source9file_nameE", "oneapi::dal::csv::data_source::file_name"], [39, 6, 1, "_CPPv4N6oneapi3dal3csv11data_source7optionsE", "oneapi::dal::csv::data_source::options"], [39, 7, 1, "_CPPv4I0EN6oneapi3dal3csv9read_argsE", "oneapi::dal::csv::read_args"], [39, 8, 1, "_CPPv4I0EN6oneapi3dal3csv9read_argsE", "oneapi::dal::csv::read_args::Object"], [39, 3, 1, "_CPPv4N6oneapi3dal3csv9read_args9read_argsEv", "oneapi::dal::csv::read_args::read_args"], [43, 9, 1, "_CPPv4N6oneapi3dal11data_layoutE", "oneapi::dal::data_layout"], [30, 9, 1, "_CPPv4N6oneapi3dal9data_typeE", "oneapi::dal::data_type"], [43, 9, 1, "_CPPv4N6oneapi3dal12feature_typeE", "oneapi::dal::feature_type"], [42, 7, 1, "_CPPv4N6oneapi3dal13homogen_tableE", "oneapi::dal::homogen_table"], [42, 3, 1, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav", "oneapi::dal::homogen_table::get_data"], [42, 3, 1, "_CPPv4NK6oneapi3dal13homogen_table8get_dataEv", "oneapi::dal::homogen_table::get_data"], [42, 8, 1, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav", "oneapi::dal::homogen_table::get_data::Data"], [42, 3, 1, "_CPPv4NK6oneapi3dal13homogen_table8get_kindEv", "oneapi::dal::homogen_table::get_kind"], [42, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table"], [42, 3, 1, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableEv", "oneapi::dal::homogen_table::homogen_table"], [42, 8, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::ConstDeleter"], [42, 8, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::Data"], [42, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::column_count"], [42, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::data_deleter"], [42, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::data_pointer"], [42, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::dependencies"], [42, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::layout"], [42, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::queue"], [42, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::row_count"], [42, 3, 1, "_CPPv4N6oneapi3dal13homogen_table4kindEv", "oneapi::dal::homogen_table::kind"], [42, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap"], [42, 8, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::Data"], [42, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::column_count"], [42, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::data_pointer"], [42, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::dependencies"], [42, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::layout"], [42, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::queue"], [42, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::row_count"], [20, 7, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Float"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Method"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Task"], [20, 6, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor18accuracy_thresholdE", "oneapi::dal::kmeans::descriptor::accuracy_threshold"], [20, 6, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor13cluster_countE", "oneapi::dal::kmeans::descriptor::cluster_count"], [20, 3, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans::descriptor::descriptor"], [20, 4, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans::descriptor::descriptor::cluster_count"], [20, 6, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor19max_iteration_countE", "oneapi::dal::kmeans::descriptor::max_iteration_count"], [20, 3, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::Float"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::Method"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::Task"], [20, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::desc"], [20, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::input"], [20, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE", "oneapi::dal::kmeans::infer_input"], [20, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE", "oneapi::dal::kmeans::infer_input::Task"], [20, 6, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input4dataE", "oneapi::dal::kmeans::infer_input::data"], [20, 3, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input"], [20, 4, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input::data"], [20, 4, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input::m"], [20, 6, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input5modelE", "oneapi::dal::kmeans::infer_input::model"], [20, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE", "oneapi::dal::kmeans::infer_result"], [20, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE", "oneapi::dal::kmeans::infer_result::Task"], [20, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12infer_result10get_labelsEv", "oneapi::dal::kmeans::infer_result::get_labels"], [20, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12infer_result28get_objective_function_valueEv", "oneapi::dal::kmeans::infer_result::get_objective_function_value"], [20, 3, 1, "_CPPv4N6oneapi3dal6kmeans12infer_result12infer_resultEv", "oneapi::dal::kmeans::infer_result::infer_result"], [20, 5, 1, "_CPPv4N6oneapi3dal6kmeans6method10by_defaultE", "oneapi::dal::kmeans::method::by_default"], [20, 7, 1, "_CPPv4N6oneapi3dal6kmeans6method5lloydE", "oneapi::dal::kmeans::method::lloyd"], [20, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans5modelE", "oneapi::dal::kmeans::model"], [20, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans5modelE", "oneapi::dal::kmeans::model::Task"], [20, 3, 1, "_CPPv4NK6oneapi3dal6kmeans5model13get_centroidsEv", "oneapi::dal::kmeans::model::get_centroids"], [20, 3, 1, "_CPPv4NK6oneapi3dal6kmeans5model17get_cluster_countEv", "oneapi::dal::kmeans::model::get_cluster_count"], [20, 3, 1, "_CPPv4N6oneapi3dal6kmeans5model5modelEv", "oneapi::dal::kmeans::model::model"], [20, 5, 1, "_CPPv4N6oneapi3dal6kmeans4task10by_defaultE", "oneapi::dal::kmeans::task::by_default"], [20, 7, 1, "_CPPv4N6oneapi3dal6kmeans4task10clusteringE", "oneapi::dal::kmeans::task::clustering"], [20, 3, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::Float"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::Method"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::Task"], [20, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::desc"], [20, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::input"], [20, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE", "oneapi::dal::kmeans::train_input"], [20, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE", "oneapi::dal::kmeans::train_input::Task"], [20, 6, 1, "_CPPv4N6oneapi3dal6kmeans11train_input4dataE", "oneapi::dal::kmeans::train_input::data"], [20, 6, 1, "_CPPv4N6oneapi3dal6kmeans11train_input17initial_centroidsE", "oneapi::dal::kmeans::train_input::initial_centroids"], [20, 3, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input"], [20, 4, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input::data"], [20, 4, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input::initial_centroids"], [20, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE", "oneapi::dal::kmeans::train_result"], [20, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE", "oneapi::dal::kmeans::train_result::Task"], [20, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result19get_iteration_countEv", "oneapi::dal::kmeans::train_result::get_iteration_count"], [20, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result10get_labelsEv", "oneapi::dal::kmeans::train_result::get_labels"], [20, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result9get_modelEv", "oneapi::dal::kmeans::train_result::get_model"], [20, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result28get_objective_function_valueEv", "oneapi::dal::kmeans::train_result::get_objective_function_value"], [20, 3, 1, "_CPPv4N6oneapi3dal6kmeans12train_result12train_resultEv", "oneapi::dal::kmeans::train_result::train_result"], [21, 3, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::Float"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::Method"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::Task"], [21, 4, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::desc"], [21, 4, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::input"], [21, 7, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute_input"], [21, 8, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute_input::Task"], [21, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table", "oneapi::dal::kmeans_init::compute_input::compute_input"], [21, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table", "oneapi::dal::kmeans_init::compute_input::compute_input::data"], [21, 6, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input4dataE", "oneapi::dal::kmeans_init::compute_input::data"], [21, 7, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE", "oneapi::dal::kmeans_init::compute_result"], [21, 8, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE", "oneapi::dal::kmeans_init::compute_result::Task"], [21, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init14compute_result14compute_resultEv", "oneapi::dal::kmeans_init::compute_result::compute_result"], [21, 3, 1, "_CPPv4NK6oneapi3dal11kmeans_init14compute_result13get_centroidsEv", "oneapi::dal::kmeans_init::compute_result::get_centroids"], [21, 7, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Float"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Method"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Task"], [21, 6, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor13cluster_countE", "oneapi::dal::kmeans_init::descriptor::cluster_count"], [21, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans_init::descriptor::descriptor"], [21, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans_init::descriptor::descriptor::cluster_count"], [21, 5, 1, "_CPPv4N6oneapi3dal11kmeans_init6method10by_defaultE", "oneapi::dal::kmeans_init::method::by_default"], [21, 7, 1, "_CPPv4N6oneapi3dal11kmeans_init6method5denseE", "oneapi::dal::kmeans_init::method::dense"], [21, 5, 1, "_CPPv4N6oneapi3dal11kmeans_init4task10by_defaultE", "oneapi::dal::kmeans_init::task::by_default"], [21, 7, 1, "_CPPv4N6oneapi3dal11kmeans_init4task4initE", "oneapi::dal::kmeans_init::task::init"], [26, 7, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor"], [26, 8, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Float"], [26, 8, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Method"], [26, 8, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Task"], [26, 6, 1, "_CPPv4N6oneapi3dal3knn10descriptor11class_countE", "oneapi::dal::knn::descriptor::class_count"], [26, 3, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor"], [26, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::class_count"], [26, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::neighbor_count"], [26, 6, 1, "_CPPv4N6oneapi3dal3knn10descriptor14neighbor_countE", "oneapi::dal::knn::descriptor::neighbor_count"], [26, 3, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer"], [26, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::Float"], [26, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::Method"], [26, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::Task"], [26, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::desc"], [26, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::input"], [26, 7, 1, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE", "oneapi::dal::knn::infer_input"], [26, 8, 1, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE", "oneapi::dal::knn::infer_input::Task"], [26, 6, 1, "_CPPv4N6oneapi3dal3knn11infer_input4dataE", "oneapi::dal::knn::infer_input::data"], [26, 3, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::knn::infer_input::infer_input"], [26, 4, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::knn::infer_input::infer_input::data"], [26, 4, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::knn::infer_input::infer_input::m"], [26, 6, 1, "_CPPv4N6oneapi3dal3knn11infer_input5modelE", "oneapi::dal::knn::infer_input::model"], [26, 7, 1, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE", "oneapi::dal::knn::infer_result"], [26, 8, 1, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE", "oneapi::dal::knn::infer_result::Task"], [26, 3, 1, "_CPPv4NK6oneapi3dal3knn12infer_result10get_labelsEv", "oneapi::dal::knn::infer_result::get_labels"], [26, 3, 1, "_CPPv4N6oneapi3dal3knn12infer_result12infer_resultEv", "oneapi::dal::knn::infer_result::infer_result"], [26, 7, 1, "_CPPv4N6oneapi3dal3knn6method10bruteforceE", "oneapi::dal::knn::method::bruteforce"], [26, 5, 1, "_CPPv4N6oneapi3dal3knn6method10by_defaultE", "oneapi::dal::knn::method::by_default"], [26, 7, 1, "_CPPv4N6oneapi3dal3knn6method7kd_treeE", "oneapi::dal::knn::method::kd_tree"], [26, 7, 1, "_CPPv4I0EN6oneapi3dal3knn5modelE", "oneapi::dal::knn::model"], [26, 8, 1, "_CPPv4I0EN6oneapi3dal3knn5modelE", "oneapi::dal::knn::model::Task"], [26, 3, 1, "_CPPv4N6oneapi3dal3knn5model5modelEv", "oneapi::dal::knn::model::model"], [26, 5, 1, "_CPPv4N6oneapi3dal3knn4task10by_defaultE", "oneapi::dal::knn::task::by_default"], [26, 7, 1, "_CPPv4N6oneapi3dal3knn4task14classificationE", "oneapi::dal::knn::task::classification"], [26, 3, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train"], [26, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::Float"], [26, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::Method"], [26, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::Task"], [26, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::desc"], [26, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::input"], [26, 7, 1, "_CPPv4I0EN6oneapi3dal3knn11train_inputE", "oneapi::dal::knn::train_input"], [26, 8, 1, "_CPPv4I0EN6oneapi3dal3knn11train_inputE", "oneapi::dal::knn::train_input::Task"], [26, 6, 1, "_CPPv4N6oneapi3dal3knn11train_input4dataE", "oneapi::dal::knn::train_input::data"], [26, 6, 1, "_CPPv4N6oneapi3dal3knn11train_input6labelsE", "oneapi::dal::knn::train_input::labels"], [26, 3, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input"], [26, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input::data"], [26, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input::labels"], [26, 7, 1, "_CPPv4I0EN6oneapi3dal3knn12train_resultE", "oneapi::dal::knn::train_result"], [26, 8, 1, "_CPPv4I0EN6oneapi3dal3knn12train_resultE", "oneapi::dal::knn::train_result::Task"], [26, 3, 1, "_CPPv4NK6oneapi3dal3knn12train_result9get_modelEv", "oneapi::dal::knn::train_result::get_model"], [26, 3, 1, "_CPPv4N6oneapi3dal3knn12train_result12train_resultEv", "oneapi::dal::knn::train_result::train_result"], [23, 7, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor"], [23, 8, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Float"], [23, 8, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Method"], [23, 8, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Task"], [23, 6, 1, "_CPPv4N6oneapi3dal3pca10descriptor15component_countE", "oneapi::dal::pca::descriptor::component_count"], [23, 3, 1, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE", "oneapi::dal::pca::descriptor::descriptor"], [23, 4, 1, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE", "oneapi::dal::pca::descriptor::descriptor::component_count"], [23, 6, 1, "_CPPv4N6oneapi3dal3pca10descriptor13deterministicE", "oneapi::dal::pca::descriptor::deterministic"], [23, 3, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer"], [23, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::Float"], [23, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::Method"], [23, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::Task"], [23, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::desc"], [23, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::input"], [23, 7, 1, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE", "oneapi::dal::pca::infer_input"], [23, 8, 1, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE", "oneapi::dal::pca::infer_input::Task"], [23, 6, 1, "_CPPv4N6oneapi3dal3pca11infer_input4dataE", "oneapi::dal::pca::infer_input::data"], [23, 3, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input"], [23, 4, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input::data"], [23, 4, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input::m"], [23, 6, 1, "_CPPv4N6oneapi3dal3pca11infer_input5modelE", "oneapi::dal::pca::infer_input::model"], [23, 7, 1, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE", "oneapi::dal::pca::infer_result"], [23, 8, 1, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE", "oneapi::dal::pca::infer_result::Task"], [23, 3, 1, "_CPPv4NK6oneapi3dal3pca12infer_result20get_transformed_dataEv", "oneapi::dal::pca::infer_result::get_transformed_data"], [23, 3, 1, "_CPPv4N6oneapi3dal3pca12infer_result12infer_resultEv", "oneapi::dal::pca::infer_result::infer_result"], [23, 5, 1, "_CPPv4N6oneapi3dal3pca6method10by_defaultE", "oneapi::dal::pca::method::by_default"], [23, 7, 1, "_CPPv4N6oneapi3dal3pca6method3covE", "oneapi::dal::pca::method::cov"], [23, 7, 1, "_CPPv4N6oneapi3dal3pca6method3svdE", "oneapi::dal::pca::method::svd"], [23, 7, 1, "_CPPv4I0EN6oneapi3dal3pca5modelE", "oneapi::dal::pca::model"], [23, 8, 1, "_CPPv4I0EN6oneapi3dal3pca5modelE", "oneapi::dal::pca::model::Task"], [23, 3, 1, "_CPPv4NK6oneapi3dal3pca5model19get_component_countEv", "oneapi::dal::pca::model::get_component_count"], [23, 3, 1, "_CPPv4NK6oneapi3dal3pca5model16get_eigenvectorsEv", "oneapi::dal::pca::model::get_eigenvectors"], [23, 3, 1, "_CPPv4N6oneapi3dal3pca5model5modelEv", "oneapi::dal::pca::model::model"], [23, 5, 1, "_CPPv4N6oneapi3dal3pca4task10by_defaultE", "oneapi::dal::pca::task::by_default"], [23, 7, 1, "_CPPv4N6oneapi3dal3pca4task13dim_reductionE", "oneapi::dal::pca::task::dim_reduction"], [23, 3, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train"], [23, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::Float"], [23, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::Method"], [23, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::Task"], [23, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::desc"], [23, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::input"], [23, 7, 1, "_CPPv4I0EN6oneapi3dal3pca11train_inputE", "oneapi::dal::pca::train_input"], [23, 8, 1, "_CPPv4I0EN6oneapi3dal3pca11train_inputE", "oneapi::dal::pca::train_input::Task"], [23, 6, 1, "_CPPv4N6oneapi3dal3pca11train_input4dataE", "oneapi::dal::pca::train_input::data"], [23, 3, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table", "oneapi::dal::pca::train_input::train_input"], [23, 4, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table", "oneapi::dal::pca::train_input::train_input::data"], [23, 7, 1, "_CPPv4I0EN6oneapi3dal3pca12train_resultE", "oneapi::dal::pca::train_result"], [23, 8, 1, "_CPPv4I0EN6oneapi3dal3pca12train_resultE", "oneapi::dal::pca::train_result::Task"], [23, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result15get_eigenvaluesEv", "oneapi::dal::pca::train_result::get_eigenvalues"], [23, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result16get_eigenvectorsEv", "oneapi::dal::pca::train_result::get_eigenvectors"], [23, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result9get_meansEv", "oneapi::dal::pca::train_result::get_means"], [23, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result9get_modelEv", "oneapi::dal::pca::train_result::get_model"], [23, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result13get_variancesEv", "oneapi::dal::pca::train_result::get_variances"], [23, 3, 1, "_CPPv4N6oneapi3dal3pca12train_result12train_resultEv", "oneapi::dal::pca::train_result::train_result"], [30, 7, 1, "_CPPv4N6oneapi3dal5rangeE", "oneapi::dal::range"], [30, 3, 1, "_CPPv4NK6oneapi3dal5range17get_element_countENSt7int64_tE", "oneapi::dal::range::get_element_count"], [30, 4, 1, "_CPPv4NK6oneapi3dal5range17get_element_countENSt7int64_tE", "oneapi::dal::range::get_element_count::max_end_index"], [30, 3, 1, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE", "oneapi::dal::range::range"], [30, 4, 1, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE", "oneapi::dal::range::range::end"], [30, 4, 1, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE", "oneapi::dal::range::range::start"], [39, 3, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read"], [39, 8, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::DataSource"], [39, 8, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::Object"], [39, 4, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::ds"], [36, 7, 1, "_CPPv4I0EN6oneapi3dal12row_accessorE", "oneapi::dal::row_accessor"], [36, 8, 1, "_CPPv4I0EN6oneapi3dal12row_accessorE", "oneapi::dal::row_accessor::Data"], [36, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull"], [36, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull"], [36, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::alloc"], [36, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::alloc"], [36, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::block"], [36, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::queue"], [36, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::queue"], [36, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::rows"], [36, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::rows"], [36, 3, 1, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor"], [36, 4, 1, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor::obj"], [43, 7, 1, "_CPPv4N6oneapi3dal5tableE", "oneapi::dal::table"], [43, 3, 1, "_CPPv4NK6oneapi3dal5table16get_column_countEv", "oneapi::dal::table::get_column_count"], [43, 3, 1, "_CPPv4NK6oneapi3dal5table15get_data_layoutEv", "oneapi::dal::table::get_data_layout"], [43, 3, 1, "_CPPv4NK6oneapi3dal5table8get_kindEv", "oneapi::dal::table::get_kind"], [43, 3, 1, "_CPPv4NK6oneapi3dal5table12get_metadataEv", "oneapi::dal::table::get_metadata"], [43, 3, 1, "_CPPv4NK6oneapi3dal5table13get_row_countEv", "oneapi::dal::table::get_row_count"], [43, 3, 1, "_CPPv4NK6oneapi3dal5table8has_dataEv", "oneapi::dal::table::has_data"], [43, 3, 1, "_CPPv4N6oneapi3dal5tableaSERK5table", "oneapi::dal::table::operator="], [43, 3, 1, "_CPPv4N6oneapi3dal5tableaSERR5table", "oneapi::dal::table::operator="], [43, 4, 1, "_CPPv4N6oneapi3dal5tableaSERK5table", "oneapi::dal::table::operator=::other"], [43, 4, 1, "_CPPv4N6oneapi3dal5tableaSERR5table", "oneapi::dal::table::operator=::other"], [43, 3, 1, "_CPPv4N6oneapi3dal5table5tableERK5table", "oneapi::dal::table::table"], [43, 3, 1, "_CPPv4N6oneapi3dal5table5tableERR5table", "oneapi::dal::table::table"], [43, 3, 1, "_CPPv4N6oneapi3dal5table5tableEv", "oneapi::dal::table::table"], [43, 4, 1, "_CPPv4N6oneapi3dal5table5tableERK5table", "oneapi::dal::table::table::other"], [43, 4, 1, "_CPPv4N6oneapi3dal5table5tableERR5table", "oneapi::dal::table::table::other"], [43, 7, 1, "_CPPv4N6oneapi3dal14table_metadataE", "oneapi::dal::table_metadata"], [43, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_data_type"], [43, 4, 1, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_data_type::feature_index"], [43, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_countEv", "oneapi::dal::table_metadata::get_feature_count"], [43, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_feature_type"], [43, 4, 1, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_feature_type::feature_index"], [43, 3, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE", "oneapi::dal::table_metadata::table_metadata"], [43, 3, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataEv", "oneapi::dal::table_metadata::table_metadata"], [43, 4, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE", "oneapi::dal::table_metadata::table_metadata::dtypes"], [43, 4, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE", "oneapi::dal::table_metadata::table_metadata::ftypes"], [850, 3, 1, "_CPPv4N6oneapi3tbb10combinable5clearEv", "oneapi::tbb::combinable::clear"], [850, 3, 1, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit", "oneapi::tbb::combinable::combinable"], [850, 3, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERK10combinable", "oneapi::tbb::combinable::combinable"], [850, 3, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERR10combinable", "oneapi::tbb::combinable::combinable"], [850, 3, 1, "_CPPv4N6oneapi3tbb10combinable10combinableEv", "oneapi::tbb::combinable::combinable"], [850, 8, 1, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit", "oneapi::tbb::combinable::combinable::FInit"], [850, 4, 1, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit", "oneapi::tbb::combinable::combinable::finit"], [850, 4, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERK10combinable", "oneapi::tbb::combinable::combinable::other"], [850, 4, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERR10combinable", "oneapi::tbb::combinable::combinable::other"], [850, 3, 1, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc", "oneapi::tbb::combinable::combine"], [850, 8, 1, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc", "oneapi::tbb::combinable::combine::BinaryFunc"], [850, 4, 1, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc", "oneapi::tbb::combinable::combine::f"], [850, 3, 1, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc", "oneapi::tbb::combinable::combine_each"], [850, 8, 1, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc", "oneapi::tbb::combinable::combine_each::UnaryFunc"], [850, 4, 1, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc", "oneapi::tbb::combinable::combine_each::f"], [850, 3, 1, "_CPPv4N6oneapi3tbb10combinable5localERb", "oneapi::tbb::combinable::local"], [850, 3, 1, "_CPPv4N6oneapi3tbb10combinable5localEv", "oneapi::tbb::combinable::local"], [850, 4, 1, "_CPPv4N6oneapi3tbb10combinable5localERb", "oneapi::tbb::combinable::local::exists"], [850, 3, 1, "_CPPv4N6oneapi3tbb10combinableaSERK10combinable", "oneapi::tbb::combinable::operator="], [850, 3, 1, "_CPPv4N6oneapi3tbb10combinableaSERR10combinable", "oneapi::tbb::combinable::operator="], [850, 4, 1, "_CPPv4N6oneapi3tbb10combinableaSERK10combinable", "oneapi::tbb::combinable::operator=::other"], [850, 4, 1, "_CPPv4N6oneapi3tbb10combinableaSERR10combinable", "oneapi::tbb::combinable::operator=::other"], [850, 3, 1, "_CPPv4N6oneapi3tbb10combinableD0Ev", "oneapi::tbb::combinable::~combinable"], [854, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5beginEv", "oneapi::tbb::enumerable_thread_specific::begin"], [854, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5beginEv", "oneapi::tbb::enumerable_thread_specific::begin"], [852, 3, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc", "oneapi::tbb::enumerable_thread_specific::combine"], [852, 8, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc", "oneapi::tbb::enumerable_thread_specific::combine::BinaryFunc"], [852, 4, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc", "oneapi::tbb::enumerable_thread_specific::combine::f"], [852, 3, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc", "oneapi::tbb::enumerable_thread_specific::combine_each"], [852, 8, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc", "oneapi::tbb::enumerable_thread_specific::combine_each::UnaryFunc"], [852, 4, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc", "oneapi::tbb::enumerable_thread_specific::combine_each::f"], [856, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5emptyEv", "oneapi::tbb::enumerable_thread_specific::empty"], [854, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific3endEv", "oneapi::tbb::enumerable_thread_specific::end"], [854, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific3endEv", "oneapi::tbb::enumerable_thread_specific::end"], [855, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localERb", "oneapi::tbb::enumerable_thread_specific::local"], [855, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localEv", "oneapi::tbb::enumerable_thread_specific::local"], [855, 4, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localERb", "oneapi::tbb::enumerable_thread_specific::local::exists"], [854, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range"], [854, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range"], [854, 4, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range::grainsize"], [854, 4, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range::grainsize"], [856, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific4sizeEv", "oneapi::tbb::enumerable_thread_specific::size"], [858, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d5beginEv", "oneapi::tbb::flatten2d::begin"], [858, 3, 1, "_CPPv4NK6oneapi3tbb9flatten2d5beginEv", "oneapi::tbb::flatten2d::begin"], [858, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d3endEv", "oneapi::tbb::flatten2d::end"], [858, 3, 1, "_CPPv4NK6oneapi3tbb9flatten2d3endEv", "oneapi::tbb::flatten2d::end"], [858, 3, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d"], [858, 8, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::Container"], [858, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::b"], [858, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::c"], [858, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::e"], [858, 3, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d"], [858, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d"], [858, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d"], [858, 8, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d::Container"], [858, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d::c"], [858, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d::c"], [858, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d::c"], [858, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d::first"], [858, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d::last"], [858, 3, 1, "_CPPv4NK6oneapi3tbb9flatten2d4sizeEv", "oneapi::tbb::flatten2d::size"], [758, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeER5graph", "oneapi::tbb::flow::indexer_node::indexer_node"], [758, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeERK12indexer_node", "oneapi::tbb::flow::indexer_node::indexer_node"], [758, 4, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeER5graph", "oneapi::tbb::flow::indexer_node::indexer_node::g"], [758, 4, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeERK12indexer_node", "oneapi::tbb::flow::indexer_node::indexer_node::src"], [758, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node11input_portsEv", "oneapi::tbb::flow::indexer_node::input_ports"], [758, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node7try_getER11output_type", "oneapi::tbb::flow::indexer_node::try_get"], [758, 4, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node7try_getER11output_type", "oneapi::tbb::flow::indexer_node::try_get::v"], [763, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node11decrementerEv", "oneapi::tbb::flow::limiter_node::decrementer"], [763, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t", "oneapi::tbb::flow::limiter_node::limiter_node"], [763, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeERK12limiter_node", "oneapi::tbb::flow::limiter_node::limiter_node"], [763, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t", "oneapi::tbb::flow::limiter_node::limiter_node::g"], [763, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeERK12limiter_node", "oneapi::tbb::flow::limiter_node::limiter_node::src"], [763, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t", "oneapi::tbb::flow::limiter_node::limiter_node::threshold"], [763, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_getER1T", "oneapi::tbb::flow::limiter_node::try_get"], [763, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_getER1T", "oneapi::tbb::flow::limiter_node::try_get::v"], [763, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_putERK1T", "oneapi::tbb::flow::limiter_node::try_put"], [763, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_putERK1T", "oneapi::tbb::flow::limiter_node::try_put::v"], [769, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node5clearEv", "oneapi::tbb::flow::overwrite_node::clear"], [769, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node8is_validEv", "oneapi::tbb::flow::overwrite_node::is_valid"], [769, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeER5graph", "oneapi::tbb::flow::overwrite_node::overwrite_node"], [769, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeERK14overwrite_node", "oneapi::tbb::flow::overwrite_node::overwrite_node"], [769, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeER5graph", "oneapi::tbb::flow::overwrite_node::overwrite_node::g"], [769, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeERK14overwrite_node", "oneapi::tbb::flow::overwrite_node::overwrite_node::src"], [769, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_getER1T", "oneapi::tbb::flow::overwrite_node::try_get"], [769, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_getER1T", "oneapi::tbb::flow::overwrite_node::try_get::v"], [769, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_putERK1T", "oneapi::tbb::flow::overwrite_node::try_put"], [769, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_putERK1T", "oneapi::tbb::flow::overwrite_node::try_put::v"], [769, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_nodeD0Ev", "oneapi::tbb::flow::overwrite_node::~overwrite_node"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeER5graph", "oneapi::tbb::flow::priority_node_queue::priority_queue_node"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeERK19priority_queue_node", "oneapi::tbb::flow::priority_node_queue::priority_queue_node"], [771, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeER5graph", "oneapi::tbb::flow::priority_node_queue::priority_queue_node::g"], [771, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeERK19priority_queue_node", "oneapi::tbb::flow::priority_node_queue::priority_queue_node::src"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_getER1T", "oneapi::tbb::flow::priority_node_queue::try_get"], [771, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_getER1T", "oneapi::tbb::flow::priority_node_queue::try_get::v"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_putERK1T", "oneapi::tbb::flow::priority_node_queue::try_put"], [771, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_putERK1T", "oneapi::tbb::flow::priority_node_queue::try_put::v"], [772, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeER5graph", "oneapi::tbb::flow::queue_node::queue_node"], [772, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeERK10queue_node", "oneapi::tbb::flow::queue_node::queue_node"], [772, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeER5graph", "oneapi::tbb::flow::queue_node::queue_node::g"], [772, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeERK10queue_node", "oneapi::tbb::flow::queue_node::queue_node::src"], [772, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_getER1T", "oneapi::tbb::flow::queue_node::try_get"], [772, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_getER1T", "oneapi::tbb::flow::queue_node::try_get::v"], [772, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_putERK1T", "oneapi::tbb::flow::queue_node::try_put"], [772, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_putERK1T", "oneapi::tbb::flow::queue_node::try_put::v"], [777, 3, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node"], [777, 3, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node14sequencer_nodeERK14sequencer_node", "oneapi::tbb::flow::sequencer_node::sequencer_node"], [777, 8, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node::Sequencer"], [777, 4, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node::g"], [777, 4, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node::s"], [777, 4, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node14sequencer_nodeERK14sequencer_node", "oneapi::tbb::flow::sequencer_node::sequencer_node::src"], [777, 3, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_getER1T", "oneapi::tbb::flow::sequencer_node::try_get"], [777, 4, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_getER1T", "oneapi::tbb::flow::sequencer_node::try_get::v"], [777, 3, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_putERK1T", "oneapi::tbb::flow::sequencer_node::try_put"], [777, 4, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_putERK1T", "oneapi::tbb::flow::sequencer_node::try_put::v"], [778, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node12output_portsEv", "oneapi::tbb::flow::split_node::output_ports"], [778, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeER5graph", "oneapi::tbb::flow::split_node::split_node"], [778, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeERK10split_node", "oneapi::tbb::flow::split_node::split_node"], [778, 4, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeER5graph", "oneapi::tbb::flow::split_node::split_node::g"], [778, 4, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeERK10split_node", "oneapi::tbb::flow::split_node::split_node::other"], [778, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node7try_putERK9TupleType", "oneapi::tbb::flow::split_node::try_put"], [778, 4, 1, "_CPPv4N6oneapi3tbb4flow10split_node7try_putERK9TupleType", "oneapi::tbb::flow::split_node::try_put::v"], [778, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_nodeD0Ev", "oneapi::tbb::flow::split_node::~split_node"], [780, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode5clearEv", "oneapi::tbb::flow::write_once_mode::clear"], [780, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode8is_validEv", "oneapi::tbb::flow::write_once_mode::is_valid"], [780, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_getER1T", "oneapi::tbb::flow::write_once_mode::try_get"], [780, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_getER1T", "oneapi::tbb::flow::write_once_mode::try_get::v"], [780, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_putERK1T", "oneapi::tbb::flow::write_once_mode::try_put"], [780, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_putERK1T", "oneapi::tbb::flow::write_once_mode::try_put::v"], [780, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeER5graph", "oneapi::tbb::flow::write_once_mode::write_once_node"], [780, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeERK15write_once_node", "oneapi::tbb::flow::write_once_mode::write_once_node"], [780, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeER5graph", "oneapi::tbb::flow::write_once_mode::write_once_node::g"], [780, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeERK15write_once_node", "oneapi::tbb::flow::write_once_mode::write_once_node::src"], [780, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_modeD0Ev", "oneapi::tbb::flow::write_once_mode::~write_once_node"], [792, 3, 1, "_CPPv4N6oneapi3tbb5mutex4lockEv", "oneapi::tbb::mutex::lock"], [792, 3, 1, "_CPPv4N6oneapi3tbb5mutex5mutexEv", "oneapi::tbb::mutex::mutex"], [792, 7, 1, "_CPPv4N6oneapi3tbb5mutex11scoped_lockE", "oneapi::tbb::mutex::scoped_lock"], [792, 3, 1, "_CPPv4N6oneapi3tbb5mutex8try_lockEv", "oneapi::tbb::mutex::try_lock"], [792, 3, 1, "_CPPv4N6oneapi3tbb5mutex6unlockEv", "oneapi::tbb::mutex::unlock"], [792, 3, 1, "_CPPv4N6oneapi3tbb5mutexD0Ev", "oneapi::tbb::mutex::~mutex"], [794, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex4lockEv", "oneapi::tbb::null_rw_mutex::lock"], [794, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex11lock_sharedEv", "oneapi::tbb::null_rw_mutex::lock_shared"], [794, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex13null_rw_mutexEv", "oneapi::tbb::null_rw_mutex::null_rw_mutex"], [794, 7, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex11scoped_lockE", "oneapi::tbb::null_rw_mutex::scoped_lock"], [794, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex8try_lockEv", "oneapi::tbb::null_rw_mutex::try_lock"], [794, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex15try_lock_sharedEv", "oneapi::tbb::null_rw_mutex::try_lock_shared"], [794, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex6unlockEv", "oneapi::tbb::null_rw_mutex::unlock"], [794, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex13unlock_sharedEv", "oneapi::tbb::null_rw_mutex::unlock_shared"], [794, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutexD0Ev", "oneapi::tbb::null_rw_mutex::~null_rw_mutex"], [795, 3, 1, "_CPPv4N6oneapi3tbb14queueing_mutex13queuing_mutexEv", "oneapi::tbb::queueing_mutex::queuing_mutex"], [795, 7, 1, "_CPPv4N6oneapi3tbb14queueing_mutex11scoped_lockE", "oneapi::tbb::queueing_mutex::scoped_lock"], [795, 3, 1, "_CPPv4N6oneapi3tbb14queueing_mutexD0Ev", "oneapi::tbb::queueing_mutex::~queuing_mutex"], [796, 3, 1, "_CPPv4N6oneapi3tbb17queueing_rw_mutex16queuing_rw_mutexEv", "oneapi::tbb::queueing_rw_mutex::queuing_rw_mutex"], [796, 7, 1, "_CPPv4N6oneapi3tbb17queueing_rw_mutex11scoped_lockE", "oneapi::tbb::queueing_rw_mutex::scoped_lock"], [796, 3, 1, "_CPPv4N6oneapi3tbb17queueing_rw_mutexD0Ev", "oneapi::tbb::queueing_rw_mutex::~queuing_rw_mutex"], [797, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex4lockEv", "oneapi::tbb::rw_mutex::lock"], [797, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex11lock_sharedEv", "oneapi::tbb::rw_mutex::lock_shared"], [797, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex8rw_mutexEv", "oneapi::tbb::rw_mutex::rw_mutex"], [797, 7, 1, "_CPPv4N6oneapi3tbb8rw_mutex11scoped_lockE", "oneapi::tbb::rw_mutex::scoped_lock"], [797, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex8try_lockEv", "oneapi::tbb::rw_mutex::try_lock"], [797, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex15try_lock_sharedEv", "oneapi::tbb::rw_mutex::try_lock_shared"], [797, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex6unlockEv", "oneapi::tbb::rw_mutex::unlock"], [797, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex13unlock_sharedEv", "oneapi::tbb::rw_mutex::unlock_shared"], [797, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutexD0Ev", "oneapi::tbb::rw_mutex::~rw_mutex"], [788, 3, 1, "_CPPv4N6oneapi3tbb18scalable_allocator8allocateE9size_type", "oneapi::tbb::scalable_allocator::allocate"], [788, 4, 1, "_CPPv4N6oneapi3tbb18scalable_allocator8allocateE9size_type", "oneapi::tbb::scalable_allocator::allocate::n"], [788, 3, 1, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type", "oneapi::tbb::scalable_allocator::deallocate"], [788, 4, 1, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type", "oneapi::tbb::scalable_allocator::deallocate::n"], [788, 4, 1, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type", "oneapi::tbb::scalable_allocator::deallocate::p"], [788, 3, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator!="], [788, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator!=::T"], [788, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator!=::U"], [788, 3, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator=="], [788, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator==::T"], [788, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator==::U"], [798, 7, 1, "_CPPv4N6oneapi3tbb22speculative_spin_mutex11scoped_lockE", "oneapi::tbb::speculative_spin_mutex::scoped_lock"], [798, 3, 1, "_CPPv4N6oneapi3tbb22speculative_spin_mutex22speculative_spin_mutexEv", "oneapi::tbb::speculative_spin_mutex::speculative_spin_mutex"], [798, 3, 1, "_CPPv4N6oneapi3tbb22speculative_spin_mutexD0Ev", "oneapi::tbb::speculative_spin_mutex::~speculative_spin_mutex"], [799, 7, 1, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex11scoped_lockE", "oneapi::tbb::speculative_spin_rw_mutex::scoped_lock"], [799, 3, 1, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex25speculative_spin_rw_mutexEv", "oneapi::tbb::speculative_spin_rw_mutex::speculative_spin_rw_mutex"], [799, 3, 1, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutexD0Ev", "oneapi::tbb::speculative_spin_rw_mutex::~speculative_spin_rw_mutex"], [800, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex4lockEv", "oneapi::tbb::spin_mutex::lock"], [800, 7, 1, "_CPPv4N6oneapi3tbb10spin_mutex11scoped_lockE", "oneapi::tbb::spin_mutex::scoped_lock"], [800, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex10spin_mutexEv", "oneapi::tbb::spin_mutex::spin_mutex"], [800, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex8try_lockEv", "oneapi::tbb::spin_mutex::try_lock"], [800, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex6unlockEv", "oneapi::tbb::spin_mutex::unlock"], [800, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutexD0Ev", "oneapi::tbb::spin_mutex::~spin_mutex"], [801, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex4lockEv", "oneapi::tbb::spin_rw_mutex::lock"], [801, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex11lock_sharedEv", "oneapi::tbb::spin_rw_mutex::lock_shared"], [801, 7, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex11scoped_lockE", "oneapi::tbb::spin_rw_mutex::scoped_lock"], [801, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex13spin_rw_mutexEv", "oneapi::tbb::spin_rw_mutex::spin_rw_mutex"], [801, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex8try_lockEv", "oneapi::tbb::spin_rw_mutex::try_lock"], [801, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex15try_lock_sharedEv", "oneapi::tbb::spin_rw_mutex::try_lock_shared"], [801, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex6unlockEv", "oneapi::tbb::spin_rw_mutex::unlock"], [801, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex13unlock_sharedEv", "oneapi::tbb::spin_rw_mutex::unlock_shared"], [801, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutexD0Ev", "oneapi::tbb::spin_rw_mutex::~spin_rw_mutex"], [846, 3, 1, "_CPPv4N6oneapi3tbb10task_group6cancelEv", "oneapi::tbb::task_group::cancel"], [846, 3, 1, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F", "oneapi::tbb::task_group::defer"], [846, 8, 1, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F", "oneapi::tbb::task_group::defer::F"], [846, 4, 1, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F", "oneapi::tbb::task_group::defer::f"], [846, 3, 1, "_CPPv4N6oneapi3tbb10task_group31is_current_task_group_cancelingEv", "oneapi::tbb::task_group::is_current_task_group_canceling"], [846, 3, 1, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func", "oneapi::tbb::task_group::run"], [846, 3, 1, "_CPPv4N6oneapi3tbb10task_group3runERR11task_handle", "oneapi::tbb::task_group::run"], [846, 8, 1, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func", "oneapi::tbb::task_group::run::Func"], [846, 4, 1, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func", "oneapi::tbb::task_group::run::f"], [846, 4, 1, "_CPPv4N6oneapi3tbb10task_group3runERR11task_handle", "oneapi::tbb::task_group::run::h"], [846, 3, 1, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func", "oneapi::tbb::task_group::run_and_wait"], [846, 8, 1, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func", "oneapi::tbb::task_group::run_and_wait::Func"], [846, 4, 1, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func", "oneapi::tbb::task_group::run_and_wait::f"], [846, 3, 1, "_CPPv4N6oneapi3tbb10task_group10task_groupER18task_group_context", "oneapi::tbb::task_group::task_group"], [846, 3, 1, "_CPPv4N6oneapi3tbb10task_group10task_groupEv", "oneapi::tbb::task_group::task_group"], [846, 4, 1, "_CPPv4N6oneapi3tbb10task_group10task_groupER18task_group_context", "oneapi::tbb::task_group::task_group::context"], [846, 3, 1, "_CPPv4N6oneapi3tbb10task_group4waitEv", "oneapi::tbb::task_group::wait"], [846, 3, 1, "_CPPv4N6oneapi3tbb10task_groupD0Ev", "oneapi::tbb::task_group::~task_group"], [790, 3, 1, "_CPPv4N6oneapi3tbb13tbb_allocator8allocateE9size_type", "oneapi::tbb::tbb_allocator::allocate"], [790, 4, 1, "_CPPv4N6oneapi3tbb13tbb_allocator8allocateE9size_type", "oneapi::tbb::tbb_allocator::allocate::n"], [790, 3, 1, "_CPPv4N6oneapi3tbb13tbb_allocator14allocator_typeEv", "oneapi::tbb::tbb_allocator::allocator_type"], [790, 3, 1, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type", "oneapi::tbb::tbb_allocator::deallocate"], [790, 4, 1, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type", "oneapi::tbb::tbb_allocator::deallocate::n"], [790, 4, 1, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type", "oneapi::tbb::tbb_allocator::deallocate::p"], [790, 3, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator!="], [790, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator!=::T"], [790, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator!=::U"], [790, 3, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator=="], [790, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator==::T"], [790, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator==::U"], [567, 3, 1, "_CPPv4cvbv", "operator bool"], [842, 3, 1, "_CPPv4NKcvbEv", "operator bool"], [572, 3, 1, "_CPPv4NKcv5splitEv", "operator split"], [786, 3, 1, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator!="], [786, 8, 1, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator!=::T"], [786, 8, 1, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator!=::U"], [561, 3, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;"], [561, 8, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::T"], [561, 8, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::U"], [561, 8, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::V"], [561, 4, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::left"], [561, 4, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::right"], [809, 3, 1, "_CPPv4mlRK5IndexRK5Index", "operator*"], [809, 4, 1, "_CPPv4mlRK5IndexRK5Index", "operator*::i"], [809, 4, 1, "_CPPv4mlRK5IndexRK5Index", "operator*::j"], [803, 3, 1, "_CPPv4plRK5Value1D", "operator+"], [809, 3, 1, "_CPPv4plRK5Index1D", "operator+"], [809, 3, 1, "_CPPv4plRK5IndexRK5Index", "operator+"], [809, 3, 1, "_CPPv4ppv", "operator++"], [803, 4, 1, "_CPPv4plRK5Value1D", "operator+::i"], [809, 4, 1, "_CPPv4plRK5Index1D", "operator+::i"], [809, 4, 1, "_CPPv4plRK5IndexRK5Index", "operator+::i"], [809, 4, 1, "_CPPv4plRK5IndexRK5Index", "operator+::j"], [803, 4, 1, "_CPPv4plRK5Value1D", "operator+::k"], [809, 4, 1, "_CPPv4plRK5Index1D", "operator+::k"], [803, 3, 1, "_CPPv4miRK5ValueRK5Value", "operator-"], [809, 3, 1, "_CPPv4miRK5IndexRK5Index", "operator-"], [803, 4, 1, "_CPPv4miRK5ValueRK5Value", "operator-::i"], [809, 4, 1, "_CPPv4miRK5IndexRK5Index", "operator-::i"], [803, 4, 1, "_CPPv4miRK5ValueRK5Value", "operator-::j"], [809, 4, 1, "_CPPv4miRK5IndexRK5Index", "operator-::j"], [809, 3, 1, "_CPPv4dvRK5IndexRK5Index", "operator/"], [809, 4, 1, "_CPPv4dvRK5IndexRK5Index", "operator/::i"], [809, 4, 1, "_CPPv4dvRK5IndexRK5Index", "operator/::j"], [802, 3, 1, "_CPPv4ltRK1TRK1T", "operator&lt;"], [803, 3, 1, "_CPPv4ltRK5ValueRK5Value", "operator&lt;"], [809, 3, 1, "_CPPv4ltRK5IndexRK5Index", "operator&lt;"], [803, 4, 1, "_CPPv4ltRK5ValueRK5Value", "operator&lt;::i"], [809, 4, 1, "_CPPv4ltRK5IndexRK5Index", "operator&lt;::i"], [803, 4, 1, "_CPPv4ltRK5ValueRK5Value", "operator&lt;::j"], [809, 4, 1, "_CPPv4ltRK5IndexRK5Index", "operator&lt;::j"], [802, 4, 1, "_CPPv4ltRK1TRK1T", "operator&lt;::x"], [802, 4, 1, "_CPPv4ltRK1TRK1T", "operator&lt;::y"], [809, 3, 1, "_CPPv4leRK5IndexRK5Index", "operator&lt;="], [809, 4, 1, "_CPPv4leRK5IndexRK5Index", "operator&lt;=::i"], [809, 4, 1, "_CPPv4leRK5IndexRK5Index", "operator&lt;=::j"], [803, 3, 1, "_CPPv4aSRK5Value", "operator="], [809, 3, 1, "_CPPv4aSRK5Index", "operator="], [842, 3, 1, "_CPPv4aSRR21task_scheduler_handle", "operator="], [842, 4, 1, "_CPPv4aSRR21task_scheduler_handle", "operator=::other"], [786, 3, 1, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator=="], [786, 8, 1, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator==::T"], [786, 8, 1, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator==::U"], [748, 3, 1, "_CPPv412output_portsv", "output_ports"], [839, 9, 1, "_CPPv4N9parameter23max_allowed_parallelismE", "parameter::max_allowed_parallelism"], [839, 9, 1, "_CPPv4N9parameter22terminate_on_exceptionE", "parameter::terminate_on_exception"], [839, 9, 1, "_CPPv4N9parameter17thread_stack_sizeE", "parameter::thread_stack_size"], [843, 9, 1, "_CPPv4N8priority4highE", "priority::high"], [843, 9, 1, "_CPPv4N8priority3lowE", "priority::low"], [843, 9, 1, "_CPPv4N8priority6normalE", "priority::normal"], [572, 3, 1, "_CPPv418proportional_splitNSt6size_tENSt6size_tE", "proportional_split"], [572, 4, 1, "_CPPv418proportional_splitNSt6size_tENSt6size_tE", "proportional_split::_left"], [572, 4, 1, "_CPPv418proportional_splitNSt6size_tENSt6size_tE", "proportional_split::_right"], [842, 3, 1, "_CPPv47releasev", "release"], [756, 3, 1, "_CPPv45reset11reset_flags", "reset"], [841, 3, 1, "_CPPv45resetv", "reset"], [756, 4, 1, "_CPPv45reset11reset_flags", "reset::f"], [572, 3, 1, "_CPPv4NK5rightEv", "right"], [785, 3, 1, "_CPPv424scalable_allocation_modei8intptr_t", "scalable_allocation_mode"], [785, 4, 1, "_CPPv424scalable_allocation_modei8intptr_t", "scalable_allocation_mode::mode"], [785, 4, 1, "_CPPv424scalable_allocation_modei8intptr_t", "scalable_allocation_mode::value"], [785, 3, 1, "_CPPv414scalable_msizePv", "scalable_msize"], [785, 4, 1, "_CPPv414scalable_msizePv", "scalable_msize::ptr"], [793, 7, 1, "_CPPv411scoped_lock", "scoped_lock"], [748, 3, 1, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type", "set_external_ports"], [748, 4, 1, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type", "set_external_ports::input_ports_tuple"], [748, 4, 1, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type", "set_external_ports::output_ports_tuple"], [552, 3, 1, "_CPPv4NK4sizeEv", "size"], [552, 5, 1, "_CPPv49size_type", "size_type"], [804, 3, 1, "_CPPv4NSt5beginE1c", "std::begin"], [804, 3, 1, "_CPPv4NSt3endE1c", "std::end"], [563, 3, 1, "_CPPv44stopv", "stop"], [802, 3, 1, "_CPPv44swapR1TR1T", "swap"], [802, 4, 1, "_CPPv44swapR1TR1T", "swap::x"], [802, 4, 1, "_CPPv44swapR1TR1T", "swap::y"], [779, 3, 1, "_CPPv4NK3tagEv", "tag"], [779, 3, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg"], [779, 8, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::R"], [779, 8, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::T"], [779, 4, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::index"], [779, 4, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::value"], [743, 3, 1, "_CPPv410task_arenaN10task_arena6attachE", "task_arena"], [843, 3, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena"], [843, 3, 1, "_CPPv410task_arenaN6oneapi3tbb6attachE", "task_arena"], [843, 3, 1, "_CPPv410task_arenaRK10task_arena", "task_arena"], [843, 3, 1, "_CPPv410task_arenaij8priority", "task_arena"], [843, 4, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena::a_constraints"], [843, 4, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena::a_priority"], [843, 4, 1, "_CPPv410task_arenaij8priority", "task_arena::a_priority"], [843, 4, 1, "_CPPv410task_arenaij8priority", "task_arena::max_concurrency"], [843, 4, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena::reserved_for_masters"], [843, 4, 1, "_CPPv410task_arenaij8priority", "task_arena::reserved_for_masters"], [841, 3, 1, "_CPPv418task_group_context6kind_t9uintptr_t", "task_group_context"], [841, 4, 1, "_CPPv418task_group_context6kind_t9uintptr_t", "task_group_context::relation_to_parent"], [841, 4, 1, "_CPPv418task_group_context6kind_t9uintptr_t", "task_group_context::traits"], [842, 3, 1, "_CPPv421task_scheduler_handleN6oneapi3tbb6attachE", "task_scheduler_handle"], [842, 3, 1, "_CPPv421task_scheduler_handleRR21task_scheduler_handle", "task_scheduler_handle"], [842, 3, 1, "_CPPv421task_scheduler_handlev", "task_scheduler_handle"], [842, 4, 1, "_CPPv421task_scheduler_handleRR21task_scheduler_handle", "task_scheduler_handle::other"], [844, 3, 1, "_CPPv423task_scheduler_observerR10task_arena", "task_scheduler_observer"], [844, 3, 1, "_CPPv423task_scheduler_observerv", "task_scheduler_observer"], [848, 3, 1, "_CPPv4NK3tbb11task_handlecvbEv", "tbb::task_handle::operator bool"], [848, 3, 1, "_CPPv4N3tbb11task_handleaSERR11task_handle", "tbb::task_handle::operator="], [848, 4, 1, "_CPPv4N3tbb11task_handleaSERR11task_handle", "tbb::task_handle::operator=::src"], [848, 3, 1, "_CPPv4N3tbb11task_handle11task_handleERR11task_handle", "tbb::task_handle::task_handle"], [848, 3, 1, "_CPPv4N3tbb11task_handle11task_handleEv", "tbb::task_handle::task_handle"], [848, 4, 1, "_CPPv4N3tbb11task_handle11task_handleERR11task_handle", "tbb::task_handle::task_handle::src"], [848, 3, 1, "_CPPv4N3tbb11task_handleD0Ev", "tbb::task_handle::~task_handle"], [845, 3, 1, "_CPPv4N3tbb15this_task_arena20current_thread_indexEv", "tbb::this_task_arena::current_thread_index"], [845, 3, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F", "tbb::this_task_arena::enqueue"], [845, 3, 1, "_CPPv4N3tbb15this_task_arena7enqueueERR11task_handle", "tbb::this_task_arena::enqueue"], [845, 8, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F", "tbb::this_task_arena::enqueue::F"], [845, 4, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F", "tbb::this_task_arena::enqueue::f"], [845, 4, 1, "_CPPv4N3tbb15this_task_arena7enqueueERR11task_handle", "tbb::this_task_arena::enqueue::h"], [845, 3, 1, "_CPPv4I_1FEN3tbb15this_task_arena7isolateEDTcl1fEERR1F", "tbb::this_task_arena::isolate"], [845, 4, 1, "_CPPv4I_1FEN3tbb15this_task_arena7isolateEDTcl1fEERR1F", "tbb::this_task_arena::isolate::f"], [845, 3, 1, "_CPPv4N3tbb15this_task_arena15max_concurrencyEv", "tbb::this_task_arena::max_concurrency"], [843, 3, 1, "_CPPv49terminatev", "terminate"], [841, 3, 1, "_CPPv4NK6traitsEv", "traits"], [841, 9, 1, "_CPPv4N11traits_type11fp_settingsE", "traits_type::fp_settings"], [746, 3, 1, "_CPPv47try_getR11output_type", "try_get"], [747, 3, 1, "_CPPv47try_getR1T", "try_get"], [759, 3, 1, "_CPPv47try_getR6Output", "try_get"], [746, 4, 1, "_CPPv47try_getR11output_type", "try_get::v"], [747, 4, 1, "_CPPv47try_getR1T", "try_get::v"], [759, 4, 1, "_CPPv47try_getR6Output", "try_get::v"], [793, 3, 1, "_CPPv48try_lockv", "try_lock"], [746, 3, 1, "_CPPv47try_putRK10input_type", "try_put"], [747, 3, 1, "_CPPv47try_putRK1T", "try_put"], [746, 4, 1, "_CPPv47try_putRK10input_type", "try_put::v"], [747, 4, 1, "_CPPv47try_putRK1T", "try_put::v"], [793, 3, 1, "_CPPv46unlockv", "unlock"], [787, 3, 1, "_CPPv4NK17upstream_resourceEv", "upstream_resource"], [756, 3, 1, "_CPPv412wait_for_allv", "wait_for_all"], [839, 3, 1, "_CPPv4D0v", "~global_control"], [756, 3, 1, "_CPPv4D0v", "~graph"], [793, 3, 1, "_CPPv4D0v", "~null_mutex"], [843, 3, 1, "_CPPv4D0v", "~task_arena"], [841, 3, 1, "_CPPv4D0v", "~task_group_context"], [842, 3, 1, "_CPPv4D0v", "~task_scheduler_handle"], [844, 3, 1, "_CPPv4D0v", "~task_scheduler_observer"]], "scalable_allocation_command": [[785, 2, 1, "c.scalable_allocation_command", "cmd"], [785, 2, 1, "c.scalable_allocation_command", "reserved"]]}, "objtypes": {"0": "c:macro", "1": "c:function", "2": "c:functionParam", "3": "cpp:function", "4": "cpp:functionParam", "5": "cpp:type", "6": "cpp:member", "7": "cpp:class", "8": "cpp:templateParam", "9": "cpp:enum", "10": "cpp:enumerator"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["c", "function", "C function"], "2": ["c", "functionParam", "C function parameter"], "3": ["cpp", "function", "C++ function"], "4": ["cpp", "functionParam", "C++ function parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "member", "C++ member"], "7": ["cpp", "class", "C++ class"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["cpp", "enum", "C++ enum"], "10": ["cpp", "enumerator", "C++ enumerator"]}, "titleterms": {"softwar": 1, "architectur": [1, 180], "oneapi": [1, 7, 39, 44, 445, 453, 577, 862], "platform": 1, "api": [1, 3, 59, 61, 150, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 248, 250], "program": [1, 8, 20, 21, 23, 26, 30, 35, 36, 38, 39, 42, 43, 51, 150], "exampl": [1, 20, 21, 23, 26, 35, 36, 38, 39, 41, 50, 57, 153, 154, 158, 362, 410, 451, 553, 557, 559, 560, 564, 565, 744, 750, 752, 754, 755, 765, 767, 769, 771, 772, 777, 780, 840, 842, 843, 844], "direct": 1, "level": [3, 186, 187, 188], "zero": [3, 153], "detail": [3, 37, 40, 41, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "descript": [3, 425, 674, 689, 703, 717, 731], "definit": [4, 30, 40, 52, 64, 160, 259, 863], "oneccl": [5, 13, 18], "introduct": [6, 46, 152, 783, 863], "namespac": [7, 32, 152, 175, 180, 577, 782], "ccl": 7, "model": [8, 20, 23, 26, 51, 57, 58, 62, 63, 150, 180, 362, 410, 451, 828, 829], "collect": 9, "oper": [9, 13, 14, 15, 16, 20, 21, 23, 26, 39, 40, 52, 53, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 258, 583, 592, 604, 606, 619, 633, 646, 654, 662, 676, 678, 691, 705, 719, 733, 742, 853], "allgatherv": 9, "allreduc": 9, "alltoallv": 9, "barrier": 9, "broadcast": [9, 115, 116], "reduc": 9, "reducescatt": 9, "point": [9, 49, 153], "To": 9, "send": 9, "recv": 9, "datatyp": [10, 180], "custom": 10, "error": [11, 31, 150, 152, 153, 180], "handl": [11, 31, 150, 152, 153, 180, 580], "except": [11, 31, 180, 545, 731], "classif": [11, 26, 31, 180], "common": [11, 30, 33, 44, 64, 160, 180], "gener": [12, 52, 150, 152, 178, 261, 345, 350, 351, 362, 363, 367, 368, 381, 411, 413, 425, 833], "workflow": [12, 55, 57], "concept": [13, 41], "devic": [13, 180, 343, 345, 351, 362, 363, 364], "context": 13, "kei": [13, 41, 591], "valu": [13, 292, 534, 591, 597, 614, 628, 642, 671, 686, 700, 714, 728], "store": [13, 580], "commun": [13, 16], "stream": [13, 62, 150], "event": [13, 15], "attribut": [13, 14, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "progress": 15, "track": 15, "reduct": [17, 168], "current": [18, 34, 180], "version": [18, 34, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 381, 415, 417, 418, 422, 423, 426, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 578], "thi": [18, 34, 180], "specif": [18, 34, 54, 180, 862, 863], "cluster": 19, "k": [20, 21, 26, 28], "mean": [20, 21, 163, 433, 435, 438, 441, 450, 453], "mathemat": [20, 21, 23, 26, 47, 546], "formul": [20, 21, 23, 26], "train": [20, 23, 26, 53, 155, 158, 159, 162, 163, 166, 167, 170, 172, 173], "method": [20, 21, 23, 26, 49, 344, 366], "lloyd": 20, "": 20, "infer": [20, 23, 26, 53, 155, 158, 159, 162, 163, 166, 167, 170, 172, 173], "usag": [20, 21, 23, 26, 35, 36, 38, 39, 180, 257, 259, 362, 410, 451], "interfac": [20, 21, 23, 26, 30, 33, 35, 36, 38, 39, 42, 43, 403, 675, 690, 704, 718, 744, 785, 831, 832, 835], "descriptor": [20, 21, 23, 26, 49, 61, 160, 256, 258], "tag": [20, 21, 23, 26, 59, 549, 838], "task": [20, 21, 23, 26, 49, 802, 837, 840], "input": [20, 21, 23, 26, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 416], "result": [20, 21, 23, 26, 40, 52], "initi": 21, "comput": [21, 48, 49, 53], "dens": [21, 261], "decomposit": 22, "princip": 23, "compon": 23, "analysi": 23, "pca": 23, "covari": 23, "svd": 23, "sign": 23, "flip": 23, "techniqu": 23, "algorithm": [24, 158, 177, 178, 549, 802], "nearest": [25, 26, 170], "neighbor": [25, 26, 170], "knn": 25, "nn": 26, "brute": 26, "forc": 26, "d": [26, 28], "tree": [26, 28], "appendix": [27, 179], "relat": [28, 153, 260], "term": [28, 44, 807], "bibliographi": [29, 342, 469], "type": [30, 37, 40, 43, 49, 56, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 260, 376, 425, 550, 551, 743, 744, 745, 758, 761, 766, 782, 837, 838, 839, 841, 843, 851], "scalar": [30, 362, 454], "enum": [30, 64], "class": [30, 160, 177, 258, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 359, 360, 361, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 553, 557, 560, 565, 579, 580, 581, 582, 590, 591, 603, 617, 618, 631, 632, 645, 653, 661, 674, 689, 703, 717, 731, 744, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 860, 861], "data": [30, 38, 39, 40, 41, 43, 56, 58, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 255, 256, 259], "rang": [30, 259, 549, 600, 613, 627, 641, 670, 685, 699, 713, 727, 740, 816], "header": 32, "file": 32, "oned": [34, 44, 45], "column": 35, "accessor": [35, 36, 37, 41, 591], "row": 36, "requir": [37, 38, 43, 731, 802, 828, 829], "arrai": 38, "ownership": 38, "implement": [38, 151], "note": [38, 150, 151, 152], "csv": 39, "sourc": [39, 40, 41, 151, 155, 163, 164, 166, 167, 173, 174], "read": [39, 40], "dal": 39, "object": [39, 41, 61, 64, 178, 617, 631], "arg": [39, 40, 460], "shortcut": [40, 52], "manag": [41, 153], "dataset": [41, 436], "tabl": [41, 42, 43, 259], "metadata": [41, 43], "interact": 41, "between": [41, 155, 158, 159, 162, 163, 166, 167, 170, 172, 173], "homogen": 42, "layout": [43, 172, 255], "featur": [43, 180, 575, 576], "glossari": 44, "machin": 44, "learn": 44, "notat": [47, 54, 534, 836], "mode": [48, 153], "batch": [48, 155], "onlin": 48, "distribut": [48, 343, 344, 365, 366], "float": [49, 153], "end": [50, 91, 595, 607, 621, 635, 664, 675, 680, 690, 694, 704, 708, 718, 722, 736], "support": [52, 53, 55, 57, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 425], "convent": [54, 836], "variabl": [54, 578], "tensor": [54, 64, 150, 155], "name": [54, 802], "rnn": [54, 171], "bfloat16": 55, "int8": 57, "quantiz": [57, 118, 153], "numer": 57, "behavior": 57, "convolut": [57, 82, 153, 158], "per": [57, 153], "channel": [57, 153], "scale": [57, 153, 163], "memori": [59, 60, 61, 180, 784], "format": [59, 414], "plain": 59, "optim": 59, "ani": 59, "propag": 59, "execut": [62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 180], "engin": [62, 150, 345, 367], "low": 63, "precis": [63, 260], "logic": [64, 150], "kind": 64, "graph": [64, 65, 150, 152, 744, 752, 756, 765, 802], "member": [64, 180, 550, 551, 552, 554, 555, 561, 563, 567, 572, 580, 581, 582, 586, 587, 588, 589, 590, 591, 598, 599, 600, 603, 609, 610, 611, 613, 617, 618, 623, 624, 625, 627, 631, 632, 637, 638, 639, 641, 645, 648, 649, 653, 657, 658, 659, 660, 661, 666, 667, 668, 670, 674, 682, 683, 685, 689, 696, 697, 699, 703, 710, 711, 713, 717, 724, 725, 727, 731, 737, 738, 739, 740, 743, 745, 746, 747, 748, 750, 754, 756, 758, 759, 761, 763, 766, 769, 771, 772, 777, 778, 779, 780, 786, 787, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 839, 841, 842, 843, 844, 846, 847, 848, 850, 851, 858, 861], "function": [64, 171, 177, 178, 180, 259, 546, 547, 549, 550, 551, 552, 554, 555, 561, 563, 567, 572, 578, 580, 581, 582, 588, 589, 590, 591, 600, 603, 613, 617, 618, 627, 631, 632, 641, 645, 653, 659, 660, 661, 670, 674, 685, 689, 699, 703, 713, 717, 727, 731, 740, 743, 744, 745, 746, 747, 748, 750, 754, 755, 756, 758, 759, 761, 763, 766, 769, 771, 772, 777, 778, 779, 780, 782, 784, 786, 787, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 839, 841, 842, 843, 844, 846, 848, 850, 851, 858, 861], "macro": [64, 575, 576], "specifi": 64, "unknown": 64, "shape": 64, "extens": [65, 152, 178, 189, 292], "ab": [66, 455], "argument": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 454], "output": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153], "absbackward": 67, "add": [68, 459], "avgpool": 69, "avgpoolbackward": 70, "batchnormforwardtrain": 71, "batchnorminfer": 72, "batchnormtrainingbackward": 73, "biasadd": 74, "biasaddbackward": 75, "clamp": 76, "clampbackward": 77, "concat": [78, 157], "convtranspos": 79, "convtransposebackwarddata": 80, "convtransposebackwardweight": 81, "regular": [82, 158], "group": [82, 153, 158, 837], "dilat": [82, 158], "convolutionbackwarddata": 83, "convolutionbackwardweight": 84, "dequant": 85, "divid": 86, "dynamicdequant": 87, "dynamicquant": 88, "elu": 89, "elubackward": 90, "exp": [92, 488], "gelu": 93, "gelubackward": 94, "hardsigmoid": 95, "hardsigmoidbackward": 96, "hardswish": 97, "hardswishbackward": 98, "interpol": 99, "interpolatebackward": 100, "layernorm": 101, "layernormbackward": 102, "leakyrelu": 103, "log": 104, "logsoftmax": 105, "logsoftmaxbackward": 106, "matmul": 107, "maxpool": 108, "maxpoolbackward": 109, "maximum": 110, "minimum": 111, "mish": 112, "mishbackward": 113, "multipli": 114, "prelu": [115, 167], "rule": [115, 116], "prelubackward": 116, "pow": [117, 519], "relu": [119, 154], "relubackward": 120, "reciproc": 121, "reducel1": 122, "reducel2": 123, "reducemax": 124, "reducemean": 125, "reducemin": 126, "reduceprod": 127, "reducesum": 128, "reorder": [129, 169], "round": [130, 526], "select": 131, "sigmoid": 132, "sigmoidbackward": 133, "softplu": 134, "softplusbackward": 135, "softmax": [136, 173], "softmaxbackward": 137, "sqrt": [138, 536], "sqrtbackward": 139, "squar": 140, "squareddiffer": 141, "staticreshap": 142, "statictranspos": 143, "subtract": 144, "tanh": [145, 540], "tanhbackward": 146, "typecast": 147, "wildcard": 148, "set": 149, "partit": [150, 403], "compil": 150, "onednn": 151, "open": 151, "test": 151, "scratchpad": 153, "librari": [153, 178, 784], "user": 153, "1": [153, 158, 186], "weight": 153, "2": [153, 158, 187], "implicit": 153, "downconvers": 153, "math": [153, 261, 544], "post": [154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180], "op": [154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "eltwis": 154, "sum": [154, 174], "binari": [154, 156, 586, 598, 609, 623, 637, 648, 657, 666, 682, 696, 710, 724, 737], "chain": 154, "normal": [155, 160, 163, 164], "forward": [155, 156, 157, 158, 159, 162, 163, 164, 166, 167, 170, 172, 173, 753], "differ": [155, 158, 159, 162, 163, 166, 167, 170, 172, 173], "backward": [155, 156, 157, 158, 159, 162, 163, 164, 166, 167, 170, 172, 173, 259], "represent": [155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174], "destin": [155, 163, 164, 166, 167, 173, 174], "Their": [155, 163, 164, 166, 167, 173], "gradient": [155, 163, 164, 166, 167, 173], "statist": [155, 261, 444, 447, 451], "deconvolut": 158, "transpos": 158, "elementwis": 159, "base": [160, 410, 416, 451], "primit": [160, 161], "enumer": [160, 260, 561, 756, 775], "flag": 160, "indic": [160, 259], "inner": 162, "product": 162, "layer": 163, "varianc": 163, "shift": 163, "local": [164, 849], "respons": 164, "matrix": [165, 341, 416], "multipl": 165, "pool": 166, "resampl": 170, "bilinear": 170, "cell": 171, "vanilla": 171, "lstm": 171, "peephol": 171, "project": 171, "gru": 171, "linear": [171, 261, 292], "befor": 171, "reset": 171, "augru": 171, "shuffl": 172, "onedpl": 176, "parallel": [177, 549, 600, 613, 627, 641, 670, 685, 699, 713, 727, 740], "c": [177, 178, 180, 785], "standard": [177, 178, 180], "align": 177, "polici": [177, 594, 679, 693, 707, 721, 755, 762], "dpc": [177, 180], "device_polici": 177, "make_device_polici": 177, "buffer": [177, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 381, 410, 415, 417, 418, 422, 423, 426, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 452, 453, 744, 753], "wrapper": 177, "iter": [177, 585, 595, 600, 607, 613, 621, 627, 635, 641, 656, 664, 670, 680, 685, 694, 699, 708, 713, 722, 727, 736, 740, 854], "sycl": 178, "kernel": 178, "random": [178, 261, 345, 362, 363, 367, 411, 413], "number": [178, 261, 345, 362, 363, 367, 403, 411, 413, 589, 660, 675, 690, 704, 718], "limit": [178, 770], "onemkl": [179, 180, 261, 362, 410, 451, 548], "futur": 179, "consider": 179, "acknowledg": 179, "us": 180, "queue": [180, 579, 588, 755], "non": [180, 561, 582, 586, 587, 590, 598, 599, 603, 609, 610, 611, 618, 623, 624, 625, 632, 637, 638, 639, 645, 648, 649, 653, 657, 658, 661, 666, 667, 668, 674, 682, 683, 689, 696, 697, 703, 710, 711, 717, 724, 725, 731, 737, 738, 739, 761, 779, 786, 788, 790, 842, 846, 848, 851, 858, 861], "asynchron": 180, "synchron": 180, "when": 180, "usm": [180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 262, 264, 265, 268, 270, 272, 273, 276, 277, 280, 281, 284, 286, 288, 290, 293, 295, 296, 299, 301, 303, 305, 307, 308, 311, 313, 314, 317, 319, 321, 323, 325, 327, 329, 330, 333, 335, 337, 339, 381, 410, 415, 417, 418, 422, 423, 426, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453], "host": [180, 365, 367, 368, 410, 411, 412], "thread": [180, 849, 859], "safeti": [180, 731, 859], "The": [180, 258, 589, 660, 675, 690, 704, 718], "unifi": 180, "share": 180, "design": 180, "defin": 180, "lapack": [180, 292], "other": [180, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731], "pre": 180, "condit": 180, "check": 180, "asum": 181, "axpbi": 182, "axpi": 183, "axpy_batch": 184, "bla": [185, 186, 187, 188, 189, 424, 454], "routin": [185, 186, 187, 188, 292, 351, 363, 364, 368, 411, 412, 447, 448], "3": 188, "like": [189, 292], "copi": [190, 583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733, 853], "copy_batch": 191, "dgmm_batch": 192, "dot": 193, "dotc": 194, "dotu": 195, "gbmv": 196, "gemm": [197, 415], "gemm_batch": 198, "gemm_bia": 199, "gemmt": 200, "gemv": [201, 417], "gemv_batch": 202, "ger": 203, "gerc": 204, "geru": 205, "hbmv": 206, "hemm": 207, "hemv": 208, "her": 209, "her2": 210, "her2k": 211, "herk": 212, "hpmv": 213, "hpr": 214, "hpr2": 215, "iamax": 216, "iamin": 217, "imatcopi": 218, "imatcopy_batch": 219, "nrm2": 220, "omatadd": 221, "omatadd_batch": 222, "omatcopi": 223, "omatcopy2": 224, "omatcopy_batch": 225, "rot": 226, "rotg": 227, "rotm": 228, "rotmg": 229, "sbmv": 230, "scal": 231, "sdsdot": 232, "spmv": 233, "spr": 234, "spr2": 235, "swap": [236, 580, 587, 589, 599, 602, 611, 616, 625, 630, 639, 644, 649, 652, 658, 660, 668, 673, 683, 688, 697, 702, 711, 716, 725, 730, 739, 742], "symm": 237, "symv": [238, 426], "syr": 239, "syr2": 240, "syr2k": 241, "syrk": 242, "syrk_batch": 243, "tbmv": 244, "tbsv": 245, "tpmv": 246, "tpsv": 247, "trmm": 248, "In": [248, 250], "place": [248, 250], "out": [248, 250], "trmv": [249, 428], "trsm": 250, "trsm_batch": 251, "trsv": [252, 430], "compute_backward": 253, "compute_forward": 254, "configur": [255, 574], "storag": [256, 341, 414, 849], "complex": 256, "real": [256, 259], "workspac": 257, "placement": 257, "workspace_plac": 257, "typic": 257, "workspace_extern": 257, "constructor": [258, 580, 583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733, 853], "assign": [258, 580, 583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733, 853], "set_valu": 258, "get_valu": 258, "set_workspac": 258, "commit": 258, "discret": [259, 261, 361, 406], "fourier": [259, 261], "transform": [259, 261], "finit": 259, "elementari": 259, "addit": 259, "constraint": 259, "domain": [259, 260, 261], "dft": [259, 260], "recommend": 259, "summari": [259, 261, 444, 447, 451, 753], "scope": 260, "config_param": 260, "config_valu": 260, "algebra": 261, "spars": [261, 414, 416, 424], "vector": [261, 362, 544], "gebrd": 262, "gebrd_scratchpad_s": 263, "geqrf": 264, "geqrf_batch": 265, "geqrf_batch_scratchpad_s": 266, "geqrf_scratchpad_s": 267, "gerqf": 268, "gerqf_scratchpad_s": 269, "gesvd": 270, "gesvd_scratchpad_s": 271, "getrf": 272, "getrf_batch": 273, "getrf_batch_scratchpad_s": 274, "getrf_scratchpad_s": 275, "getri": 276, "getri_batch": 277, "getri_batch_scratchpad_s": 278, "getri_scratchpad_s": 279, "getr": 280, "getrs_batch": 281, "getrs_batch_scratchpad_s": 282, "getrs_scratchpad_s": 283, "heevd": 284, "heevd_scratchpad_s": 285, "hegvd": 286, "hegvd_scratchpad_s": 287, "hetrd": 288, "hetrd_scratchpad_s": 289, "hetrf": 290, "hetrf_scratchpad_s": 291, "equat": 292, "singular": 292, "eigenvalu": 292, "problem": 292, "orgbr": 293, "orgbr_scratchpad_s": 294, "orgqr": 295, "orgqr_batch": 296, "orgqr_batch_scratchpad_s": 297, "orgqr_scratchpad_s": 298, "orgtr": 299, "orgtr_scratchpad_s": 300, "ormqr": 301, "ormqr_scratchpad_s": 302, "ormrq": 303, "ormrq_scratchpad_s": 304, "ormtr": 305, "ormtr_scratchpad_s": 306, "potrf": 307, "potrf_batch": 308, "potrf_batch_scratchpad_s": 309, "potrf_scratchpad_s": 310, "potri": 311, "potri_scratchpad_s": 312, "potr": 313, "potrs_batch": 314, "potrs_batch_scratchpad_s": 315, "potrs_scratchpad_s": 316, "syevd": 317, "syevd_scratchpad_s": 318, "sygvd": 319, "sygvd_scratchpad_s": 320, "sytrd": 321, "sytrd_scratchpad_s": 322, "sytrf": 323, "sytrf_scratchpad_s": 324, "trtr": 325, "trtrs_scratchpad_s": 326, "ungbr": 327, "ungbr_scratchpad_s": 328, "ungqr": 329, "ungqr_batch": 330, "ungqr_batch_scratchpad_s": 331, "ungqr_scratchpad_s": 332, "ungtr": 333, "ungtr_scratchpad_s": 334, "unmqr": 335, "unmqr_scratchpad_s": 336, "unmrq": 337, "unmrq_scratchpad_s": 338, "unmtr": 339, "unmtr_scratchpad_s": 340, "templat": [344, 366, 560, 581, 582, 590, 603, 618, 632, 645, 653, 661, 674, 689, 703, 717, 731], "paramet": [344, 366], "basic": [345, 367], "bernoulli": [346, 370], "bit": [347, 373], "exponenti": [348, 377], "gaussian": [349, 379], "lognorm": [352, 387], "mcg31m1": [353, 388], "mcg59": [354, 389], "mrg32k3a": [355, 390], "philox4x32x10": [356, 397], "poisson": [357, 398], "skip_ahead": [358, 403], "uniform_bit": [359, 407], "uniform": [360, 361, 405, 406], "continu": [360, 405], "rng": [362, 410, 413], "servic": [364, 412, 448, 547, 744], "ars5": 369, "beta": 371, "binomi": 372, "cauchi": 374, "chi_squar": 375, "default_engin": 376, "alia": 376, "gamma": 378, "gaussian_mv": 380, "geometr": 382, "gumbel": 383, "hypergeometr": 384, "laplac": 385, "leapfrog": 386, "mt19937": 391, "mt2203": 392, "multinomi": 393, "negative_binomi": 394, "niederreit": 395, "nondeterminist": 396, "poisson_v": 399, "r250": 400, "rayleigh": 401, "sfmt19937": 402, "skip": 403, "element": [403, 580, 583, 588, 589, 592, 597, 604, 606, 614, 616, 619, 628, 630, 633, 642, 644, 646, 650, 654, 659, 660, 662, 671, 673, 676, 678, 686, 688, 691, 700, 702, 705, 714, 716, 719, 728, 730, 733, 735], "sobol": 404, "weibul": 408, "wichmann_hil": 409, "optimize_gemm": 416, "both": 416, "matric": 416, "gemvdot": 418, "optimize_gemv": 419, "init_matrix_handl": 420, "release_matrix_handl": 421, "set_coo_data": 422, "set_csr_data": 423, "optimize_symv": 427, "optimize_trmv": 429, "optimize_trsv": 431, "central_mo": [432, 433], "provid": [433, 435, 438, 450, 453, 828, 829], "central_sum": [434, 435], "structur": 436, "kurtosi": [437, 438], "make_dataset": 439, "max": 440, "min": 442, "min_max": 443, "raw_moment": 445, "mkl": [445, 453], "stat": [445, 453], "raw_sum": 446, "skew": [449, 450], "variat": [452, 453], "aco": 456, "acosh": 457, "acospi": 458, "asin": 461, "asinh": 462, "asinpi": 463, "atan": 464, "atan2": 465, "atan2pi": 466, "atanh": 467, "atanpi": 468, "cbrt": 470, "cdfnorm": 471, "cdfnorminv": 472, "ceil": 473, "ci": 474, "clear_statu": 475, "conj": 476, "copysign": 477, "co": 478, "cosd": 479, "cosh": 480, "cospi": 481, "create_error_handl": 482, "div": 483, "erf": 484, "erfc": 485, "erfcinv": 486, "erfinv": 487, "exp10": 489, "exp2": 490, "expint1": 491, "expm1": 492, "fdim": 493, "floor": 494, "fmax": 495, "fmin": 496, "fmod": 497, "frac": 498, "get_mod": 499, "get_statu": 500, "hypot": 501, "inv": 502, "invcbrt": 503, "invsqrt": 504, "lgamma": 505, "linearfrac": 506, "ln": 507, "log10": 508, "log1p": 509, "log2": 510, "logb": 511, "maxmag": 512, "minmag": 513, "modf": 514, "mul": 515, "mulbyconj": 516, "nearbyint": 517, "nextaft": 518, "pow2o3": 520, "pow3o2": 521, "powr": 522, "powx": 523, "remaind": 524, "rint": 525, "set_statu": 527, "set_mod": 528, "sin": 529, "sinco": 530, "sind": 531, "sinh": 532, "sinpi": 533, "special": [534, 744], "sqr": 535, "sub": 537, "tan": 538, "tand": 539, "tanpi": 541, "tgamma": 542, "trunc": 543, "vm": [546, 547], "block": 549, "partition": 549, "split": [549, 572, 573], "blocked_range2d": 550, "blocked_range3d": 551, "blocked_rang": 552, "collaborative_call_onc": 553, "collaborative_once_flag": [553, 554], "feeder": [555, 557], "parallel_deterministic_reduc": 556, "parallel_for_each": 557, "parallel_for": 558, "parallel_invok": 559, "parallel_pipelin": 560, "filter": [560, 561], "flow_control": [560, 563], "filter_mod": [561, 562], "deduct": [561, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 750, 754, 759, 761, 777], "guid": [561, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 750, 754, 759, 761, 777], "parallel_reduc": 564, "imper": [564, 565], "form": [564, 565], "lambda": [564, 565], "express": [564, 565], "parallel_scan": 565, "pre_scan": 565, "final_scan": 565, "parallel_sort": 566, "pre_scan_tag": 567, "final_scan_tag": 567, "affinity_partition": 568, "auto_partition": 569, "simple_partition": 570, "static_partition": 571, "proport": 572, "enabl": 575, "debug": 575, "tbb_use_assert": 575, "tbb_use_profiling_tool": 575, "tbb_use_except": 576, "tbb_use_glibcxx_vers": 576, "tbb": 577, "flow": [577, 744, 752, 765, 802], "inform": [578, 833], "tbb_runtime_interface_vers": 578, "tbb_runtime_vers": 578, "tbb_version": 578, "environ": 578, "contain": [579, 583, 592, 604, 608, 619, 622, 628, 633, 636, 642, 646, 654, 662, 665, 671, 676, 681, 691, 695, 700, 705, 709, 714, 719, 723, 728, 733, 802, 853], "sequenc": [579, 583, 592, 597, 604, 614, 616, 619, 628, 630, 633, 642, 644, 646, 654, 662, 671, 673, 676, 686, 688, 691, 700, 702, 705, 714, 716, 719, 728, 730, 733, 827], "unord": 579, "associ": 579, "order": 579, "auxiliari": [579, 831], "node": [580, 614, 616, 628, 630, 642, 644, 671, 673, 686, 688, 700, 702, 714, 716, 728, 730, 744, 755, 767], "synopsi": [580, 581, 582, 590, 603, 617, 618, 631, 632, 645, 653, 661, 674, 689, 703, 717, 731], "destructor": [580, 583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733, 853], "state": 580, "access": [580, 591, 606, 678, 735], "get_alloc": [580, 588, 592, 612, 626, 640, 659, 669, 684, 698, 712, 726, 733], "tbb_hash_compar": 581, "concurrent_bounded_queu": 582, "construct": [583, 591, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733, 853], "destruct": [583, 591, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733, 853], "empti": [583, 591, 592, 601, 604, 615, 619, 629, 633, 643, 646, 651, 654, 662, 672, 676, 687, 691, 701, 705, 715, 719, 729, 733, 741, 853], "from": [583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733], "move": [583, 592, 604, 619, 633, 646, 654, 662, 676, 691, 705, 719, 733, 853], "unsafe_begin": [585, 656], "unsafe_cbegin": [585, 656], "unsafe_end": [585, 656], "unsafe_cend": [585, 656], "comparison": [586, 598, 609, 610, 623, 624, 637, 638, 648, 657, 666, 667, 682, 696, 710, 724, 737, 738], "concurr": [588, 589, 597, 602, 614, 616, 628, 630, 642, 644, 650, 652, 659, 660, 671, 673, 686, 688, 700, 702, 714, 716, 728, 730, 732, 742, 770, 855, 857], "safe": [588, 597, 614, 628, 642, 650, 659, 671, 686, 700, 714, 728, 855], "push": [588, 650, 659], "pop": [588, 650, 659], "abort": 588, "capac": [588, 601, 615, 629, 643, 651, 672, 687, 701, 715, 729, 741, 856], "unsaf": [589, 602, 616, 630, 644, 652, 660, 673, 688, 702, 716, 730, 742, 857], "clear": [589, 602, 616, 630, 644, 652, 660, 673, 688, 702, 716, 730, 742, 857], "concurrent_hash_map": 590, "const_accessor": 591, "pair": 591, "releas": 591, "hash": [594, 679, 693, 707, 721], "rehash": [594, 679, 693, 707, 721], "bucket_count": 594, "begin": [595, 607, 621, 635, 664, 675, 680, 690, 694, 704, 708, 718, 722, 736], "cbegin": [595, 607, 621, 635, 664, 680, 694, 708, 722, 736], "cend": [595, 607, 621, 635, 664, 680, 694, 708, 722, 736], "equal_rang": [595, 608, 622, 636, 665, 681, 695, 709, 723], "lookup": [596, 608, 622, 636, 665, 681, 695, 709, 723], "find": [596, 608, 622, 636, 665, 681, 695, 709, 723], "count": [596, 608, 622, 636, 665, 681, 695, 709, 723], "modifi": [597, 602, 614, 616, 628, 630, 642, 644, 650, 652, 671, 673, 686, 688, 700, 702, 714, 716, 728, 730, 855, 857], "insert": [597, 614, 628, 642, 671, 686, 700, 714, 728], "emplac": [597, 614, 628, 642, 671, 686, 700, 714, 728], "eras": [597, 616, 630, 644, 673, 688, 702, 716, 730], "size": [601, 615, 629, 643, 651, 672, 675, 687, 690, 701, 704, 715, 718, 729, 741, 856], "max_siz": [601, 615, 629, 643, 672, 687, 701, 715, 729, 741], "concurrent_map": 603, "lower_bound": [608, 622, 636, 665], "upper_bound": [608, 622, 636, 665], "lexicograph": [610, 624, 638, 667, 738], "observ": [612, 626, 640, 669, 684, 698, 712, 726], "key_comp": [612, 626, 640, 669], "value_comp": [612, 626, 640, 669], "extract": [616, 630, 644, 673, 688, 702, 716, 730], "value_compar": [617, 631], "concurrent_multimap": 618, "merg": [628, 642, 671, 700, 714, 728], "concurrent_multiset": 632, "concurrent_priority_queu": 645, "concurrent_queu": 653, "concurrent_set": 661, "concurrent_unordered_map": 674, "bucket": [675, 690, 704, 718], "load": [679, 693, 707, 721], "factor": [679, 693, 707, 721], "manual": [679, 693, 707, 721], "hash_funct": [684, 698, 712, 726], "key_eq": [684, 698, 712, 726], "concurrent_unordered_multimap": 689, "concurrent_unordered_multiset": 703, "concurrent_unordered_set": 717, "concurrent_vector": 731, "growth": 732, "grow_bi": 732, "grow_to_at_least": 732, "push_back": 732, "emplace_back": 732, "index": 735, "first": 735, "last": 735, "rbegin": 736, "crbegin": 736, "rend": 736, "crend": 736, "reserv": [742, 781], "resiz": 742, "shrink_to_fit": 742, "task_arena": [743, 843], "attach": [743, 838], "constant": [743, 839, 841, 843, 847, 851], "abstract": 744, "properti": [744, 753], "port": 744, "edg": 744, "messag": [744, 765], "async_nod": 745, "broadcast_nod": 746, "buffer_nod": 747, "composite_nod": 748, "continue_msg": 749, "continue_nod": 750, "copy_bodi": 751, "depend": 752, "function_nod": 754, "reject": 755, "lightweight": 755, "reset_flag": [756, 775], "graph_nod": 757, "indexer_nod": 758, "input_nod": 759, "input_port": 760, "join_nod": [761, 762], "limiter_nod": 763, "make_edg": 764, "multifunction_nod": 766, "prioriti": 767, "output_port": 768, "overwrite_nod": 769, "predefin": 770, "priority_queue_nod": 771, "queue_nod": 772, "receiv": 773, "remove_edg": 774, "sender": 776, "sequencer_nod": 777, "split_nod": 778, "tagged_msg": 779, "write_once_nod": 780, "identifi": 781, "case": 781, "prefix": 781, "info": 782, "alloc": [784, 785], "resourc": 784, "scalabl": 785, "cache_aligned_alloc": 786, "cache_aligned_resourc": 787, "scalable_alloc": 788, "scalable_memory_resourc": 789, "tbb_alloc": 790, "mutual": 791, "exclus": 791, "mutex": [791, 792, 802, 828, 829], "null_mutex": 793, "null_rw_mutex": 794, "queuing_mutex": 795, "queuing_rw_mutex": 796, "rw_mutex": 797, "speculative_spin_mutex": 798, "speculative_spin_rw_mutex": 799, "spin_mutex": 800, "spin_rw_mutex": 801, "schedul": [802, 837], "blockedrangevalu": 803, "containerbasedsequ": 804, "filterbodi": 805, "parallelforbodi": 806, "parallelforeachbodi": 807, "parallelforfunc": 808, "parallelforindex": 809, "parallelreducebodi": 810, "parallelreducefunc": 811, "parallelreducereduct": 812, "parallelscanbodi": 813, "parallelscancombin": 814, "parallelscanfunc": 815, "splittabl": 817, "containerrang": 818, "hashcompar": 819, "asyncnodebodi": 820, "continuenodebodi": 821, "functionnodebodi": 822, "gatewaytyp": 823, "inputnodebodi": 824, "joinnodefunctionobject": 825, "multifunctionnodebodi": 826, "guarante": [828, 829], "readerwritermutex": 829, "suspendfunc": 830, "onetbb": [831, 832, 834, 835], "deprec": 832, "control": 837, "arena": 837, "helper": 837, "global_control": 839, "resum": 840, "task_group_context": 841, "task_scheduler_handl": 842, "task_scheduler_observ": 844, "this_task_arena": 845, "task_group": 846, "task_group_statu": 847, "task_handl": 848, "combin": [850, 852], "enumerable_thread_specif": 851, "flattened2d": 858, "time": 860, "syntax": 860, "tick_count": 861, "interval_t": 861, "target": 863, "audienc": 863, "goal": 863, "contribut": 863, "guidelin": 863, "legal": 864, "notic": 864, "disclaim": 864}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Software Architecture": [[1, "software-architecture"]], "oneAPI Platform": [[1, "oneapi-platform"]], "API Programming Example": [[1, "api-programming-example"]], "Direct Programming Example": [[1, "direct-programming-example"]], "Level Zero": [[3, "level-zero"]], "Detailed API Descriptions": [[3, "detailed-api-descriptions"]], "Definitions": [[4, "definitions"], [259, "definitions"], [863, "definitions"]], "oneCCL": [[5, "oneccl"]], "Introduction": [[6, "introduction"], [46, "introduction"], [152, "introduction"], [783, "introduction"], [863, "introduction"]], "Namespaces": [[7, "namespaces"], [32, "namespaces"], [152, "namespaces"], [175, "namespaces"], [577, "namespaces"]], "oneapi::ccl namespace": [[7, "oneapi-ccl-namespace"]], "ccl namespace": [[7, "ccl-namespace"]], "Programming Model": [[8, "programming-model"], [150, "programming-model"]], "Collective Operations": [[9, "collective-operations"]], "Allgatherv": [[9, "allgatherv"]], "Allreduce": [[9, "allreduce"]], "Alltoallv": [[9, "alltoallv"]], "Barrier": [[9, "barrier"]], "Broadcast": [[9, "broadcast"]], "Reduce": [[9, "reduce"]], "ReduceScatter": [[9, "reducescatter"]], "Point-To-Point Operations": [[9, "point-to-point-operations"]], "Send": [[9, "send"]], "Recv": [[9, "recv"]], "Datatypes": [[10, "datatypes"]], "Custom Datatypes": [[10, "custom-datatypes"]], "Error handling": [[11, "error-handling"], [31, "error-handling"]], "Exception classification": [[11, "exception-classification"], [31, "exception-classification"], [180, "exception-classification"]], "Common exceptions": [[11, "common-exceptions"], [180, "common-exceptions"]], "Generic Workflow": [[12, "generic-workflow"]], "oneCCL Concepts": [[13, "oneccl-concepts"]], "Device": [[13, "device"]], "Context": [[13, "context"]], "Key-Value Store": [[13, "key-value-store"]], "Communicator": [[13, "communicator"]], "Stream": [[13, "stream"], [62, "stream"], [150, "stream"]], "Event": [[13, "event"], [15, "event"]], "Operation Attributes": [[13, "operation-attributes"], [14, "operation-attributes"], [66, "operation-attributes"], [67, "operation-attributes"], [68, "operation-attributes"], [69, "operation-attributes"], [70, "operation-attributes"], [71, "operation-attributes"], [72, "operation-attributes"], [73, "operation-attributes"], [74, "operation-attributes"], [75, "operation-attributes"], [76, "operation-attributes"], [77, "operation-attributes"], [78, "operation-attributes"], [79, "operation-attributes"], [80, "operation-attributes"], [81, "operation-attributes"], [82, "operation-attributes"], [83, "operation-attributes"], [84, "operation-attributes"], [85, "operation-attributes"], [86, "operation-attributes"], [87, "operation-attributes"], [88, "operation-attributes"], [89, "operation-attributes"], [90, "operation-attributes"], [91, "operation-attributes"], [92, "operation-attributes"], [93, "operation-attributes"], [94, "operation-attributes"], [95, "operation-attributes"], [96, "operation-attributes"], [97, "operation-attributes"], [98, "operation-attributes"], [99, "operation-attributes"], [100, "operation-attributes"], [101, "operation-attributes"], [102, "operation-attributes"], [103, "operation-attributes"], [104, "operation-attributes"], [105, "operation-attributes"], [106, "operation-attributes"], [107, "operation-attributes"], [108, "operation-attributes"], [109, "operation-attributes"], [110, "operation-attributes"], [111, "operation-attributes"], [112, "operation-attributes"], [113, "operation-attributes"], [114, "operation-attributes"], [115, "operation-attributes"], [116, "operation-attributes"], [118, "operation-attributes"], [119, "operation-attributes"], [120, "operation-attributes"], [121, "operation-attributes"], [122, "operation-attributes"], [123, "operation-attributes"], [124, "operation-attributes"], [125, "operation-attributes"], [126, "operation-attributes"], [127, "operation-attributes"], [128, "operation-attributes"], [129, "operation-attributes"], [130, "operation-attributes"], [131, "operation-attributes"], [132, "operation-attributes"], [133, "operation-attributes"], [134, "operation-attributes"], [135, "operation-attributes"], [136, "operation-attributes"], [137, "operation-attributes"], [138, "operation-attributes"], [139, "operation-attributes"], [140, "operation-attributes"], [141, "operation-attributes"], [142, "operation-attributes"], [143, "operation-attributes"], [144, "operation-attributes"], [145, "operation-attributes"], [146, "operation-attributes"], [147, "operation-attributes"], [148, "operation-attributes"]], "Operation Progress Tracking": [[15, "operation-progress-tracking"]], "Communication Operations": [[16, "communication-operations"]], "Reductions": [[17, "reductions"]], "Current Version of this oneCCL Specification": [[18, "current-version-of-this-oneccl-specification"]], "Clustering": [[19, "clustering"]], "K-Means": [[20, "k-means"]], "Mathematical formulation": [[20, "mathematical-formulation"], [21, "mathematical-formulation"], [23, "mathematical-formulation"], [26, "mathematical-formulation"]], "Training": [[20, "training"], [20, "id2"], [23, "training"], [23, "id6"], [26, "training"], [26, "id1"]], "Training method: Lloyd\u2019s": [[20, "training-method-lloyd-s"]], "Inference": [[20, "inference"], [20, "id3"], [23, "inference"], [23, "id7"], [26, "inference"], [26, "id2"]], "Inference method: Lloyd\u2019s": [[20, "inference-method-lloyd-s"]], "Usage example": [[20, "usage-example"], [21, "usage-example"], [23, "usage-example"], [26, "usage-example"], [35, "usage-example"], [36, "usage-example"], [38, "usage-example"], [39, "usage-example"]], "Programming Interface": [[20, "programming-interface"], [21, "programming-interface"], [23, "programming-interface"], [26, "programming-interface"], [39, "programming-interface"]], "Descriptor": [[20, "descriptor"], [21, "descriptor"], [23, "descriptor"], [26, "descriptor"]], "Method tags": [[20, "method-tags"], [21, "method-tags"], [23, "method-tags"], [26, "method-tags"]], "Task tags": [[20, "task-tags"], [21, "task-tags"], [23, "task-tags"], [26, "task-tags"]], "Model": [[20, "model"], [23, "model"], [26, "model"]], "Training train(...)": [[20, "training-train"], [23, "training-train"], [26, "training-train"]], "Input": [[20, "input"], [20, "kmeans-i-api-input"], [21, "input"], [23, "input"], [23, "pca-i-api-input"], [26, "input"], [26, "knn-i-api-input"], [52, "input"]], "Result": [[20, "result"], [20, "kmeans-i-api-result"], [21, "result"], [23, "result"], [23, "pca-i-api-result"], [26, "result"], [26, "knn-i-api-result"], [40, "result"], [52, "result"]], "Operation": [[20, "operation"], [20, "id6"], [21, "operation"], [23, "operation"], [23, "id10"], [26, "operation"], [26, "id5"], [39, "operation"]], "Inference infer(...)": [[20, "inference-infer"], [23, "inference-infer"], [26, "inference-infer"]], "K-Means initialization": [[21, "k-means-initialization"]], "Computing": [[21, "computing"], [21, "id1"]], "Computing method: dense": [[21, "computing-method-dense"]], "Computing compute(...)": [[21, "computing-compute"]], "Decomposition": [[22, "decomposition"]], "Principal Components Analysis (PCA)": [[23, "principal-components-analysis-pca"]], "Training method: Covariance": [[23, "training-method-covariance"]], "Training method: SVD": [[23, "training-method-svd"]], "Sign-flip technique": [[23, "sign-flip-technique"]], "Inference methods: Covariance and SVD": [[23, "inference-methods-covariance-and-svd"]], "Algorithms": [[24, "algorithms"], [158, "algorithms"], [549, "algorithms"], [802, "algorithms"]], "Nearest Neighbors (kNN)": [[25, "nearest-neighbors-knn"]], "k-Nearest Neighbors Classification (k-NN)": [[26, "k-nearest-neighbors-classification-k-nn"]], "Training method: brute-force": [[26, "training-method-brute-force"]], "Training method: k-d tree": [[26, "training-method-k-d-tree"]], "Inference method: brute-force": [[26, "inference-method-brute-force"]], "Inference method: k-d tree": [[26, "inference-method-k-d-tree"]], "Appendix": [[27, "appendix"]], "k-d Tree": [[28, "k-d-tree"]], "Related terms": [[28, "related-terms"]], "Bibliography": [[29, "bibliography"], [342, "bibliography"], [469, "bibliography"]], "Common type definitions": [[30, "common-type-definitions"]], "Programming interface": [[30, "programming-interface"], [35, "programming-interface"], [36, "programming-interface"], [38, "programming-interface"], [42, "programming-interface"], [43, "programming-interface"]], "Scalar types": [[30, "scalar-types"]], "Enum classes": [[30, "enum-classes"]], "Data type": [[30, "data-type"]], "Range": [[30, "range"], [816, "range"]], "Header files": [[32, "header-files"]], "Common Interface": [[33, "common-interface"]], "Current Version of this oneDAL Specification": [[34, "current-version-of-this-dal-short-name-specification"]], "Column accessor": [[35, "column-accessor"]], "Row accessor": [[36, "row-accessor"]], "Accessors": [[37, "accessors"]], "Requirements": [[37, "requirements"], [731, "requirements"]], "Accessor Types": [[37, "accessor-types"]], "Details": [[37, "details"], [40, "details"], [41, "details"]], "Array": [[38, "array"]], "Data ownership requirements": [[38, "data-ownership-requirements"]], "Implementation notes": [[38, "implementation-notes"]], "CSV data source": [[39, "csv-data-source"]], "Reading oneapi::dal::read<Object>(...)": [[39, "reading-oneapi-dal-read-object"]], "Args": [[39, "args"], [40, "args"]], "Data Sources": [[40, "data-sources"]], "Read": [[40, "read"]], "Read operation definition": [[40, "read-operation-definition"]], "Read operation shortcuts": [[40, "read-operation-shortcuts"]], "Data Source Types": [[40, "data-source-types"]], "Data management": [[41, "data-management"]], "Key concepts": [[41, "key-concepts"]], "Dataset": [[41, "dataset"]], "Data source": [[41, "data-source"]], "Table": [[41, "table"], [43, "table"]], "Table metadata": [[41, "table-metadata"], [43, "table-metadata"]], "Accessor": [[41, "accessor"]], "Example of interaction between table and accessor objects": [[41, "example-of-interaction-between-table-and-accessor-objects"]], "Homogeneous table": [[42, "homogeneous-table"]], "Tables": [[43, "tables"]], "Requirements on table types": [[43, "requirements-on-table-types"]], "Table types": [[43, "table-types"]], "Data layout": [[43, "data-layout"]], "Feature type": [[43, "feature-type"]], "Glossary": [[44, "glossary"]], "Machine learning terms": [[44, "machine-learning-terms"]], "oneDAL terms": [[44, "dal-short-name-terms"]], "Common oneAPI terms": [[44, "common-oneapi-terms"]], "oneDAL": [[45, "dal-short-name"]], "Mathematical Notations": [[47, "mathematical-notations"]], "Computational modes": [[48, "computational-modes"]], "Batch": [[48, "batch"]], "Online": [[48, "online"]], "Distributed": [[48, "distributed"]], "Descriptors": [[49, "descriptors"], [61, "descriptors"]], "Floating-point Types": [[49, "floating-point-types"]], "Computational Methods": [[49, "computational-methods"]], "Computational Tasks": [[49, "computational-tasks"]], "End-to-end example": [[50, "end-to-end-example"]], "Programming model": [[51, "programming-model"]], "Operations": [[52, "operations"], [150, "operations"]], "General operation definition": [[52, "general-operation-definition"]], "Operation shortcuts": [[52, "operation-shortcuts"]], "Supported operation": [[52, "supported-operation"]], "Supported operations": [[53, "supported-operations"]], "Train": [[53, "train"]], "Infer": [[53, "infer"]], "Compute": [[53, "compute"]], "Conventions": [[54, "conventions"]], "Variable (Tensor) Names": [[54, "variable-tensor-names"]], "RNN-Specific Notation": [[54, "rnn-specific-notation"]], "Bfloat16": [[55, "bfloat16"]], "Workflow": [[55, "workflow"], [57, "workflow"]], "Support": [[55, "support"], [57, "support"]], "Data types": [[56, "data-types"]], "Int8": [[57, "int8"]], "Quantization Model": [[57, "quantization-model"]], "Numerical behavior": [[57, "numerical-behavior"]], "Example: Convolution Quantization Workflow": [[57, "example-convolution-quantization-workflow"]], "Per-Channel Scaling": [[57, "per-channel-scaling"]], "Data model": [[58, "data-model"]], "Memory Formats": [[59, "memory-formats"]], "Plain Memory Formats": [[59, "plain-memory-formats"]], "Format Tags": [[59, "format-tags"]], "Optimized Format \u2018any\u2019": [[59, "optimized-format-any"]], "Memory Format Propagation": [[59, "memory-format-propagation"]], "API": [[59, "api"], [61, "api"], [153, "api"], [154, "api"], [155, "api"], [156, "api"], [157, "api"], [158, "api"], [159, "api"], [162, "api"], [163, "api"], [164, "api"], [165, "api"], [166, "api"], [167, "api"], [168, "api"], [169, "api"], [170, "api"], [171, "api"], [172, "api"], [173, "api"], [174, "api"]], "Memory": [[60, "memory"]], "Memory Descriptors and Objects": [[61, "memory-descriptors-and-objects"]], "Objects": [[61, "objects"]], "Execution Model": [[62, "execution-model"], [180, "execution-model"]], "Engine": [[62, "engine"], [150, "engine"]], "Data Model": [[63, "data-model"]], "Low Precision Support": [[63, "low-precision-support"]], "Common Definitions": [[64, "common-definitions"], [160, "common-definitions"]], "Logical tensor enums and type": [[64, "logical-tensor-enums-and-type"]], "Operation attributes and kinds": [[64, "operation-attributes-and-kinds"]], "Graph objects member functions": [[64, "graph-objects-member-functions"]], "Macros to specify unknown shapes": [[64, "macros-to-specify-unknown-shapes"]], "Graph extension": [[65, "graph-extension"]], "Abs": [[66, "abs"]], "Execution Arguments": [[66, "execution-arguments"], [67, "execution-arguments"], [68, "execution-arguments"], [69, "execution-arguments"], [70, "execution-arguments"], [71, "execution-arguments"], [72, "execution-arguments"], [73, "execution-arguments"], [74, "execution-arguments"], [75, "execution-arguments"], [76, "execution-arguments"], [77, "execution-arguments"], [78, "execution-arguments"], [79, "execution-arguments"], [80, "execution-arguments"], [81, "execution-arguments"], [82, "execution-arguments"], [83, "execution-arguments"], [84, "execution-arguments"], [85, "execution-arguments"], [86, "execution-arguments"], [87, "execution-arguments"], [88, "execution-arguments"], [89, "execution-arguments"], [90, "execution-arguments"], [91, "execution-arguments"], [92, "execution-arguments"], [93, "execution-arguments"], [94, "execution-arguments"], [95, "execution-arguments"], [96, "execution-arguments"], [97, "execution-arguments"], [98, "execution-arguments"], [99, "execution-arguments"], [100, "execution-arguments"], [101, "execution-arguments"], [102, "execution-arguments"], [103, "execution-arguments"], [104, "execution-arguments"], [105, "execution-arguments"], [106, "execution-arguments"], [107, "execution-arguments"], [108, "execution-arguments"], [109, "execution-arguments"], [110, "execution-arguments"], [111, "execution-arguments"], [112, "execution-arguments"], [113, "execution-arguments"], [114, "execution-arguments"], [115, "execution-arguments"], [116, "execution-arguments"], [118, "execution-arguments"], [119, "execution-arguments"], [120, "execution-arguments"], [121, "execution-arguments"], [122, "execution-arguments"], [123, "execution-arguments"], [124, "execution-arguments"], [125, "execution-arguments"], [126, "execution-arguments"], [127, "execution-arguments"], [128, "execution-arguments"], [129, "execution-arguments"], [130, "execution-arguments"], [131, "execution-arguments"], [132, "execution-arguments"], [133, "execution-arguments"], [134, "execution-arguments"], [135, "execution-arguments"], [136, "execution-arguments"], [137, "execution-arguments"], [138, "execution-arguments"], [139, "execution-arguments"], [140, "execution-arguments"], [141, "execution-arguments"], [142, "execution-arguments"], [143, "execution-arguments"], [144, "execution-arguments"], [145, "execution-arguments"], [146, "execution-arguments"], [147, "execution-arguments"], [148, "execution-arguments"], [155, "execution-arguments"], [156, "execution-arguments"], [157, "execution-arguments"], [158, "execution-arguments"], [159, "execution-arguments"], [162, "execution-arguments"], [163, "execution-arguments"], [164, "execution-arguments"], [165, "execution-arguments"], [166, "execution-arguments"], [167, "execution-arguments"], [168, "execution-arguments"], [169, "execution-arguments"], [170, "execution-arguments"], [171, "execution-arguments"], [172, "execution-arguments"], [173, "execution-arguments"], [174, "execution-arguments"]], "Inputs": [[66, "inputs"], [67, "inputs"], [68, "inputs"], [69, "inputs"], [70, "inputs"], [71, "inputs"], [72, "inputs"], [73, "inputs"], [74, "inputs"], [75, "inputs"], [76, "inputs"], [77, "inputs"], [78, "inputs"], [79, "inputs"], [80, "inputs"], [81, "inputs"], [82, "inputs"], [83, "inputs"], [84, "inputs"], [85, "inputs"], [86, "inputs"], [87, "inputs"], [88, "inputs"], [89, "inputs"], [90, "inputs"], [91, "inputs"], [92, "inputs"], [93, "inputs"], [94, "inputs"], [95, "inputs"], [96, "inputs"], [97, "inputs"], [98, "inputs"], [99, "inputs"], [100, "inputs"], [101, "inputs"], [102, "inputs"], [103, "inputs"], [104, "inputs"], [105, "inputs"], [106, "inputs"], [107, "inputs"], [108, "inputs"], [109, "inputs"], [110, "inputs"], [111, "inputs"], [112, "inputs"], [113, "inputs"], [114, "inputs"], [115, "inputs"], [116, "inputs"], [117, "inputs"], [118, "inputs"], [119, "inputs"], [120, "inputs"], [121, "inputs"], [122, "inputs"], [123, "inputs"], [124, "inputs"], [125, "inputs"], [126, "inputs"], [127, "inputs"], [128, "inputs"], [129, "inputs"], [130, "inputs"], [131, "inputs"], [132, "inputs"], [133, "inputs"], [134, "inputs"], [135, "inputs"], [136, "inputs"], [137, "inputs"], [138, "inputs"], [139, "inputs"], [140, "inputs"], [141, "inputs"], [142, "inputs"], [143, "inputs"], [144, "inputs"], [145, "inputs"], [146, "inputs"], [147, "inputs"], [148, "inputs"]], "Outputs": [[66, "outputs"], [67, "outputs"], [68, "outputs"], [69, "outputs"], [70, "outputs"], [71, "outputs"], [72, "outputs"], [73, "outputs"], [74, "outputs"], [75, "outputs"], [76, "outputs"], [77, "outputs"], [78, "outputs"], [79, "outputs"], [80, "outputs"], [81, "outputs"], [82, "outputs"], [83, "outputs"], [84, "outputs"], [85, "outputs"], [86, "outputs"], [87, "outputs"], [88, "outputs"], [89, "outputs"], [90, "outputs"], [91, "outputs"], [92, "outputs"], [93, "outputs"], [94, "outputs"], [95, "outputs"], [96, "outputs"], [97, "outputs"], [98, "outputs"], [99, "outputs"], [100, "outputs"], [101, "outputs"], [102, "outputs"], [103, "outputs"], [104, "outputs"], [105, "outputs"], [106, "outputs"], [107, "outputs"], [108, "outputs"], [109, "outputs"], [110, "outputs"], [111, "outputs"], [112, "outputs"], [113, "outputs"], [114, "outputs"], [115, "outputs"], [116, "outputs"], [117, "outputs"], [118, "outputs"], [119, "outputs"], [120, "outputs"], [121, "outputs"], [122, "outputs"], [123, "outputs"], [124, "outputs"], [125, "outputs"], [126, "outputs"], [127, "outputs"], [128, "outputs"], [129, "outputs"], [130, "outputs"], [131, "outputs"], [132, "outputs"], [133, "outputs"], [134, "outputs"], [135, "outputs"], [136, "outputs"], [137, "outputs"], [138, "outputs"], [139, "outputs"], [140, "outputs"], [141, "outputs"], [142, "outputs"], [143, "outputs"], [144, "outputs"], [145, "outputs"], [146, "outputs"], [147, "outputs"], [148, "outputs"]], "Supported Data Types": [[66, "supported-data-types"], [67, "supported-data-types"], [68, "supported-data-types"], [69, "supported-data-types"], [70, "supported-data-types"], [71, "supported-data-types"], [72, "supported-data-types"], [73, "supported-data-types"], [74, "supported-data-types"], [75, "supported-data-types"], [76, "supported-data-types"], [77, "supported-data-types"], [78, "supported-data-types"], [79, "supported-data-types"], [80, "supported-data-types"], [81, "supported-data-types"], [82, "supported-data-types"], [83, "supported-data-types"], [84, "supported-data-types"], [85, "supported-data-types"], [86, "supported-data-types"], [87, "supported-data-types"], [88, "supported-data-types"], [89, "supported-data-types"], [90, "supported-data-types"], [91, "supported-data-types"], [92, "supported-data-types"], [93, "supported-data-types"], [94, "supported-data-types"], [95, "supported-data-types"], [96, "supported-data-types"], [97, "supported-data-types"], [98, "supported-data-types"], [99, "supported-data-types"], [100, "supported-data-types"], [101, "supported-data-types"], [102, "supported-data-types"], [103, "supported-data-types"], [104, "supported-data-types"], [105, "supported-data-types"], [106, "supported-data-types"], [107, "supported-data-types"], [108, "supported-data-types"], [109, "supported-data-types"], [110, "supported-data-types"], [111, "supported-data-types"], [112, "supported-data-types"], [113, "supported-data-types"], [114, "supported-data-types"], [115, "supported-data-types"], [116, "supported-data-types"], [117, "supported-data-types"], [118, "supported-data-types"], [119, "supported-data-types"], [120, "supported-data-types"], [121, "supported-data-types"], [122, "supported-data-types"], [123, "supported-data-types"], [124, "supported-data-types"], [125, "supported-data-types"], [126, "supported-data-types"], [127, "supported-data-types"], [128, "supported-data-types"], [129, "supported-data-types"], [130, "supported-data-types"], [131, "supported-data-types"], [132, "supported-data-types"], [133, "supported-data-types"], [134, "supported-data-types"], [135, "supported-data-types"], [136, "supported-data-types"], [137, "supported-data-types"], [138, "supported-data-types"], [139, "supported-data-types"], [140, "supported-data-types"], [141, "supported-data-types"], [142, "supported-data-types"], [143, "supported-data-types"], [144, "supported-data-types"], [145, "supported-data-types"], [146, "supported-data-types"], [147, "supported-data-types"], [148, "supported-data-types"]], "AbsBackward": [[67, "absbackward"]], "Add": [[68, "add"]], "AvgPool": [[69, "avgpool"]], "AvgPoolBackward": [[70, "avgpoolbackward"]], "BatchNormForwardTraining": [[71, "batchnormforwardtraining"]], "BatchNormInference": [[72, "batchnorminference"]], "BatchNormTrainingBackward": [[73, "batchnormtrainingbackward"]], "BiasAdd": [[74, "biasadd"]], "BiasAddBackward": [[75, "biasaddbackward"]], "Clamp": [[76, "clamp"]], "ClampBackward": [[77, "clampbackward"]], "Concat": [[78, "concat"], [157, "concat"]], "ConvTranspose": [[79, "convtranspose"]], "ConvTransposeBackwardData": [[80, "convtransposebackwarddata"]], "ConvTransposeBackwardWeights": [[81, "convtransposebackwardweights"]], "Convolution": [[82, "convolution"]], "Regular Convolution": [[82, "regular-convolution"], [158, "regular-convolution"]], "Convolution with Groups": [[82, "convolution-with-groups"], [158, "convolution-with-groups"]], "Convolution with Dilation": [[82, "convolution-with-dilation"], [158, "convolution-with-dilation"]], "ConvolutionBackwardData": [[83, "convolutionbackwarddata"]], "ConvolutionBackwardWeights": [[84, "convolutionbackwardweights"]], "Dequantize": [[85, "dequantize"]], "Divide": [[86, "divide"]], "DynamicDequantize": [[87, "dynamicdequantize"]], "DynamicQuantize": [[88, "dynamicquantize"]], "Elu": [[89, "elu"]], "EluBackward": [[90, "elubackward"]], "End": [[91, "end"]], "Exp": [[92, "exp"]], "GELU": [[93, "gelu"]], "GELUBackward": [[94, "gelubackward"]], "HardSigmoid": [[95, "hardsigmoid"]], "HardSigmoidBackward": [[96, "hardsigmoidbackward"]], "HardSwish": [[97, "hardswish"]], "HardSwishBackward": [[98, "hardswishbackward"]], "Interpolate": [[99, "interpolate"]], "InterpolateBackward": [[100, "interpolatebackward"]], "LayerNorm": [[101, "layernorm"]], "LayerNormBackward": [[102, "layernormbackward"]], "LeakyReLU": [[103, "leakyrelu"]], "Log": [[104, "log"]], "LogSoftmax": [[105, "logsoftmax"]], "LogSoftmaxBackward": [[106, "logsoftmaxbackward"]], "MatMul": [[107, "matmul"]], "MaxPool": [[108, "maxpool"]], "MaxPoolBackward": [[109, "maxpoolbackward"]], "Maximum": [[110, "maximum"]], "Minimum": [[111, "minimum"]], "Mish": [[112, "mish"]], "MishBackward": [[113, "mishbackward"]], "Multiply": [[114, "multiply"]], "PReLU": [[115, "prelu"]], "Broadcasting Rules": [[115, "broadcasting-rules"], [116, "broadcasting-rules"]], "PReLUBackward": [[116, "prelubackward"]], "Pow": [[117, "pow"]], "Quantize": [[118, "quantize"]], "ReLU": [[119, "relu"]], "ReLUBackward": [[120, "relubackward"]], "Reciprocal": [[121, "reciprocal"]], "ReduceL1": [[122, "reducel1"]], "ReduceL2": [[123, "reducel2"]], "ReduceMax": [[124, "reducemax"]], "ReduceMean": [[125, "reducemean"]], "ReduceMin": [[126, "reducemin"]], "ReduceProd": [[127, "reduceprod"]], "ReduceSum": [[128, "reducesum"]], "Reorder": [[129, "reorder"], [169, "reorder"]], "Round": [[130, "round"]], "Select": [[131, "select"]], "Sigmoid": [[132, "sigmoid"]], "SigmoidBackward": [[133, "sigmoidbackward"]], "SoftPlus": [[134, "softplus"]], "SoftPlusBackward": [[135, "softplusbackward"]], "SoftMax": [[136, "softmax"]], "SoftMaxBackward": [[137, "softmaxbackward"]], "Sqrt": [[138, "sqrt"]], "SqrtBackward": [[139, "sqrtbackward"]], "Square": [[140, "square"]], "SquaredDifference": [[141, "squareddifference"]], "StaticReshape": [[142, "staticreshape"]], "StaticTranspose": [[143, "statictranspose"]], "Subtract": [[144, "subtract"]], "Tanh": [[145, "tanh"]], "TanhBackward": [[146, "tanhbackward"]], "TypeCast": [[147, "typecast"]], "Wildcard": [[148, "wildcard"]], "Operation Set": [[149, "operation-set"]], "Logical Tensor": [[150, "logical-tensor"]], "Graph": [[150, "graph"]], "Partition": [[150, "partition"]], "Tensor": [[150, "tensor"]], "Compiled Partition": [[150, "compiled-partition"]], "General API notes": [[150, "general-api-notes"], [152, "general-api-notes"]], "Error Handling": [[150, "error-handling"], [152, "error-handling"]], "oneDNN": [[151, "onednn"]], "Open Source Implementation": [[151, "id1"]], "Implementation Notes": [[151, "implementation-notes"]], "Testing": [[151, "testing"]], "Graph Extension": [[152, "graph-extension"]], "Attributes": [[153, "attributes"]], "Scratchpad Mode": [[153, "scratchpad-mode"]], "Examples": [[153, "examples"], [744, "examples"], [769, "examples"], [842, "examples"]], "Library Manages Scratchpad": [[153, "library-manages-scratchpad"]], "User Manages Scratchpad": [[153, "user-manages-scratchpad"]], "Quantization": [[153, "quantization"]], "Quantization Attributes (scales and zero-points)": [[153, "quantization-attributes-scales-and-zero-points"]], "Example 1: weights quantization with per-output-channel scaling": [[153, "example-1-weights-quantization-with-per-output-channel-scaling"]], "Example 2: convolution with groups, with per-output-channel quantization": [[153, "example-2-convolution-with-groups-with-per-output-channel-quantization"]], "Implicit downconversions and floating-point math mode": [[153, "implicit-downconversions-and-floating-point-math-mode"]], "Attribute Related Error Handling": [[153, "attribute-related-error-handling"]], "Post-ops": [[154, "post-ops"]], "Supported Post-ops": [[154, "supported-post-ops"]], "Eltwise Post-op": [[154, "eltwise-post-op"]], "Sum Post-op": [[154, "sum-post-op"]], "Binary post-ops": [[154, "binary-post-ops"]], "Examples of Chained Post-ops": [[154, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[154, "sum-relu"]], "Batch Normalization": [[155, "batch-normalization"]], "Forward": [[155, "forward"], [158, "forward"], [159, "forward"], [162, "forward"], [163, "forward"], [164, "forward"], [166, "forward"], [167, "forward"], [170, "forward"], [172, "forward"], [173, "forward"]], "Difference Between Forward Training and Forward Inference": [[155, "difference-between-forward-training-and-forward-inference"], [158, "difference-between-forward-training-and-forward-inference"], [159, "difference-between-forward-training-and-forward-inference"], [162, "difference-between-forward-training-and-forward-inference"], [163, "difference-between-forward-training-and-forward-inference"], [166, "difference-between-forward-training-and-forward-inference"], [167, "difference-between-forward-training-and-forward-inference"], [170, "difference-between-forward-training-and-forward-inference"], [172, "difference-between-forward-training-and-forward-inference"], [173, "difference-between-forward-training-and-forward-inference"]], "Backward": [[155, "backward"], [158, "backward"], [159, "backward"], [162, "backward"], [163, "backward"], [164, "backward"], [166, "backward"], [167, "backward"], [170, "backward"], [172, "backward"], [173, "backward"]], "Operation Details": [[155, "operation-details"], [156, "operation-details"], [157, "operation-details"], [158, "operation-details"], [159, "operation-details"], [162, "operation-details"], [163, "operation-details"], [164, "operation-details"], [165, "operation-details"], [166, "operation-details"], [167, "operation-details"], [168, "operation-details"], [169, "operation-details"], [170, "operation-details"], [171, "operation-details"], [172, "operation-details"], [173, "operation-details"], [174, "operation-details"]], "Data Types Support": [[155, "data-types-support"], [156, "data-types-support"], [157, "data-types-support"], [158, "data-types-support"], [162, "data-types-support"], [163, "data-types-support"], [165, "data-types-support"], [167, "data-types-support"], [168, "data-types-support"], [169, "data-types-support"], [170, "data-types-support"], [171, "data-types-support"], [172, "data-types-support"], [173, "data-types-support"], [174, "data-types-support"]], "Data Representation": [[155, "data-representation"], [156, "data-representation"], [157, "data-representation"], [158, "data-representation"], [159, "data-representation"], [162, "data-representation"], [163, "data-representation"], [164, "data-representation"], [165, "data-representation"], [166, "data-representation"], [167, "data-representation"], [168, "data-representation"], [169, "data-representation"], [171, "data-representation"], [173, "data-representation"], [174, "data-representation"]], "Source, Destination, and Their Gradients": [[155, "source-destination-and-their-gradients"], [163, "source-destination-and-their-gradients"], [164, "source-destination-and-their-gradients"], [166, "source-destination-and-their-gradients"], [167, "source-destination-and-their-gradients"], [173, "source-destination-and-their-gradients"]], "Statistics Tensors": [[155, "statistics-tensors"]], "Post-ops and Attributes": [[155, "post-ops-and-attributes"], [156, "post-ops-and-attributes"], [157, "post-ops-and-attributes"], [158, "post-ops-and-attributes"], [159, "post-ops-and-attributes"], [162, "post-ops-and-attributes"], [164, "post-ops-and-attributes"], [166, "post-ops-and-attributes"], [167, "post-ops-and-attributes"], [169, "post-ops-and-attributes"], [170, "post-ops-and-attributes"], [171, "post-ops-and-attributes"], [172, "post-ops-and-attributes"], [173, "post-ops-and-attributes"], [174, "post-ops-and-attributes"]], "Binary": [[156, "binary"]], "Forward and Backward": [[156, "forward-and-backward"], [157, "forward-and-backward"]], "Convolution and Deconvolution": [[158, "convolution-and-deconvolution"]], "Deconvolution (Transposed Convolution)": [[158, "deconvolution-transposed-convolution"]], "Example 1": [[158, "example-1"]], "Example 2": [[158, "example-2"]], "Elementwise": [[159, "elementwise"]], "Data Type Support": [[159, "data-type-support"], [164, "data-type-support"], [166, "data-type-support"]], "Base Class for Primitives": [[160, "base-class-for-primitives"]], "Base Class for Primitives Descriptors": [[160, "base-class-for-primitives-descriptors"]], "Common Enumerations": [[160, "common-enumerations"]], "Normalization Primitives Flags": [[160, "normalization-primitives-flags"]], "Execution argument indices": [[160, "execution-argument-indices"]], "Primitives": [[161, "primitives"]], "Inner Product": [[162, "inner-product"]], "Layer normalization": [[163, "layer-normalization"]], "Mean and Variance": [[163, "mean-and-variance"]], "Scale and Shift": [[163, "scale-and-shift"]], "Local Response Normalization": [[164, "local-response-normalization"]], "Matrix Multiplication": [[165, "matrix-multiplication"]], "Attributes and Post-ops": [[165, "attributes-and-post-ops"], [168, "attributes-and-post-ops"]], "Pooling": [[166, "pooling"]], "Prelu": [[167, "prelu"]], "Reduction": [[168, "reduction"]], "Resampling": [[170, "resampling"]], "Nearest Neighbor Resampling": [[170, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[170, "bilinear-resampling"]], "RNN": [[171, "rnn"]], "Cell Functions": [[171, "cell-functions"]], "Vanilla RNN": [[171, "vanilla-rnn"]], "LSTM": [[171, "lstm"]], "LSTM (or Vanilla LSTM)": [[171, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[171, "lstm-with-peephole"]], "LSTM with Projection": [[171, "lstm-with-projection"]], "GRU": [[171, "gru"]], "Linear-Before-Reset GRU": [[171, "linear-before-reset-gru"]], "AUGRU": [[171, "augru"]], "Linear-Before-Reset AUGRU": [[171, "linear-before-reset-augru"]], "Shuffle": [[172, "shuffle"]], "Data Layouts": [[172, "data-layouts"]], "Softmax": [[173, "softmax"]], "Sum": [[174, "sum"]], "Sources, Destination": [[174, "sources-destination"]], "oneDPL": [[176, "onedpl"]], "Parallel API": [[177, "parallel-api"]], "C++ Standard aligned execution policies": [[177, "c-standard-aligned-execution-policies"]], "DPC++ Execution Policy": [[177, "dpc-execution-policy"]], "device_policy class": [[177, "device-policy-class"]], "make_device_policy function": [[177, "make-device-policy-function"]], "Buffer wrappers": [[177, "buffer-wrappers"]], "Iterators": [[177, "iterators"], [585, "iterators"], [595, "iterators"], [607, "iterators"], [621, "iterators"], [635, "iterators"], [656, "iterators"], [664, "iterators"], [680, "iterators"], [694, "iterators"], [708, "iterators"], [722, "iterators"], [736, "iterators"]], "Parallel Algorithms": [[177, "parallel-algorithms"]], "SYCL Kernels API": [[178, "sycl-kernels-api"]], "Supported C++ Standard Library APIs and Algorithms": [[178, "supported-c-standard-library-apis-and-algorithms"]], "Random Number Generation": [[178, "random-number-generation"]], "Supported functionality:": [[178, "supported-functionality"]], "Limitations:": [[178, "limitations"]], "Extensions:": [[178, "extensions"]], "Function Objects": [[178, "function-objects"]], "oneMKL Appendix": [[179, "onemkl-appendix"]], "Future considerations": [[179, "future-considerations"]], "Acknowledgment": [[179, "acknowledgment"]], "oneMKL Architecture": [[180, "onemkl-architecture"]], "Use of Queues": [[180, "use-of-queues"]], "Non-Member Functions": [[180, "non-member-functions"], [848, "non-member-functions"]], "Member Functions": [[180, "member-functions"], [786, "member-functions"], [787, "member-functions"], [788, "member-functions"], [790, "member-functions"], [842, "member-functions"], [848, "member-functions"]], "Device Usage": [[180, "device-usage"]], "Asynchronous Execution": [[180, "asynchronous-execution"]], "Synchronization When Using Buffers": [[180, "synchronization-when-using-buffers"]], "Synchronization When Using USM APIs": [[180, "synchronization-when-using-usm-apis"]], "Host Thread Safety": [[180, "host-thread-safety"]], "Memory Model": [[180, "memory-model"]], "The Buffer Memory Model": [[180, "the-buffer-memory-model"]], "Unified Shared Memory Model": [[180, "unified-shared-memory-model"]], "API Design": [[180, "api-design"]], "oneMKL namespaces": [[180, "onemkl-namespaces"]], "Standard C++ datatype usage": [[180, "standard-c-datatype-usage"]], "DPC++ datatype usage": [[180, "dpc-datatype-usage"]], "oneMKL defined datatypes": [[180, "onemkl-defined-datatypes"]], "Exceptions and Error Handling": [[180, "exceptions-and-error-handling"]], "LAPACK specific exceptions": [[180, "lapack-specific-exceptions"]], "Other Features": [[180, "other-features"]], "Current Version of this oneMKL Specification": [[180, "current-version-of-this-onemkl-specification"]], "Pre/Post Condition Checking": [[180, "pre-post-condition-checking"]], "asum": [[181, "asum"]], "asum (Buffer Version)": [[181, "asum-buffer-version"]], "asum (USM Version)": [[181, "asum-usm-version"]], "axpby": [[182, "axpby"]], "axpby (Buffer Version)": [[182, "axpby-buffer-version"]], "axpby (USM Version)": [[182, "axpby-usm-version"]], "axpy": [[183, "axpy"]], "axpy (Buffer Version)": [[183, "axpy-buffer-version"]], "axpy (USM Version)": [[183, "axpy-usm-version"]], "axpy_batch": [[184, "axpy-batch"]], "axpy_batch (Buffer Version)": [[184, "axpy-batch-buffer-version"]], "axpy_batch (USM Version)": [[184, "axpy-batch-usm-version"]], "BLAS Routines": [[185, "blas-routines"]], "BLAS Level 1 Routines": [[186, "blas-level-1-routines"]], "BLAS Level 2 Routines": [[187, "blas-level-2-routines"]], "BLAS Level 3 Routines": [[188, "blas-level-3-routines"]], "BLAS-like Extensions": [[189, "blas-like-extensions"]], "copy": [[190, "copy"]], "copy (Buffer Version)": [[190, "copy-buffer-version"]], "copy (USM Version)": [[190, "copy-usm-version"]], "copy_batch": [[191, "copy-batch"]], "copy_batch (Buffer Version)": [[191, "copy-batch-buffer-version"]], "copy_batch (USM Version)": [[191, "copy-batch-usm-version"]], "dgmm_batch": [[192, "dgmm-batch"]], "dgmm_batch (Buffer Version)": [[192, "dgmm-batch-buffer-version"]], "dgmm_batch (USM Version)": [[192, "dgmm-batch-usm-version"]], "dot": [[193, "dot"]], "dot (Buffer Version)": [[193, "dot-buffer-version"]], "dot (USM Version)": [[193, "dot-usm-version"]], "dotc": [[194, "dotc"]], "dotc (Buffer Version)": [[194, "dotc-buffer-version"]], "dotc (USM Version)": [[194, "dotc-usm-version"]], "dotu": [[195, "dotu"]], "dotu (Buffer Version)": [[195, "dotu-buffer-version"]], "dotu (USM Version)": [[195, "dotu-usm-version"]], "gbmv": [[196, "gbmv"]], "gbmv (Buffer Version)": [[196, "gbmv-buffer-version"]], "gbmv (USM Version)": [[196, "gbmv-usm-version"]], "gemm": [[197, "gemm"], [415, "gemm"]], "gemm (Buffer Version)": [[197, "gemm-buffer-version"]], "gemm (USM Version)": [[197, "gemm-usm-version"]], "gemm_batch": [[198, "gemm-batch"]], "gemm_batch (Buffer Version)": [[198, "gemm-batch-buffer-version"]], "gemm_batch (USM Version)": [[198, "gemm-batch-usm-version"]], "gemm_bias": [[199, "gemm-bias"]], "gemm_bias (Buffer Version)": [[199, "gemm-bias-buffer-version"]], "gemm_bias (USM Version)": [[199, "gemm-bias-usm-version"]], "gemmt": [[200, "gemmt"]], "gemmt (Buffer Version)": [[200, "gemmt-buffer-version"]], "gemmt (USM Version)": [[200, "gemmt-usm-version"]], "gemv": [[201, "gemv"], [417, "gemv"]], "gemv (Buffer Version)": [[201, "gemv-buffer-version"]], "gemv (USM Version)": [[201, "gemv-usm-version"]], "gemv_batch": [[202, "gemv-batch"]], "gemv_batch (Buffer Version)": [[202, "gemv-batch-buffer-version"]], "gemv_batch (USM Version)": [[202, "gemv-batch-usm-version"]], "ger": [[203, "ger"]], "ger (Buffer Version)": [[203, "ger-buffer-version"]], "ger (USM Version)": [[203, "ger-usm-version"]], "gerc": [[204, "gerc"]], "gerc (Buffer Version)": [[204, "gerc-buffer-version"]], "gerc (USM Version)": [[204, "gerc-usm-version"]], "geru": [[205, "geru"]], "geru (Buffer Version)": [[205, "geru-buffer-version"]], "geru (USM Version)": [[205, "geru-usm-version"]], "hbmv": [[206, "hbmv"]], "hbmv (Buffer Version)": [[206, "hbmv-buffer-version"]], "hbmv (USM Version)": [[206, "hbmv-usm-version"]], "hemm": [[207, "hemm"]], "hemm (Buffer Version)": [[207, "hemm-buffer-version"]], "hemm (USM Version)": [[207, "hemm-usm-version"]], "hemv": [[208, "hemv"]], "hemv (Buffer Version)": [[208, "hemv-buffer-version"]], "hemv (USM Version)": [[208, "hemv-usm-version"]], "her": [[209, "her"]], "her (Buffer Version)": [[209, "her-buffer-version"]], "her (USM Version)": [[209, "her-usm-version"]], "her2": [[210, "her2"]], "her2 (Buffer Version)": [[210, "her2-buffer-version"]], "her2 (USM Version)": [[210, "her2-usm-version"]], "her2k": [[211, "her2k"]], "her2k (Buffer Version)": [[211, "her2k-buffer-version"]], "her2k (USM Version)": [[211, "her2k-usm-version"]], "herk": [[212, "herk"]], "herk (Buffer Version)": [[212, "herk-buffer-version"]], "herk (USM Version)": [[212, "herk-usm-version"]], "hpmv": [[213, "hpmv"]], "hpmv (Buffer Version)": [[213, "hpmv-buffer-version"]], "hpmv (USM Version)": [[213, "hpmv-usm-version"]], "hpr": [[214, "hpr"]], "hpr (Buffer Version)": [[214, "hpr-buffer-version"]], "hpr (USM Version)": [[214, "hpr-usm-version"]], "hpr2": [[215, "hpr2"]], "hpr2 (Buffer Version)": [[215, "hpr2-buffer-version"]], "hpr2 (USM Version)": [[215, "hpr2-usm-version"]], "iamax": [[216, "iamax"]], "iamax (Buffer Version)": [[216, "iamax-buffer-version"]], "iamax (USM Version)": [[216, "iamax-usm-version"]], "iamin": [[217, "iamin"]], "iamin (Buffer Version)": [[217, "iamin-buffer-version"]], "iamin (USM Version)": [[217, "iamin-usm-version"]], "imatcopy": [[218, "imatcopy"]], "imatcopy (Buffer Version)": [[218, "imatcopy-buffer-version"]], "imatcopy (USM Version)": [[218, "imatcopy-usm-version"]], "imatcopy_batch": [[219, "imatcopy-batch"]], "imatcopy_batch (Buffer Version)": [[219, "imatcopy-batch-buffer-version"]], "imatcopy_batch (USM Version)": [[219, "imatcopy-batch-usm-version"]], "nrm2": [[220, "nrm2"]], "nrm2 (Buffer Version)": [[220, "nrm2-buffer-version"]], "nrm2 (USM Version)": [[220, "nrm2-usm-version"]], "omatadd": [[221, "omatadd"]], "omatadd (Buffer Version)": [[221, "omatadd-buffer-version"]], "omatadd (USM Version)": [[221, "omatadd-usm-version"]], "omatadd_batch": [[222, "omatadd-batch"]], "omatadd_batch (Buffer Version)": [[222, "omatadd-batch-buffer-version"]], "omatadd_batch (USM Version)": [[222, "omatadd-batch-usm-version"]], "omatcopy": [[223, "omatcopy"]], "omatcopy (Buffer Version)": [[223, "omatcopy-buffer-version"]], "omatcopy (USM Version)": [[223, "omatcopy-usm-version"]], "omatcopy2": [[224, "omatcopy2"]], "omatcopy2 (Buffer Version)": [[224, "omatcopy2-buffer-version"]], "omatcopy2 (USM Version)": [[224, "omatcopy2-usm-version"]], "omatcopy_batch": [[225, "omatcopy-batch"]], "omatcopy_batch (Buffer Version)": [[225, "omatcopy-batch-buffer-version"]], "omatcopy_batch (USM Version)": [[225, "omatcopy-batch-usm-version"]], "rot": [[226, "rot"]], "rot (Buffer Version)": [[226, "rot-buffer-version"]], "rot (USM Version)": [[226, "rot-usm-version"]], "rotg": [[227, "rotg"]], "rotg (Buffer Version)": [[227, "rotg-buffer-version"]], "rotg (USM Version)": [[227, "rotg-usm-version"]], "rotm": [[228, "rotm"]], "rotm (Buffer Version)": [[228, "rotm-buffer-version"]], "rotm (USM Version)": [[228, "rotm-usm-version"]], "rotmg": [[229, "rotmg"]], "rotmg (Buffer Version)": [[229, "rotmg-buffer-version"]], "rotmg (USM Version)": [[229, "rotmg-usm-version"]], "sbmv": [[230, "sbmv"]], "sbmv (Buffer Version)": [[230, "sbmv-buffer-version"]], "sbmv (USM Version)": [[230, "sbmv-usm-version"]], "scal": [[231, "scal"]], "scal (Buffer Version)": [[231, "scal-buffer-version"]], "scal (USM Version)": [[231, "scal-usm-version"]], "sdsdot": [[232, "sdsdot"]], "sdsdot (Buffer Version)": [[232, "sdsdot-buffer-version"]], "sdsdot (USM Version)": [[232, "sdsdot-usm-version"]], "spmv": [[233, "spmv"]], "spmv (Buffer Version)": [[233, "spmv-buffer-version"]], "spmv (USM Version)": [[233, "spmv-usm-version"]], "spr": [[234, "spr"]], "spr (Buffer Version)": [[234, "spr-buffer-version"]], "spr (USM Version)": [[234, "spr-usm-version"]], "spr2": [[235, "spr2"]], "spr2 (Buffer Version)": [[235, "spr2-buffer-version"]], "spr2 (USM Version)": [[235, "spr2-usm-version"]], "swap": [[236, "swap"], [589, "swap"], [602, "swap"], [616, "swap"], [630, "swap"], [644, "swap"], [652, "swap"], [660, "swap"], [673, "swap"], [688, "swap"], [702, "swap"], [716, "swap"], [730, "swap"], [742, "swap"]], "swap (Buffer Version)": [[236, "swap-buffer-version"]], "swap (USM Version)": [[236, "swap-usm-version"]], "symm": [[237, "symm"]], "symm (Buffer Version)": [[237, "symm-buffer-version"]], "symm (USM Version)": [[237, "symm-usm-version"]], "symv": [[238, "symv"], [426, "symv"]], "symv (Buffer Version)": [[238, "symv-buffer-version"]], "symv (USM Version)": [[238, "symv-usm-version"]], "syr": [[239, "syr"]], "syr (Buffer Version)": [[239, "syr-buffer-version"]], "syr (USM Version)": [[239, "syr-usm-version"]], "syr2": [[240, "syr2"]], "syr2 (Buffer Version)": [[240, "syr2-buffer-version"]], "syr2 (USM Version)": [[240, "syr2-usm-version"]], "syr2k": [[241, "syr2k"]], "syr2k (Buffer Version)": [[241, "syr2k-buffer-version"]], "syr2k (USM Version)": [[241, "syr2k-usm-version"]], "syrk": [[242, "syrk"]], "syrk (Buffer Version)": [[242, "syrk-buffer-version"]], "syrk (USM Version)": [[242, "syrk-usm-version"]], "syrk_batch": [[243, "syrk-batch"]], "syrk_batch (Buffer Version)": [[243, "syrk-batch-buffer-version"]], "syrk_batch (USM Version)": [[243, "syrk-batch-usm-version"]], "tbmv": [[244, "tbmv"]], "tbmv (Buffer Version)": [[244, "tbmv-buffer-version"]], "tbmv (USM Version)": [[244, "tbmv-usm-version"]], "tbsv": [[245, "tbsv"]], "tbsv (Buffer Version)": [[245, "tbsv-buffer-version"]], "tbsv (USM Version)": [[245, "tbsv-usm-version"]], "tpmv": [[246, "tpmv"]], "tpmv (Buffer Version)": [[246, "tpmv-buffer-version"]], "tpmv (USM Version)": [[246, "tpmv-usm-version"]], "tpsv": [[247, "tpsv"]], "tpsv (Buffer Version)": [[247, "tpsv-buffer-version"]], "tpsv (USM Version)": [[247, "tpsv-usm-version"]], "trmm": [[248, "trmm"]], "trmm (Buffer Version)": [[248, "trmm-buffer-version"]], "In-place API": [[248, "in-place-api"], [248, "id1"], [250, "in-place-api"], [250, "id1"]], "Out-of-place API": [[248, "out-of-place-api"], [248, "id2"], [250, "out-of-place-api"], [250, "id2"]], "trmm (USM Version)": [[248, "trmm-usm-version"]], "trmv": [[249, "trmv"], [428, "trmv"]], "trmv (Buffer Version)": [[249, "trmv-buffer-version"]], "trmv (USM Version)": [[249, "trmv-usm-version"]], "trsm": [[250, "trsm"]], "trsm (Buffer Version)": [[250, "trsm-buffer-version"]], "trsm (USM Version)": [[250, "trsm-usm-version"]], "trsm_batch": [[251, "trsm-batch"]], "trsm_batch (Buffer Version)": [[251, "trsm-batch-buffer-version"]], "trsm_batch (USM Version)": [[251, "trsm-batch-usm-version"]], "trsv": [[252, "trsv"], [430, "trsv"]], "trsv (Buffer Version)": [[252, "trsv-buffer-version"]], "trsv (USM Version)": [[252, "trsv-usm-version"]], "compute_backward": [[253, "compute-backward"]], "compute_backward (Buffer version)": [[253, "compute-backward-buffer-version"]], "compute_backward (USM version)": [[253, "compute-backward-usm-version"]], "compute_forward": [[254, "compute-forward"]], "compute_forward (Buffer version)": [[254, "compute-forward-buffer-version"]], "compute_forward (USM version)": [[254, "compute-forward-usm-version"]], "Configuration of Data Layouts": [[255, "configuration-of-data-layouts"]], "Data storage": [[256, "data-storage"]], "Complex descriptors": [[256, "complex-descriptors"]], "Real descriptors": [[256, "real-descriptors"]], "Workspace placement": [[257, "workspace-placement"]], "WORKSPACE_PLACEMENT": [[257, "id1"]], "Typical usage of WORKSPACE_EXTERNAL": [[257, "typical-usage-of-workspace-external"]], "The descriptor class": [[258, "the-descriptor-class"]], "Descriptor class constructors": [[258, "descriptor-class-constructors"]], "Descriptor class assignment operators": [[258, "descriptor-class-assignment-operators"]], "set_value": [[258, "set-value"]], "get_value": [[258, "get-value"]], "set_workspace": [[258, "set-workspace"]], "commit": [[258, "commit"]], "Discrete Fourier Transform Functions": [[259, "discrete-fourier-transform-functions"]], "Finite range of indices": [[259, "finite-range-of-indices"]], "Elementary range of indices": [[259, "elementary-range-of-indices"]], "Additional constraints for data in backward domain of real DFTs": [[259, "additional-constraints-for-data-in-backward-domain-of-real-dfts"]], "Recommended usage": [[259, "recommended-usage"]], "Summary table": [[259, "summary-table"]], "DFT-related scoped enumeration types": [[260, "dft-related-scoped-enumeration-types"]], "precision": [[260, "precision"]], "domain": [[260, "domain"]], "config_param": [[260, "config-param"]], "config_value": [[260, "config-value"]], "oneMKL Domains": [[261, "onemkl-domains"]], "Dense Linear Algebra": [[261, "dense-linear-algebra"]], "Sparse Linear Algebra": [[261, "sparse-linear-algebra"]], "Discrete Fourier Transforms": [[261, "discrete-fourier-transforms"]], "Random Number Generators": [[261, "random-number-generators"]], "Summary Statistics": [[261, "summary-statistics"], [444, "summary-statistics"]], "Vector Math": [[261, "vector-math"], [544, "vector-math"]], "gebrd": [[262, "gebrd"]], "gebrd (Buffer Version)": [[262, "gebrd-buffer-version"]], "gebrd (USM Version)": [[262, "gebrd-usm-version"]], "gebrd_scratchpad_size": [[263, "gebrd-scratchpad-size"]], "geqrf": [[264, "geqrf"]], "geqrf (Buffer Version)": [[264, "geqrf-buffer-version"]], "geqrf (USM Version)": [[264, "geqrf-usm-version"]], "geqrf_batch": [[265, "geqrf-batch"]], "geqrf_batch (Buffer Version)": [[265, "geqrf-batch-buffer-version"]], "geqrf_batch (USM Version)": [[265, "geqrf-batch-usm-version"]], "geqrf_batch_scratchpad_size": [[266, "geqrf-batch-scratchpad-size"]], "geqrf_scratchpad_size": [[267, "geqrf-scratchpad-size"]], "gerqf": [[268, "gerqf"]], "gerqf (Buffer Version)": [[268, "gerqf-buffer-version"]], "gerqf (USM Version)": [[268, "gerqf-usm-version"]], "gerqf_scratchpad_size": [[269, "gerqf-scratchpad-size"], [269, "id1"]], "gesvd": [[270, "gesvd"]], "gesvd (Buffer Version)": [[270, "gesvd-buffer-version"]], "gesvd (USM Version)": [[270, "gesvd-usm-version"]], "gesvd_scratchpad_size": [[271, "gesvd-scratchpad-size"], [271, "id1"]], "getrf": [[272, "getrf"]], "getrf (BUFFER Version)": [[272, "getrf-buffer-version"]], "getrf (USM Version)": [[272, "getrf-usm-version"]], "getrf_batch": [[273, "getrf-batch"]], "getrf_batch (Buffer Version)": [[273, "getrf-batch-buffer-version"]], "getrf_batch (USM Version)": [[273, "getrf-batch-usm-version"]], "getrf_batch_scratchpad_size": [[274, "getrf-batch-scratchpad-size"]], "getrf_scratchpad_size": [[275, "getrf-scratchpad-size"], [275, "id1"]], "getri": [[276, "getri"]], "getri (BUFFER Version)": [[276, "getri-buffer-version"]], "getri (USM Version)": [[276, "getri-usm-version"]], "getri_batch": [[277, "getri-batch"]], "getri_batch (Buffer Version)": [[277, "getri-batch-buffer-version"]], "getri_batch (USM Version)": [[277, "getri-batch-usm-version"]], "getri_batch_scratchpad_size": [[278, "getri-batch-scratchpad-size"]], "getri_scratchpad_size": [[279, "getri-scratchpad-size"], [279, "id1"]], "getrs": [[280, "getrs"]], "getrs (Buffer Version)": [[280, "getrs-buffer-version"]], "getrs (USM Version)": [[280, "getrs-usm-version"]], "getrs_batch": [[281, "getrs-batch"]], "getrs_batch (Buffer Version)": [[281, "getrs-batch-buffer-version"]], "getrs_batch (USM Version)": [[281, "getrs-batch-usm-version"]], "getrs_batch_scratchpad_size": [[282, "getrs-batch-scratchpad-size"]], "getrs_scratchpad_size": [[283, "getrs-scratchpad-size"], [283, "id1"]], "heevd": [[284, "heevd"]], "heevd (Buffer Version)": [[284, "heevd-buffer-version"]], "heevd (USM Version)": [[284, "heevd-usm-version"]], "heevd_scratchpad_size": [[285, "heevd-scratchpad-size"], [285, "id1"]], "hegvd": [[286, "hegvd"]], "hegvd (Buffer Version)": [[286, "hegvd-buffer-version"]], "hegvd (USM Version)": [[286, "hegvd-usm-version"]], "hegvd_scratchpad_size": [[287, "hegvd-scratchpad-size"], [287, "id1"]], "hetrd": [[288, "hetrd"]], "hetrd (Buffer Version)": [[288, "hetrd-buffer-version"]], "hetrd (USM Version)": [[288, "hetrd-usm-version"]], "hetrd_scratchpad_size": [[289, "hetrd-scratchpad-size"], [289, "id1"]], "hetrf": [[290, "hetrf"]], "hetrf (Buffer Version)": [[290, "hetrf-buffer-version"]], "hetrf (USM Version)": [[290, "hetrf-usm-version"]], "hetrf_scratchpad_size": [[291, "hetrf-scratchpad-size"], [291, "id1"]], "LAPACK Routines": [[292, "lapack-routines"]], "LAPACK Linear Equation Routines": [[292, "lapack-linear-equation-routines"]], "LAPACK Singular Value and Eigenvalue Problem Routines": [[292, "lapack-singular-value-and-eigenvalue-problem-routines"]], "LAPACK-like Extensions Routines": [[292, "lapack-like-extensions-routines"]], "orgbr": [[293, "orgbr"]], "orgbr (Buffer Version)": [[293, "orgbr-buffer-version"]], "orgbr (USM Version)": [[293, "orgbr-usm-version"]], "orgbr_scratchpad_size": [[294, "orgbr-scratchpad-size"], [294, "id1"]], "orgqr": [[295, "orgqr"]], "orgqr (Buffer Version)": [[295, "orgqr-buffer-version"]], "orgqr (USM Version)": [[295, "orgqr-usm-version"]], "orgqr_batch": [[296, "orgqr-batch"]], "orgqr_batch (Buffer Version)": [[296, "orgqr-batch-buffer-version"]], "orgqr_batch (USM Version)": [[296, "orgqr-batch-usm-version"]], "orgqr_batch_scratchpad_size": [[297, "orgqr-batch-scratchpad-size"]], "orgqr_scratchpad_size": [[298, "orgqr-scratchpad-size"], [298, "id1"]], "orgtr": [[299, "orgtr"]], "orgtr (Buffer Version)": [[299, "orgtr-buffer-version"]], "orgtr (USM Version)": [[299, "orgtr-usm-version"]], "orgtr_scratchpad_size": [[300, "orgtr-scratchpad-size"], [300, "id1"]], "ormqr": [[301, "ormqr"]], "ormqr (Buffer Version)": [[301, "ormqr-buffer-version"]], "ormqr (USM Version)": [[301, "ormqr-usm-version"]], "ormqr_scratchpad_size": [[302, "ormqr-scratchpad-size"], [302, "id1"]], "ormrq": [[303, "ormrq"]], "ormrq (Buffer Version)": [[303, "ormrq-buffer-version"]], "ormrq (USM Version)": [[303, "ormrq-usm-version"]], "ormrq_scratchpad_size": [[304, "ormrq-scratchpad-size"], [304, "id1"]], "ormtr": [[305, "ormtr"]], "ormtr (Buffer Version)": [[305, "ormtr-buffer-version"]], "ormtr (USM Version)": [[305, "ormtr-usm-version"]], "ormtr_scratchpad_size": [[306, "ormtr-scratchpad-size"], [306, "id1"]], "potrf": [[307, "potrf"]], "potrf (Buffer Version)": [[307, "potrf-buffer-version"]], "potrf (USM Version)": [[307, "potrf-usm-version"]], "potrf_batch": [[308, "potrf-batch"]], "potrf_batch (Buffer Version)": [[308, "potrf-batch-buffer-version"]], "potrf_batch (USM Version)": [[308, "potrf-batch-usm-version"]], "potrf_batch_scratchpad_size": [[309, "potrf-batch-scratchpad-size"]], "potrf_scratchpad_size": [[310, "potrf-scratchpad-size"], [310, "id1"]], "potri": [[311, "potri"]], "potri (Buffer Version)": [[311, "potri-buffer-version"]], "potri (USM Version)": [[311, "potri-usm-version"]], "potri_scratchpad_size": [[312, "potri-scratchpad-size"], [312, "id1"]], "potrs": [[313, "potrs"]], "potrs (Buffer Version)": [[313, "potrs-buffer-version"]], "potrs (USM Version)": [[313, "potrs-usm-version"]], "potrs_batch": [[314, "potrs-batch"]], "potrs_batch (Buffer Version)": [[314, "potrs-batch-buffer-version"]], "potrs_batch (USM Version)": [[314, "potrs-batch-usm-version"]], "potrs_batch_scratchpad_size": [[315, "potrs-batch-scratchpad-size"]], "potrs_scratchpad_size": [[316, "potrs-scratchpad-size"], [316, "id1"]], "syevd": [[317, "syevd"]], "syevd (Buffer Version)": [[317, "syevd-buffer-version"]], "syevd (USM Version)": [[317, "syevd-usm-version"]], "syevd_scratchpad_size": [[318, "syevd-scratchpad-size"], [318, "id1"]], "sygvd": [[319, "sygvd"]], "sygvd (Buffer Version)": [[319, "sygvd-buffer-version"]], "sygvd (USM Version)": [[319, "sygvd-usm-version"]], "sygvd_scratchpad_size": [[320, "sygvd-scratchpad-size"], [320, "id1"]], "sytrd": [[321, "sytrd"]], "sytrd (Buffer Version)": [[321, "sytrd-buffer-version"]], "sytrd (USM Version)": [[321, "sytrd-usm-version"]], "sytrd_scratchpad_size": [[322, "sytrd-scratchpad-size"], [322, "id1"]], "sytrf": [[323, "sytrf"]], "sytrf (Buffer Version)": [[323, "sytrf-buffer-version"]], "sytrf (USM Version)": [[323, "sytrf-usm-version"]], "sytrf_scratchpad_size": [[324, "sytrf-scratchpad-size"], [324, "id1"]], "trtrs": [[325, "trtrs"]], "trtrs (Buffer Version)": [[325, "trtrs-buffer-version"]], "trtrs (USM Version)": [[325, "trtrs-usm-version"]], "trtrs_scratchpad_size": [[326, "trtrs-scratchpad-size"], [326, "id1"]], "ungbr": [[327, "ungbr"]], "ungbr (Buffer Version)": [[327, "ungbr-buffer-version"]], "ungbr (USM Version)": [[327, "ungbr-usm-version"]], "ungbr_scratchpad_size": [[328, "ungbr-scratchpad-size"], [328, "id1"]], "ungqr": [[329, "ungqr"]], "ungqr (Buffer Version)": [[329, "ungqr-buffer-version"]], "ungqr (USM Version)": [[329, "ungqr-usm-version"]], "ungqr_batch": [[330, "ungqr-batch"]], "ungqr_batch (Buffer Version)": [[330, "ungqr-batch-buffer-version"]], "ungqr_batch (USM Version)": [[330, "ungqr-batch-usm-version"]], "ungqr_batch_scratchpad_size": [[331, "ungqr-batch-scratchpad-size"]], "ungqr_scratchpad_size": [[332, "ungqr-scratchpad-size"], [332, "id1"]], "ungtr": [[333, "ungtr"]], "ungtr (Buffer Version)": [[333, "ungtr-buffer-version"]], "ungtr (USM Version)": [[333, "ungtr-usm-version"]], "ungtr_scratchpad_size": [[334, "ungtr-scratchpad-size"], [334, "id1"]], "unmqr": [[335, "unmqr"]], "unmqr (Buffer Version)": [[335, "unmqr-buffer-version"]], "unmqr (USM Version)": [[335, "unmqr-usm-version"]], "unmqr_scratchpad_size": [[336, "unmqr-scratchpad-size"], [336, "id1"]], "unmrq": [[337, "unmrq"]], "unmrq (Buffer Version)": [[337, "unmrq-buffer-version"]], "unmrq (USM Version)": [[337, "unmrq-usm-version"]], "unmrq_scratchpad_size": [[338, "unmrq-scratchpad-size"], [338, "id1"]], "unmtr": [[339, "unmtr"]], "unmtr (Buffer Version)": [[339, "unmtr-buffer-version"]], "unmtr (USM Version)": [[339, "unmtr-usm-version"]], "unmtr_scratchpad_size": [[340, "unmtr-scratchpad-size"], [340, "id1"]], "Matrix Storage": [[341, "matrix-storage"]], "Device Distributions": [[343, "device-distributions"]], "Distributions Template Parameter Method": [[344, "distributions-template-parameter-method"], [366, "distributions-template-parameter-method"]], "Device Engines (Basic Random Number Generators)": [[345, "device-engines-basic-random-number-generators"]], "bernoulli": [[346, "bernoulli"], [370, "bernoulli"]], "class bernoulli": [[346, "class-bernoulli"], [370, "class-bernoulli"]], "bits": [[347, "bits"], [373, "bits"]], "class bits": [[347, "class-bits"], [373, "class-bits"]], "exponential": [[348, "exponential"], [377, "exponential"]], "class exponential": [[348, "class-exponential"], [377, "class-exponential"]], "gaussian": [[349, "gaussian"], [379, "gaussian"]], "class gaussian": [[349, "class-gaussian"], [379, "class-gaussian"]], "generate": [[350, "generate"], [381, "generate"]], "Device Generate Routines": [[351, "device-generate-routines"]], "lognormal": [[352, "lognormal"], [387, "lognormal"]], "class lognormal": [[352, "class-lognormal"], [387, "class-lognormal"]], "mcg31m1": [[353, "mcg31m1"], [388, "mcg31m1"]], "class mcg31m1": [[353, "class-mcg31m1"], [388, "class-mcg31m1"]], "mcg59": [[354, "mcg59"], [389, "mcg59"]], "class mcg59": [[354, "class-mcg59"], [389, "class-mcg59"]], "mrg32k3a": [[355, "mrg32k3a"], [390, "mrg32k3a"]], "class mrg32k3a": [[355, "class-mrg32k3a"], [390, "class-mrg32k3a"]], "philox4x32x10": [[356, "philox4x32x10"], [397, "philox4x32x10"]], "class philox4x32x10": [[356, "class-philox4x32x10"], [397, "class-philox4x32x10"]], "poisson": [[357, "poisson"], [398, "poisson"]], "class poisson": [[357, "class-poisson"], [398, "class-poisson"]], "skip_ahead": [[358, "skip-ahead"], [358, "id1"], [403, "skip-ahead"], [403, "onemkl-rng-skip-ahead-common"]], "uniform_bits": [[359, "uniform-bits"], [407, "uniform-bits"]], "class uniform_bits": [[359, "class-uniform-bits"], [407, "class-uniform-bits"]], "uniform (Continuous)": [[360, "uniform-continuous"]], "class uniform": [[360, "class-uniform"], [361, "class-uniform"], [405, "class-uniform"], [406, "class-uniform"]], "uniform (Discrete)": [[361, "uniform-discrete"]], "oneMKL RNG Device Usage Model": [[362, "onemkl-rng-device-usage-model"]], "Example of Scalar Random Numbers Generation": [[362, "example-of-scalar-random-numbers-generation"]], "Example of Vector Random Numbers Generation": [[362, "example-of-vector-random-numbers-generation"]], "Random Number Generators Device Routines": [[363, "random-number-generators-device-routines"]], "Device Service Routines": [[364, "device-service-routines"]], "Host Distributions": [[365, "host-distributions"]], "Host Engines (Basic Random Number Generators)": [[367, "host-engines-basic-random-number-generators"]], "Host Generate Routine": [[368, "host-generate-routine"]], "ars5": [[369, "ars5"]], "class ars5": [[369, "class-ars5"]], "beta": [[371, "beta"]], "class beta": [[371, "class-beta"]], "binomial": [[372, "binomial"]], "class binomial": [[372, "class-binomial"]], "cauchy": [[374, "cauchy"]], "class cauchy": [[374, "class-cauchy"]], "chi_square": [[375, "chi-square"]], "class chi_square": [[375, "class-chi-square"]], "default_engine": [[376, "default-engine"]], "type alias default_engine": [[376, "type-alias-default-engine"]], "gamma": [[378, "gamma"]], "class gamma": [[378, "class-gamma"]], "gaussian_mv": [[380, "gaussian-mv"]], "class gaussian_mv": [[380, "class-gaussian-mv"]], "generate (Buffer version)": [[381, "generate-buffer-version"]], "generate (USM version)": [[381, "generate-usm-version"]], "geometric": [[382, "geometric"]], "class geometric": [[382, "class-geometric"]], "gumbel": [[383, "gumbel"]], "class gumbel": [[383, "class-gumbel"]], "hypergeometric": [[384, "hypergeometric"]], "class hypergeometric": [[384, "class-hypergeometric"]], "laplace": [[385, "laplace"]], "class laplace": [[385, "class-laplace"]], "leapfrog": [[386, "leapfrog"], [386, "onemkl-rng-leapfrog-common"]], "mt19937": [[391, "mt19937"]], "class mt19937": [[391, "class-mt19937"]], "mt2203": [[392, "mt2203"]], "class mt2203": [[392, "class-mt2203"]], "multinomial": [[393, "multinomial"]], "class multinomial": [[393, "class-multinomial"]], "negative_binomial": [[394, "negative-binomial"]], "class negative_binomial": [[394, "class-negative-binomial"]], "niederreiter": [[395, "niederreiter"]], "class niederreiter": [[395, "class-niederreiter"]], "nondeterministic": [[396, "nondeterministic"]], "class nondeterministic": [[396, "class-nondeterministic"]], "poisson_v": [[399, "poisson-v"]], "class poisson_v": [[399, "class-poisson-v"]], "r250": [[400, "r250"]], "class r250": [[400, "class-r250"]], "rayleigh": [[401, "rayleigh"]], "class rayleigh": [[401, "class-rayleigh"]], "sfmt19937": [[402, "sfmt19937"]], "class sfmt19937": [[402, "class-sfmt19937"]], "skip_ahead (Interface with a partitioned number of skipped elements)": [[403, "skip-ahead-interface-with-a-partitioned-number-of-skipped-elements"]], "sobol": [[404, "sobol"]], "class sobol": [[404, "class-sobol"]], "uniform (continuous)": [[405, "uniform-continuous"]], "uniform (discrete)": [[406, "uniform-discrete"]], "weibull": [[408, "weibull"]], "class weibull": [[408, "class-weibull"]], "wichmann_hill": [[409, "wichmann-hill"]], "class wichmann_hill": [[409, "class-wichmann-hill"]], "oneMKL RNG Host Usage Model": [[410, "onemkl-rng-host-usage-model"]], "Buffer-based example": [[410, "buffer-based-example"]], "USM-based example": [[410, "usm-based-example"], [451, "usm-based-example"]], "Random Number Generators Host Routines": [[411, "random-number-generators-host-routines"]], "Host Service Routines": [[412, "host-service-routines"]], "Random Number Generators (RNG)": [[413, "random-number-generators-rng"]], "Sparse storage formats": [[414, "sparse-storage-formats"]], "gemm (Buffer version)": [[415, "gemm-buffer-version"]], "gemm (USM version)": [[415, "gemm-usm-version"]], "optimize_gemm": [[416, "optimize-gemm"]], "optimize_gemm (based on Sparse Matrix)": [[416, "optimize-gemm-based-on-sparse-matrix"]], "optimize_gemm (based on Both Input Matrices)": [[416, "optimize-gemm-based-on-both-input-matrices"]], "gemv (Buffer version)": [[417, "gemv-buffer-version"]], "gemv (USM version)": [[417, "gemv-usm-version"]], "gemvdot": [[418, "gemvdot"]], "gemvdot (Buffer version)": [[418, "gemvdot-buffer-version"]], "gemvdot (USM version)": [[418, "gemvdot-usm-version"]], "optimize_gemv": [[419, "optimize-gemv"]], "init_matrix_handle": [[420, "init-matrix-handle"]], "release_matrix_handle": [[421, "release-matrix-handle"]], "set_coo_data": [[422, "set-coo-data"]], "set_coo_data (Buffer version)": [[422, "set-coo-data-buffer-version"]], "set_coo_data (USM version)": [[422, "set-coo-data-usm-version"]], "set_csr_data": [[423, "set-csr-data"]], "set_csr_data (Buffer version)": [[423, "set-csr-data-buffer-version"]], "set_csr_data (USM version)": [[423, "set-csr-data-usm-version"]], "Sparse BLAS": [[424, "sparse-blas"]], "Supported Types": [[425, "supported-types"]], "General descriptions": [[425, "general-descriptions"]], "symv (Buffer version)": [[426, "symv-buffer-version"]], "symv (USM version)": [[426, "symv-usm-version"]], "optimize_symv": [[427, "optimize-symv"]], "trmv (Buffer version)": [[428, "trmv-buffer-version"]], "trmv (USM version)": [[428, "trmv-usm-version"]], "optimize_trmv": [[429, "optimize-trmv"]], "trsv (Buffer version)": [[430, "trsv-buffer-version"]], "trsv (USM version)": [[430, "trsv-usm-version"]], "optimize_trsv": [[431, "optimize-trsv"]], "central_moment": [[432, "central-moment"]], "central_moment (buffer version)": [[432, "central-moment-buffer-version"]], "central_moment (USM version)": [[432, "central-moment-usm-version"]], "central_moment with provided mean": [[433, "central-moment-with-provided-mean"]], "central_moment with provided mean (buffer version)": [[433, "central-moment-with-provided-mean-buffer-version"]], "central_moment with provided mean (USM version)": [[433, "central-moment-with-provided-mean-usm-version"]], "central_sum": [[434, "central-sum"]], "central_sum (Buffer version)": [[434, "central-sum-buffer-version"]], "central_sum (USM version)": [[434, "central-sum-usm-version"]], "central_sum with provided mean": [[435, "central-sum-with-provided-mean"]], "central_sum with provided mean (buffer version)": [[435, "central-sum-with-provided-mean-buffer-version"]], "central_sum with provided mean  (USM version)": [[435, "central-sum-with-provided-mean-usm-version"]], "dataset": [[436, "dataset"]], "structure dataset (Buffer version)": [[436, "structure-dataset-buffer-version"]], "structure dataset (USM version)": [[436, "structure-dataset-usm-version"]], "kurtosis": [[437, "kurtosis"]], "kurtosis (buffer version)": [[437, "kurtosis-buffer-version"]], "kurtosis (USM version)": [[437, "kurtosis-usm-version"]], "kurtosis with provided mean": [[438, "kurtosis-with-provided-mean"]], "kurtosis with provided mean (buffer version)": [[438, "kurtosis-with-provided-mean-buffer-version"]], "kurtosis with provided mean (USM version)": [[438, "kurtosis-with-provided-mean-usm-version"]], "make_dataset": [[439, "make-dataset"]], "make_dataset (buffer version)": [[439, "make-dataset-buffer-version"]], "make_dataset (USM version)": [[439, "make-dataset-usm-version"]], "max": [[440, "max"]], "max (buffer version)": [[440, "max-buffer-version"]], "max (USM version)": [[440, "max-usm-version"]], "mean": [[441, "mean"]], "mean (buffer version)": [[441, "mean-buffer-version"]], "mean (USM version)": [[441, "mean-usm-version"]], "min": [[442, "min"]], "min (buffer version)": [[442, "min-buffer-version"]], "min (USM version)": [[442, "min-usm-version"]], "min_max": [[443, "min-max"]], "min_max (buffer version)": [[443, "min-max-buffer-version"]], "min_max (USM version)": [[443, "min-max-usm-version"]], "raw_moment": [[445, "raw-moment"]], "oneapi::mkl::stats::raw_moment (buffer version)": [[445, "oneapi-mkl-stats-raw-moment-buffer-version"]], "raw_moment (USM version)": [[445, "raw-moment-usm-version"]], "raw_sum": [[446, "raw-sum"]], "raw_sum (Buffer version)": [[446, "raw-sum-buffer-version"]], "raw_sum (USM version)": [[446, "raw-sum-usm-version"]], "Summary Statistics Routines": [[447, "summary-statistics-routines"]], "Service Routines": [[448, "service-routines"]], "skewness": [[449, "skewness"]], "skewness (buffer version)": [[449, "skewness-buffer-version"]], "skewness (USM version)": [[449, "skewness-usm-version"]], "skewness with provided mean": [[450, "skewness-with-provided-mean"]], "skewness with provided mean (buffer version)": [[450, "skewness-with-provided-mean-buffer-version"]], "skewness with provided mean (USM version)": [[450, "skewness-with-provided-mean-usm-version"]], "oneMKL Summary Statistics Usage Model": [[451, "onemkl-summary-statistics-usage-model"]], "variation": [[452, "variation"]], "variation (buffer version)": [[452, "variation-buffer-version"]], "variation (USM version)": [[452, "variation-usm-version"]], "variation with provided mean": [[453, "variation-with-provided-mean"]], "oneapi::mkl::stats::variation (buffer version)": [[453, "oneapi-mkl-stats-variation-buffer-version"]], "variation with provided mean (USM version)": [[453, "variation-with-provided-mean-usm-version"]], "Scalar Arguments in BLAS": [[454, "scalar-arguments-in-blas"]], "abs": [[455, "abs"]], "acos": [[456, "acos"]], "acosh": [[457, "acosh"]], "acospi": [[458, "acospi"]], "add": [[459, "add"]], "arg": [[460, "arg"]], "asin": [[461, "asin"]], "asinh": [[462, "asinh"]], "asinpi": [[463, "asinpi"]], "atan": [[464, "atan"]], "atan2": [[465, "atan2"]], "atan2pi": [[466, "atan2pi"]], "atanh": [[467, "atanh"]], "atanpi": [[468, "atanpi"]], "cbrt": [[470, "cbrt"]], "cdfnorm": [[471, "cdfnorm"]], "cdfnorminv": [[472, "cdfnorminv"]], "ceil": [[473, "ceil"]], "cis": [[474, "cis"]], "clear_status": [[475, "clear-status"]], "conj": [[476, "conj"]], "copysign": [[477, "copysign"]], "cos": [[478, "cos"]], "cosd": [[479, "cosd"]], "cosh": [[480, "cosh"]], "cospi": [[481, "cospi"]], "create_error_handler": [[482, "create-error-handler"]], "div": [[483, "div"]], "erf": [[484, "erf"]], "erfc": [[485, "erfc"]], "erfcinv": [[486, "erfcinv"]], "erfinv": [[487, "erfinv"]], "exp": [[488, "exp"]], "exp10": [[489, "exp10"]], "exp2": [[490, "exp2"]], "expint1": [[491, "expint1"]], "expm1": [[492, "expm1"]], "fdim": [[493, "fdim"]], "floor": [[494, "floor"]], "fmax": [[495, "fmax"]], "fmin": [[496, "fmin"]], "fmod": [[497, "fmod"]], "frac": [[498, "frac"]], "get_mode": [[499, "get-mode"]], "get_status": [[500, "get-status"]], "hypot": [[501, "hypot"]], "inv": [[502, "inv"]], "invcbrt": [[503, "invcbrt"]], "invsqrt": [[504, "invsqrt"]], "lgamma": [[505, "lgamma"]], "linearfrac": [[506, "linearfrac"]], "ln": [[507, "ln"]], "log10": [[508, "log10"]], "log1p": [[509, "log1p"]], "log2": [[510, "log2"]], "logb": [[511, "logb"]], "maxmag": [[512, "maxmag"]], "minmag": [[513, "minmag"]], "modf": [[514, "modf"]], "mul": [[515, "mul"]], "mulbyconj": [[516, "mulbyconj"]], "nearbyint": [[517, "nearbyint"]], "nextafter": [[518, "nextafter"]], "pow": [[519, "pow"]], "pow2o3": [[520, "pow2o3"]], "pow3o2": [[521, "pow3o2"]], "powr": [[522, "powr"]], "powx": [[523, "powx"]], "remainder": [[524, "remainder"]], "rint": [[525, "rint"]], "round": [[526, "round"]], "set_status": [[527, "set-status"]], "set_mode": [[528, "set-mode"]], "sin": [[529, "sin"]], "sincos": [[530, "sincos"]], "sind": [[531, "sind"]], "sinh": [[532, "sinh"]], "sinpi": [[533, "sinpi"]], "Special Value Notations": [[534, "special-value-notations"]], "sqr": [[535, "sqr"]], "sqrt": [[536, "sqrt"]], "sub": [[537, "sub"]], "tan": [[538, "tan"]], "tand": [[539, "tand"]], "tanh": [[540, "tanh"]], "tanpi": [[541, "tanpi"]], "tgamma": [[542, "tgamma"]], "trunc": [[543, "trunc"]], "Exceptions": [[545, "exceptions"]], "VM Mathematical Functions": [[546, "vm-mathematical-functions"]], "VM Service Functions": [[547, "vm-service-functions"]], "oneMKL": [[548, "onemkl"]], "Parallel Functions": [[549, "parallel-functions"]], "Blocked Ranges": [[549, "blocked-ranges"]], "Partitioners": [[549, "partitioners"]], "Split Tags": [[549, "split-tags"]], "blocked_range2d": [[550, "blocked-range2d"]], "Member types": [[550, "member-types"], [551, "member-types"], [745, "member-types"], [758, "member-types"], [761, "member-types"], [766, "member-types"]], "Member functions": [[550, "member-functions"], [551, "member-functions"], [552, "member-functions"], [554, "member-functions"], [555, "member-functions"], [561, "member-functions"], [563, "member-functions"], [567, "member-functions"], [572, "member-functions"], [580, "member-functions"], [581, "member-functions"], [582, "member-functions"], [590, "member-functions"], [591, "member-functions"], [603, "member-functions"], [617, "member-functions"], [618, "member-functions"], [631, "member-functions"], [632, "member-functions"], [645, "member-functions"], [653, "member-functions"], [661, "member-functions"], [674, "member-functions"], [689, "member-functions"], [703, "member-functions"], [717, "member-functions"], [731, "member-functions"], [743, "member-functions"], [745, "member-functions"], [746, "member-functions"], [747, "member-functions"], [748, "member-functions"], [750, "member-functions"], [754, "member-functions"], [756, "member-functions"], [758, "member-functions"], [759, "member-functions"], [761, "member-functions"], [763, "member-functions"], [766, "member-functions"], [769, "member-functions"], [771, "member-functions"], [772, "member-functions"], [777, "member-functions"], [778, "member-functions"], [779, "member-functions"], [780, "member-functions"], [792, "member-functions"], [793, "member-functions"], [794, "member-functions"], [795, "member-functions"], [796, "member-functions"], [797, "member-functions"], [798, "member-functions"], [799, "member-functions"], [800, "member-functions"], [801, "member-functions"], [839, "member-functions"], [841, "member-functions"], [843, "member-functions"], [844, "member-functions"], [846, "member-functions"], [850, "member-functions"], [851, "member-functions"], [858, "member-functions"]], "blocked_range3d": [[551, "blocked-range3d"]], "blocked_range": [[552, "blocked-range"]], "collaborative_call_once": [[553, "collaborative-call-once"]], "collaborative_once_flag Class": [[553, "collaborative-once-flag-class"]], "Example": [[553, "example"], [557, "example"], [559, "example"], [560, "example"], [750, "example"], [754, "example"], [755, "example"], [767, "example"], [771, "example"], [772, "example"], [777, "example"], [780, "example"], [840, "example"], [843, "example"], [844, "example"]], "collaborative_once_flag": [[554, "collaborative-once-flag"]], "feeder": [[555, "feeder"]], "parallel_deterministic_reduce": [[556, "parallel-deterministic-reduce"]], "parallel_for_each": [[557, "parallel-for-each"]], "feeder Class": [[557, "feeder-class"]], "parallel_for": [[558, "parallel-for"]], "parallel_invoke": [[559, "parallel-invoke"]], "parallel_pipeline": [[560, "parallel-pipeline"]], "filter Class Template": [[560, "filter-class-template"]], "flow_control Class": [[560, "flow-control-class"]], "filter": [[561, "filter"]], "filter_mode Enumeration": [[561, "filter-mode-enumeration"]], "Non-member functions": [[561, "non-member-functions"], [582, "non-member-functions"], [590, "non-member-functions"], [603, "non-member-functions"], [618, "non-member-functions"], [632, "non-member-functions"], [645, "non-member-functions"], [653, "non-member-functions"], [661, "non-member-functions"], [674, "non-member-functions"], [689, "non-member-functions"], [703, "non-member-functions"], [717, "non-member-functions"], [731, "non-member-functions"], [779, "non-member-functions"], [846, "non-member-functions"], [858, "non-member-functions"], [861, "non-member-functions"]], "Deduction Guides": [[561, "deduction-guides"], [750, "deduction-guides"], [754, "deduction-guides"], [759, "deduction-guides"], [761, "deduction-guides"], [777, "deduction-guides"]], "filter_mode": [[562, "filter-mode"]], "flow_control": [[563, "flow-control"]], "parallel_reduce": [[564, "parallel-reduce"]], "Example (Imperative Form)": [[564, "example-imperative-form"], [565, "example-imperative-form"]], "Example with Lambda Expressions": [[564, "example-with-lambda-expressions"], [565, "example-with-lambda-expressions"]], "parallel_scan": [[565, "parallel-scan"]], "pre_scan and final_scan Classes": [[565, "pre-scan-and-final-scan-classes"]], "parallel_sort": [[566, "parallel-sort"]], "pre_scan_tag and final_scan_tag": [[567, "pre-scan-tag-and-final-scan-tag"]], "affinity_partitioner": [[568, "affinity-partitioner"]], "auto_partitioner": [[569, "auto-partitioner"]], "simple_partitioner": [[570, "simple-partitioner"]], "static_partitioner": [[571, "static-partitioner"]], "proportional split": [[572, "proportional-split"]], "split": [[573, "split"]], "Configuration": [[574, "configuration"]], "Enabling Debugging Features": [[575, "enabling-debugging-features"]], "Debugging Macros": [[575, "id1"]], "TBB_USE_ASSERT Macro": [[575, "tbb-use-assert-macro"]], "TBB_USE_PROFILING_TOOLS Macro": [[575, "tbb-use-profiling-tools-macro"]], "Feature Macros": [[576, "feature-macros"]], "TBB_USE_EXCEPTIONS macro": [[576, "tbb-use-exceptions-macro"]], "TBB_USE_GLIBCXX_VERSION macro": [[576, "tbb-use-glibcxx-version-macro"]], "tbb Namespace": [[577, "tbb-namespace"]], "tbb::flow Namespace": [[577, "tbb-flow-namespace"]], "oneapi::tbb Namespace": [[577, "oneapi-tbb-namespace"]], "Version Information": [[578, "version-information"]], "TBB_runtime_interface_version Function": [[578, "tbb-runtime-interface-version-function"]], "TBB_runtime_version Function": [[578, "tbb-runtime-version-function"]], "TBB_VERSION Environment Variable": [[578, "tbb-version-environment-variable"]], "Containers": [[579, "containers"], [802, "containers"]], "Sequences": [[579, "sequences"]], "Queues": [[579, "queues"]], "Unordered associative containers": [[579, "unordered-associative-containers"]], "Ordered associative containers": [[579, "ordered-associative-containers"]], "Auxiliary classes": [[579, "auxiliary-classes"]], "Node handles": [[580, "node-handles"]], "Class synopsis": [[580, "class-synopsis"]], "Constructors": [[580, "constructors"]], "Assignment": [[580, "assignment"]], "Destructor": [[580, "destructor"], [583, "destructor"], [592, "destructor"], [604, "destructor"], [619, "destructor"], [633, "destructor"], [646, "destructor"], [654, "destructor"], [662, "destructor"], [676, "destructor"], [691, "destructor"], [705, "destructor"], [719, "destructor"], [733, "destructor"], [853, "destructor"]], "Swap": [[580, "swap"]], "State": [[580, "state"]], "Access to the stored element": [[580, "access-to-the-stored-element"]], "get_allocator": [[580, "get-allocator"], [588, "get-allocator"], [592, "get-allocator"], [612, "get-allocator"], [626, "get-allocator"], [640, "get-allocator"], [659, "get-allocator"], [669, "get-allocator"], [684, "get-allocator"], [698, "get-allocator"], [712, "get-allocator"], [726, "get-allocator"], [733, "get-allocator"]], "tbb_hash_compare": [[581, "tbb-hash-compare"]], "Class Template Synopsis": [[581, "class-template-synopsis"], [582, "class-template-synopsis"], [590, "class-template-synopsis"], [603, "class-template-synopsis"], [618, "class-template-synopsis"], [632, "class-template-synopsis"], [645, "class-template-synopsis"], [653, "class-template-synopsis"], [661, "class-template-synopsis"], [674, "class-template-synopsis"], [689, "class-template-synopsis"], [703, "class-template-synopsis"], [717, "class-template-synopsis"], [731, "class-template-synopsis"]], "concurrent_bounded_queue": [[582, "concurrent-bounded-queue"]], "Other": [[582, "other"], [590, "other"], [603, "other"], [618, "other"], [632, "other"], [645, "other"], [653, "other"], [661, "other"], [674, "other"], [689, "other"], [703, "other"], [717, "other"], [731, "other"]], "Construction, destruction, copying": [[583, "construction-destruction-copying"], [592, "construction-destruction-copying"], [604, "construction-destruction-copying"], [619, "construction-destruction-copying"], [633, "construction-destruction-copying"], [646, "construction-destruction-copying"], [654, "construction-destruction-copying"], [662, "construction-destruction-copying"], [676, "construction-destruction-copying"], [691, "construction-destruction-copying"], [705, "construction-destruction-copying"], [719, "construction-destruction-copying"], [733, "construction-destruction-copying"], [853, "construction-destruction-copying"]], "Empty container constructors": [[583, "empty-container-constructors"], [592, "empty-container-constructors"], [604, "empty-container-constructors"], [619, "empty-container-constructors"], [633, "empty-container-constructors"], [646, "empty-container-constructors"], [654, "empty-container-constructors"], [662, "empty-container-constructors"], [676, "empty-container-constructors"], [691, "empty-container-constructors"], [705, "empty-container-constructors"], [719, "empty-container-constructors"], [733, "empty-container-constructors"], [853, "empty-container-constructors"]], "Constructors from the sequence of elements": [[583, "constructors-from-the-sequence-of-elements"], [592, "constructors-from-the-sequence-of-elements"], [604, "constructors-from-the-sequence-of-elements"], [619, "constructors-from-the-sequence-of-elements"], [633, "constructors-from-the-sequence-of-elements"], [646, "constructors-from-the-sequence-of-elements"], [654, "constructors-from-the-sequence-of-elements"], [662, "constructors-from-the-sequence-of-elements"], [676, "constructors-from-the-sequence-of-elements"], [691, "constructors-from-the-sequence-of-elements"], [705, "constructors-from-the-sequence-of-elements"], [719, "constructors-from-the-sequence-of-elements"], [733, "constructors-from-the-sequence-of-elements"]], "Copying constructors": [[583, "copying-constructors"], [592, "copying-constructors"], [604, "copying-constructors"], [619, "copying-constructors"], [633, "copying-constructors"], [646, "copying-constructors"], [654, "copying-constructors"], [662, "copying-constructors"], [676, "copying-constructors"], [691, "copying-constructors"], [705, "copying-constructors"], [719, "copying-constructors"], [733, "copying-constructors"], [853, "copying-constructors"]], "Moving constructors": [[583, "moving-constructors"], [592, "moving-constructors"], [604, "moving-constructors"], [619, "moving-constructors"], [633, "moving-constructors"], [646, "moving-constructors"], [654, "moving-constructors"], [662, "moving-constructors"], [676, "moving-constructors"], [691, "moving-constructors"], [705, "moving-constructors"], [719, "moving-constructors"], [733, "moving-constructors"], [853, "moving-constructors"]], "Assignment operators": [[583, "assignment-operators"], [592, "assignment-operators"], [604, "assignment-operators"], [619, "assignment-operators"], [633, "assignment-operators"], [646, "assignment-operators"], [654, "assignment-operators"], [662, "assignment-operators"], [676, "assignment-operators"], [691, "assignment-operators"], [705, "assignment-operators"], [719, "assignment-operators"], [733, "assignment-operators"], [853, "assignment-operators"]], "assign": [[583, "assign"], [646, "assign"], [654, "assign"], [733, "assign"]], "Deduction guides": [[584, "deduction-guides"], [593, "deduction-guides"], [605, "deduction-guides"], [620, "deduction-guides"], [634, "deduction-guides"], [647, "deduction-guides"], [655, "deduction-guides"], [663, "deduction-guides"], [677, "deduction-guides"], [692, "deduction-guides"], [706, "deduction-guides"], [720, "deduction-guides"], [734, "deduction-guides"]], "unsafe_begin and unsafe_cbegin": [[585, "unsafe-begin-and-unsafe-cbegin"], [656, "unsafe-begin-and-unsafe-cbegin"]], "unsafe_end and unsafe_cend": [[585, "unsafe-end-and-unsafe-cend"], [656, "unsafe-end-and-unsafe-cend"]], "Non-member binary comparisons": [[586, "non-member-binary-comparisons"], [598, "non-member-binary-comparisons"], [609, "non-member-binary-comparisons"], [623, "non-member-binary-comparisons"], [637, "non-member-binary-comparisons"], [648, "non-member-binary-comparisons"], [657, "non-member-binary-comparisons"], [666, "non-member-binary-comparisons"], [682, "non-member-binary-comparisons"], [696, "non-member-binary-comparisons"], [710, "non-member-binary-comparisons"], [724, "non-member-binary-comparisons"], [737, "non-member-binary-comparisons"]], "Non-member swap": [[587, "non-member-swap"], [599, "non-member-swap"], [611, "non-member-swap"], [625, "non-member-swap"], [639, "non-member-swap"], [649, "non-member-swap"], [658, "non-member-swap"], [668, "non-member-swap"], [683, "non-member-swap"], [697, "non-member-swap"], [711, "non-member-swap"], [725, "non-member-swap"], [739, "non-member-swap"]], "Concurrently safe member functions": [[588, "concurrently-safe-member-functions"], [659, "concurrently-safe-member-functions"]], "Pushing elements": [[588, "pushing-elements"], [650, "pushing-elements"], [659, "pushing-elements"]], "Popping elements": [[588, "popping-elements"], [650, "popping-elements"], [659, "popping-elements"]], "abort": [[588, "abort"]], "Capacity of the queue": [[588, "capacity-of-the-queue"]], "Concurrently unsafe member functions": [[589, "concurrently-unsafe-member-functions"], [660, "concurrently-unsafe-member-functions"]], "The number of elements": [[589, "the-number-of-elements"], [660, "the-number-of-elements"]], "clear": [[589, "clear"], [602, "clear"], [652, "clear"], [660, "clear"], [742, "clear"], [857, "clear"]], "concurrent_hash_map": [[590, "concurrent-hash-map"]], "Member classes": [[590, "member-classes"], [603, "member-classes"], [618, "member-classes"], [792, "member-classes"], [793, "member-classes"], [794, "member-classes"], [795, "member-classes"], [796, "member-classes"], [797, "member-classes"], [798, "member-classes"], [799, "member-classes"], [800, "member-classes"], [801, "member-classes"]], "accessor and const_accessor": [[591, "accessor-and-const-accessor"]], "accessor member class": [[591, "accessor-member-class"]], "const_accessor member class": [[591, "const-accessor-member-class"]], "Construction and destruction": [[591, "construction-and-destruction"]], "Emptiness": [[591, "emptiness"]], "Key-value pair access": [[591, "key-value-pair-access"]], "Releasing": [[591, "releasing"]], "Hash policy": [[594, "hash-policy"], [679, "hash-policy"], [693, "hash-policy"], [707, "hash-policy"], [721, "hash-policy"]], "Rehashing": [[594, "rehashing"]], "bucket_count": [[594, "bucket-count"]], "begin and cbegin": [[595, "begin-and-cbegin"], [607, "begin-and-cbegin"], [621, "begin-and-cbegin"], [635, "begin-and-cbegin"], [664, "begin-and-cbegin"], [680, "begin-and-cbegin"], [694, "begin-and-cbegin"], [708, "begin-and-cbegin"], [722, "begin-and-cbegin"], [736, "begin-and-cbegin"]], "end and cend": [[595, "end-and-cend"], [607, "end-and-cend"], [621, "end-and-cend"], [635, "end-and-cend"], [664, "end-and-cend"], [680, "end-and-cend"], [694, "end-and-cend"], [708, "end-and-cend"], [722, "end-and-cend"], [736, "end-and-cend"]], "equal_range": [[595, "equal-range"], [608, "equal-range"], [622, "equal-range"], [636, "equal-range"], [665, "equal-range"], [681, "equal-range"], [695, "equal-range"], [709, "equal-range"], [723, "equal-range"]], "Lookup": [[596, "lookup"], [608, "lookup"], [622, "lookup"], [636, "lookup"], [665, "lookup"], [681, "lookup"], [695, "lookup"], [709, "lookup"], [723, "lookup"]], "find": [[596, "find"], [608, "find"], [622, "find"], [636, "find"], [665, "find"], [681, "find"], [695, "find"], [709, "find"], [723, "find"]], "count": [[596, "count"], [608, "count"], [622, "count"], [636, "count"], [665, "count"], [681, "count"], [695, "count"], [709, "count"], [723, "count"]], "Concurrently safe modifiers": [[597, "concurrently-safe-modifiers"], [614, "concurrently-safe-modifiers"], [628, "concurrently-safe-modifiers"], [642, "concurrently-safe-modifiers"], [650, "concurrently-safe-modifiers"], [671, "concurrently-safe-modifiers"], [686, "concurrently-safe-modifiers"], [700, "concurrently-safe-modifiers"], [714, "concurrently-safe-modifiers"], [728, "concurrently-safe-modifiers"], [855, "concurrently-safe-modifiers"]], "Inserting values": [[597, "inserting-values"], [614, "inserting-values"], [628, "inserting-values"], [642, "inserting-values"], [671, "inserting-values"], [686, "inserting-values"], [700, "inserting-values"], [714, "inserting-values"], [728, "inserting-values"]], "Inserting sequences of elements": [[597, "inserting-sequences-of-elements"], [614, "inserting-sequences-of-elements"], [628, "inserting-sequences-of-elements"], [642, "inserting-sequences-of-elements"], [671, "inserting-sequences-of-elements"], [686, "inserting-sequences-of-elements"], [700, "inserting-sequences-of-elements"], [714, "inserting-sequences-of-elements"], [728, "inserting-sequences-of-elements"]], "Emplacing elements": [[597, "emplacing-elements"], [614, "emplacing-elements"], [628, "emplacing-elements"], [642, "emplacing-elements"], [671, "emplacing-elements"], [686, "emplacing-elements"], [700, "emplacing-elements"], [714, "emplacing-elements"], [728, "emplacing-elements"]], "Erasing elements": [[597, "erasing-elements"], [616, "erasing-elements"], [630, "erasing-elements"], [644, "erasing-elements"], [673, "erasing-elements"], [688, "erasing-elements"], [702, "erasing-elements"], [716, "erasing-elements"], [730, "erasing-elements"]], "Parallel iteration": [[600, "parallel-iteration"], [613, "parallel-iteration"], [627, "parallel-iteration"], [641, "parallel-iteration"], [670, "parallel-iteration"], [685, "parallel-iteration"], [699, "parallel-iteration"], [713, "parallel-iteration"], [727, "parallel-iteration"], [740, "parallel-iteration"]], "range member function": [[600, "range-member-function"], [613, "range-member-function"], [627, "range-member-function"], [641, "range-member-function"], [670, "range-member-function"], [685, "range-member-function"], [699, "range-member-function"], [713, "range-member-function"], [727, "range-member-function"], [740, "range-member-function"]], "Size and capacity": [[601, "size-and-capacity"], [615, "size-and-capacity"], [629, "size-and-capacity"], [643, "size-and-capacity"], [651, "size-and-capacity"], [672, "size-and-capacity"], [687, "size-and-capacity"], [701, "size-and-capacity"], [715, "size-and-capacity"], [729, "size-and-capacity"], [741, "size-and-capacity"], [856, "size-and-capacity"]], "empty": [[601, "empty"], [615, "empty"], [629, "empty"], [643, "empty"], [651, "empty"], [672, "empty"], [687, "empty"], [701, "empty"], [715, "empty"], [729, "empty"], [741, "empty"]], "size": [[601, "size"], [615, "size"], [629, "size"], [643, "size"], [651, "size"], [672, "size"], [687, "size"], [701, "size"], [715, "size"], [729, "size"], [741, "size"]], "max_size": [[601, "max-size"], [615, "max-size"], [629, "max-size"], [643, "max-size"], [672, "max-size"], [687, "max-size"], [701, "max-size"], [715, "max-size"], [729, "max-size"], [741, "max-size"]], "Concurrently unsafe modifiers": [[602, "concurrently-unsafe-modifiers"], [616, "concurrently-unsafe-modifiers"], [630, "concurrently-unsafe-modifiers"], [644, "concurrently-unsafe-modifiers"], [652, "concurrently-unsafe-modifiers"], [673, "concurrently-unsafe-modifiers"], [688, "concurrently-unsafe-modifiers"], [702, "concurrently-unsafe-modifiers"], [716, "concurrently-unsafe-modifiers"], [730, "concurrently-unsafe-modifiers"], [857, "concurrently-unsafe-modifiers"]], "concurrent_map": [[603, "concurrent-map"]], "Element access": [[606, "element-access"], [678, "element-access"], [735, "element-access"]], "at": [[606, "at"], [678, "at"]], "operator[]": [[606, "operator"], [678, "operator"]], "contains": [[608, "contains"], [622, "contains"], [636, "contains"], [665, "contains"], [681, "contains"], [695, "contains"], [709, "contains"], [723, "contains"]], "lower_bound": [[608, "lower-bound"], [622, "lower-bound"], [636, "lower-bound"], [665, "lower-bound"]], "upper_bound": [[608, "upper-bound"], [622, "upper-bound"], [636, "upper-bound"], [665, "upper-bound"]], "Non-member lexicographical comparisons": [[610, "non-member-lexicographical-comparisons"], [624, "non-member-lexicographical-comparisons"], [638, "non-member-lexicographical-comparisons"], [667, "non-member-lexicographical-comparisons"], [738, "non-member-lexicographical-comparisons"]], "Observers": [[612, "observers"], [626, "observers"], [640, "observers"], [669, "observers"], [684, "observers"], [698, "observers"], [712, "observers"], [726, "observers"]], "key_comp": [[612, "key-comp"], [626, "key-comp"], [640, "key-comp"], [669, "key-comp"]], "value_comp": [[612, "value-comp"], [626, "value-comp"], [640, "value-comp"], [669, "value-comp"]], "Inserting nodes": [[614, "inserting-nodes"], [628, "inserting-nodes"], [642, "inserting-nodes"], [671, "inserting-nodes"], [686, "inserting-nodes"], [700, "inserting-nodes"], [714, "inserting-nodes"], [728, "inserting-nodes"]], "Clearing": [[616, "clearing"], [630, "clearing"], [644, "clearing"], [673, "clearing"], [688, "clearing"], [702, "clearing"], [716, "clearing"], [730, "clearing"]], "Erasing sequences": [[616, "erasing-sequences"], [630, "erasing-sequences"], [644, "erasing-sequences"], [673, "erasing-sequences"], [688, "erasing-sequences"], [702, "erasing-sequences"], [716, "erasing-sequences"], [730, "erasing-sequences"]], "Extracting nodes": [[616, "extracting-nodes"], [630, "extracting-nodes"], [644, "extracting-nodes"], [673, "extracting-nodes"], [688, "extracting-nodes"], [702, "extracting-nodes"], [716, "extracting-nodes"], [730, "extracting-nodes"]], "value_compare": [[617, "value-compare"], [631, "value-compare"]], "Class Synopsis": [[617, "class-synopsis"], [631, "class-synopsis"]], "Member objects": [[617, "member-objects"], [631, "member-objects"]], "concurrent_multimap": [[618, "concurrent-multimap"]], "Merging containers": [[628, "merging-containers"], [642, "merging-containers"], [671, "merging-containers"], [700, "merging-containers"], [714, "merging-containers"], [728, "merging-containers"]], "concurrent_multiset": [[632, "concurrent-multiset"]], "concurrent_priority_queue": [[645, "concurrent-priority-queue"]], "concurrent_queue": [[653, "concurrent-queue"]], "concurrent_set": [[661, "concurrent-set"]], "concurrent_unordered_map": [[674, "concurrent-unordered-map"]], "Description": [[674, "description"], [689, "description"], [703, "description"], [717, "description"], [731, "description"]], "Bucket interface": [[675, "bucket-interface"], [690, "bucket-interface"], [704, "bucket-interface"], [718, "bucket-interface"]], "Bucket begin and bucket end": [[675, "bucket-begin-and-bucket-end"], [690, "bucket-begin-and-bucket-end"], [704, "bucket-begin-and-bucket-end"], [718, "bucket-begin-and-bucket-end"]], "The number of buckets": [[675, "the-number-of-buckets"], [690, "the-number-of-buckets"], [704, "the-number-of-buckets"], [718, "the-number-of-buckets"]], "Size of the bucket": [[675, "size-of-the-bucket"], [690, "size-of-the-bucket"], [704, "size-of-the-bucket"], [718, "size-of-the-bucket"]], "Bucket number": [[675, "bucket-number"], [690, "bucket-number"], [704, "bucket-number"], [718, "bucket-number"]], "Load factor": [[679, "load-factor"], [693, "load-factor"], [707, "load-factor"], [721, "load-factor"]], "Manual rehashing": [[679, "manual-rehashing"], [693, "manual-rehashing"], [707, "manual-rehashing"], [721, "manual-rehashing"]], "hash_function": [[684, "hash-function"], [698, "hash-function"], [712, "hash-function"], [726, "hash-function"]], "key_eq": [[684, "key-eq"], [698, "key-eq"], [712, "key-eq"], [726, "key-eq"]], "concurrent_unordered_multimap": [[689, "concurrent-unordered-multimap"]], "concurrent_unordered_multiset": [[703, "concurrent-unordered-multiset"]], "concurrent_unordered_set": [[717, "concurrent-unordered-set"]], "concurrent_vector": [[731, "concurrent-vector"]], "Exception Safety": [[731, "exception-safety"]], "Concurrent growth": [[732, "concurrent-growth"]], "grow_by": [[732, "grow-by"]], "grow_to_at_least": [[732, "grow-to-at-least"]], "push_back": [[732, "push-back"]], "emplace_back": [[732, "emplace-back"]], "Access by index": [[735, "access-by-index"]], "Access the first and the last element": [[735, "access-the-first-and-the-last-element"]], "rbegin and crbegin": [[736, "rbegin-and-crbegin"]], "rend and crend": [[736, "rend-and-crend"]], "capacity": [[741, "capacity"]], "Concurrently unsafe operations": [[742, "concurrently-unsafe-operations"]], "Reserving": [[742, "reserving"]], "Resizing": [[742, "resizing"]], "shrink_to_fit": [[742, "shrink-to-fit"]], "task_arena::attach": [[743, "task-arena-attach"]], "Member types and constants": [[743, "member-types-and-constants"], [839, "member-types-and-constants"], [841, "member-types-and-constants"], [843, "member-types-and-constants"]], "Flow Graph": [[744, "flow-graph"], [802, "flow-graph"]], "Graph Class": [[744, "graph-class"]], "Nodes": [[744, "nodes"]], "Abstract Interfaces": [[744, "abstract-interfaces"]], "Properties": [[744, "properties"]], "Functional Nodes": [[744, "functional-nodes"]], "Buffering Nodes": [[744, "buffering-nodes"]], "Service Nodes": [[744, "service-nodes"]], "Ports and Edges": [[744, "ports-and-edges"]], "Special Messages Types": [[744, "special-messages-types"]], "async_node": [[745, "async-node"]], "broadcast_node": [[746, "broadcast-node"]], "buffer_node": [[747, "buffer-node"]], "composite_node": [[748, "composite-node"]], "continue_msg": [[749, "continue-msg"]], "continue_node": [[750, "continue-node"]], "copy_body": [[751, "copy-body"]], "Dependency Flow Graph Example": [[752, "dependency-flow-graph-example"]], "Forwarding and Buffering": [[753, "forwarding-and-buffering"]], "Forwarding": [[753, "forwarding"]], "Buffering": [[753, "buffering"]], "Buffering and Forwarding properties summary": [[753, "id1"]], "function_node": [[754, "function-node"]], "Function Nodes Policies": [[755, "function-nodes-policies"]], "Queueing": [[755, "queueing"]], "Rejecting": [[755, "rejecting"]], "Lightweight": [[755, "lightweight"]], "graph": [[756, "graph"]], "reset_flags enumeration": [[756, "reset-flags-enumeration"]], "graph_node": [[757, "graph-node"]], "indexer_node": [[758, "indexer-node"]], "input_node": [[759, "input-node"]], "input_port": [[760, "input-port"]], "join_node": [[761, "join-node"]], "Non-Member Types": [[761, "non-member-types"]], "join_node Policies": [[762, "join-node-policies"]], "limiter_node": [[763, "limiter-node"]], "make_edge": [[764, "make-edge"]], "Message Flow Graph Example": [[765, "message-flow-graph-example"]], "multifunction_node": [[766, "multifunction-node"]], "Nodes Priorities": [[767, "nodes-priorities"]], "output_port": [[768, "output-port"]], "overwrite_node": [[769, "overwrite-node"]], "Predefined Concurrency Limits": [[770, "predefined-concurrency-limits"]], "priority_queue_node": [[771, "priority-queue-node"]], "queue_node": [[772, "queue-node"]], "receiver": [[773, "receiver"]], "remove_edge": [[774, "remove-edge"]], "reset_flags Enumeration": [[775, "reset-flags-enumeration"]], "sender": [[776, "sender"]], "sequencer_node": [[777, "sequencer-node"]], "split_node": [[778, "split-node"]], "tagged_msg": [[779, "tagged-msg"]], "write_once_node": [[780, "write-once-node"]], "Identifiers": [[781, "identifiers"]], "Case": [[781, "case"]], "Reserved Identifier Prefixes": [[781, "reserved-identifier-prefixes"]], "info Namespace": [[782, "info-namespace"]], "Types": [[782, "types"]], "Functions": [[782, "functions"]], "Memory Allocation": [[784, "memory-allocation"]], "Allocators": [[784, "allocators"]], "Memory Resources": [[784, "memory-resources"]], "Library Functions": [[784, "library-functions"]], "C Interface to Scalable Allocator": [[785, "c-interface-to-scalable-allocator"], [785, "id1"]], "cache_aligned_allocator": [[786, "cache-aligned-allocator"]], "Non-member Functions": [[786, "non-member-functions"], [788, "non-member-functions"], [790, "non-member-functions"], [842, "non-member-functions"]], "cache_aligned_resource": [[787, "cache-aligned-resource"]], "scalable_allocator": [[788, "scalable-allocator"]], "scalable_memory_resource": [[789, "scalable-memory-resource"]], "tbb_allocator": [[790, "tbb-allocator"]], "Mutual Exclusion": [[791, "mutual-exclusion"]], "Mutex Classes": [[791, "mutex-classes"]], "mutex": [[792, "mutex"]], "null_mutex": [[793, "null-mutex"]], "null_rw_mutex": [[794, "null-rw-mutex"]], "queuing_mutex": [[795, "queuing-mutex"]], "queuing_rw_mutex": [[796, "queuing-rw-mutex"]], "rw_mutex": [[797, "rw-mutex"]], "speculative_spin_mutex": [[798, "speculative-spin-mutex"]], "speculative_spin_rw_mutex": [[799, "speculative-spin-rw-mutex"]], "spin_mutex": [[800, "spin-mutex"]], "spin_rw_mutex": [[801, "spin-rw-mutex"]], "Named Requirements": [[802, "named-requirements"]], "Mutexes": [[802, "mutexes"]], "Task scheduler": [[802, "task-scheduler"]], "BlockedRangeValue": [[803, "blockedrangevalue"]], "ContainerBasedSequence": [[804, "containerbasedsequence"]], "FilterBody": [[805, "filterbody"]], "ParallelForBody": [[806, "parallelforbody"]], "ParallelForEachBody": [[807, "parallelforeachbody"]], "Terms": [[807, "terms"]], "ParallelForFunc": [[808, "parallelforfunc"]], "ParallelForIndex": [[809, "parallelforindex"]], "ParallelReduceBody": [[810, "parallelreducebody"]], "ParallelReduceFunc": [[811, "parallelreducefunc"]], "ParallelReduceReduction": [[812, "parallelreducereduction"]], "ParallelScanBody": [[813, "parallelscanbody"]], "ParallelScanCombine": [[814, "parallelscancombine"]], "ParallelScanFunc": [[815, "parallelscanfunc"]], "Splittable": [[817, "splittable"]], "ContainerRange": [[818, "containerrange"]], "HashCompare": [[819, "hashcompare"]], "AsyncNodeBody": [[820, "asyncnodebody"]], "ContinueNodeBody": [[821, "continuenodebody"]], "FunctionNodeBody": [[822, "functionnodebody"]], "GatewayType": [[823, "gatewaytype"]], "InputNodeBody": [[824, "inputnodebody"]], "JoinNodeFunctionObject": [[825, "joinnodefunctionobject"]], "MultifunctionNodeBody": [[826, "multifunctionnodebody"]], "Sequencer": [[827, "sequencer"]], "Mutex": [[828, "mutex"]], "Provided guarantees for Mutexes that model the Mutex requirement": [[828, "id1"]], "ReaderWriterMutex": [[829, "readerwritermutex"]], "Provided guarantees for Mutexes that model the ReaderWriterMutex requirement": [[829, "id1"]], "SuspendFunc": [[830, "suspendfunc"]], "oneTBB Auxiliary Interfaces": [[831, "onetbb-auxiliary-interfaces"]], "oneTBB Deprecated Interfaces": [[832, "onetbb-deprecated-interfaces"]], "General Information": [[833, "general-information"]], "oneTBB": [[834, "onetbb"]], "oneTBB Interfaces": [[835, "onetbb-interfaces"]], "Notational Conventions": [[836, "notational-conventions"]], "Task Scheduler": [[837, "task-scheduler"]], "Scheduling controls": [[837, "scheduling-controls"]], "Task Group": [[837, "task-group"]], "Task Arena": [[837, "task-arena"]], "Helper types": [[837, "helper-types"]], "attach tag type": [[838, "attach-tag-type"]], "global_control": [[839, "global-control"]], "Resumable tasks": [[840, "resumable-tasks"]], "task_group_context": [[841, "task-group-context"]], "task_scheduler_handle": [[842, "task-scheduler-handle"]], "task_arena": [[843, "task-arena"]], "task_scheduler_observer": [[844, "task-scheduler-observer"]], "this_task_arena": [[845, "this-task-arena"]], "task_group": [[846, "task-group"]], "task_group_status": [[847, "task-group-status"]], "Member constants": [[847, "member-constants"]], "task_handle": [[848, "task-handle"]], "Thread Local Storage": [[849, "thread-local-storage"]], "combinable": [[850, "combinable"]], "enumerable_thread_specific": [[851, "enumerable-thread-specific"]], "Non-member types and constants": [[851, "non-member-types-and-constants"]], "Combining": [[852, "combining"]], "Iteration": [[854, "iteration"]], "flattened2d": [[858, "flattened2d"]], "Thread Safety": [[859, "thread-safety"]], "Timing": [[860, "timing"]], "Syntax": [[860, "syntax"]], "Classes": [[860, "classes"]], "tick_count class": [[861, "tick-count-class"]], "tick_count::interval_t class": [[861, "tick-count-interval-t-class"]], "oneAPI Specification": [[862, "oneapi-specification"]], "Target Audience": [[863, "target-audience"]], "Goals of the Specification": [[863, "goals-of-the-specification"]], "Contribution Guidelines": [[863, "contribution-guidelines"]], "Legal Notices and Disclaimers": [[864, "legal-notices-and-disclaimers"]]}, "indexentries": {"oneapi::dal::kmeans::descriptor (c++ class)": [[20, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE"]], "oneapi::dal::kmeans::descriptor::accuracy_threshold (c++ member)": [[20, "_CPPv4N6oneapi3dal6kmeans10descriptor18accuracy_thresholdE"]], "oneapi::dal::kmeans::descriptor::cluster_count (c++ member)": [[20, "_CPPv4N6oneapi3dal6kmeans10descriptor13cluster_countE"]], "oneapi::dal::kmeans::descriptor::descriptor (c++ function)": [[20, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::kmeans::descriptor::max_iteration_count (c++ member)": [[20, "_CPPv4N6oneapi3dal6kmeans10descriptor19max_iteration_countE"]], "oneapi::dal::kmeans::infer (c++ function)": [[20, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE"]], "oneapi::dal::kmeans::infer_input (c++ class)": [[20, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE"]], "oneapi::dal::kmeans::infer_input::data (c++ member)": [[20, "_CPPv4N6oneapi3dal6kmeans11infer_input4dataE"]], "oneapi::dal::kmeans::infer_input::infer_input (c++ function)": [[20, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::kmeans::infer_input::model (c++ member)": [[20, "_CPPv4N6oneapi3dal6kmeans11infer_input5modelE"]], "oneapi::dal::kmeans::infer_result (c++ class)": [[20, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE"]], "oneapi::dal::kmeans::infer_result::get_labels (c++ function)": [[20, "_CPPv4NK6oneapi3dal6kmeans12infer_result10get_labelsEv"]], "oneapi::dal::kmeans::infer_result::get_objective_function_value (c++ function)": [[20, "_CPPv4NK6oneapi3dal6kmeans12infer_result28get_objective_function_valueEv"]], "oneapi::dal::kmeans::infer_result::infer_result (c++ function)": [[20, "_CPPv4N6oneapi3dal6kmeans12infer_result12infer_resultEv"]], "oneapi::dal::kmeans::method::by_default (c++ type)": [[20, "_CPPv4N6oneapi3dal6kmeans6method10by_defaultE"]], "oneapi::dal::kmeans::method::lloyd (c++ struct)": [[20, "_CPPv4N6oneapi3dal6kmeans6method5lloydE"]], "oneapi::dal::kmeans::model (c++ class)": [[20, "_CPPv4I0EN6oneapi3dal6kmeans5modelE"]], "oneapi::dal::kmeans::model::get_centroids (c++ function)": [[20, "_CPPv4NK6oneapi3dal6kmeans5model13get_centroidsEv"]], "oneapi::dal::kmeans::model::get_cluster_count (c++ function)": [[20, "_CPPv4NK6oneapi3dal6kmeans5model17get_cluster_countEv"]], "oneapi::dal::kmeans::model::model (c++ function)": [[20, "_CPPv4N6oneapi3dal6kmeans5model5modelEv"]], "oneapi::dal::kmeans::task::by_default (c++ type)": [[20, "_CPPv4N6oneapi3dal6kmeans4task10by_defaultE"]], "oneapi::dal::kmeans::task::clustering (c++ struct)": [[20, "_CPPv4N6oneapi3dal6kmeans4task10clusteringE"]], "oneapi::dal::kmeans::train (c++ function)": [[20, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE"]], "oneapi::dal::kmeans::train_input (c++ class)": [[20, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE"]], "oneapi::dal::kmeans::train_input::data (c++ member)": [[20, "_CPPv4N6oneapi3dal6kmeans11train_input4dataE"]], "oneapi::dal::kmeans::train_input::initial_centroids (c++ member)": [[20, "_CPPv4N6oneapi3dal6kmeans11train_input17initial_centroidsE"]], "oneapi::dal::kmeans::train_input::train_input (c++ function)": [[20, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table"]], "oneapi::dal::kmeans::train_result (c++ class)": [[20, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE"]], "oneapi::dal::kmeans::train_result::get_iteration_count (c++ function)": [[20, "_CPPv4NK6oneapi3dal6kmeans12train_result19get_iteration_countEv"]], "oneapi::dal::kmeans::train_result::get_labels (c++ function)": [[20, "_CPPv4NK6oneapi3dal6kmeans12train_result10get_labelsEv"]], "oneapi::dal::kmeans::train_result::get_model (c++ function)": [[20, "_CPPv4NK6oneapi3dal6kmeans12train_result9get_modelEv"]], "oneapi::dal::kmeans::train_result::get_objective_function_value (c++ function)": [[20, "_CPPv4NK6oneapi3dal6kmeans12train_result28get_objective_function_valueEv"]], "oneapi::dal::kmeans::train_result::train_result (c++ function)": [[20, "_CPPv4N6oneapi3dal6kmeans12train_result12train_resultEv"]], "oneapi::dal::kmeans_init::compute (c++ function)": [[21, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE"]], "oneapi::dal::kmeans_init::compute_input (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE"]], "oneapi::dal::kmeans_init::compute_input::compute_input (c++ function)": [[21, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table"]], "oneapi::dal::kmeans_init::compute_input::data (c++ member)": [[21, "_CPPv4N6oneapi3dal11kmeans_init13compute_input4dataE"]], "oneapi::dal::kmeans_init::compute_result (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE"]], "oneapi::dal::kmeans_init::compute_result::compute_result (c++ function)": [[21, "_CPPv4N6oneapi3dal11kmeans_init14compute_result14compute_resultEv"]], "oneapi::dal::kmeans_init::compute_result::get_centroids (c++ function)": [[21, "_CPPv4NK6oneapi3dal11kmeans_init14compute_result13get_centroidsEv"]], "oneapi::dal::kmeans_init::descriptor (c++ class)": [[21, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE"]], "oneapi::dal::kmeans_init::descriptor::cluster_count (c++ member)": [[21, "_CPPv4N6oneapi3dal11kmeans_init10descriptor13cluster_countE"]], "oneapi::dal::kmeans_init::descriptor::descriptor (c++ function)": [[21, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::kmeans_init::method::by_default (c++ type)": [[21, "_CPPv4N6oneapi3dal11kmeans_init6method10by_defaultE"]], "oneapi::dal::kmeans_init::method::dense (c++ struct)": [[21, "_CPPv4N6oneapi3dal11kmeans_init6method5denseE"]], "oneapi::dal::kmeans_init::task::by_default (c++ type)": [[21, "_CPPv4N6oneapi3dal11kmeans_init4task10by_defaultE"]], "oneapi::dal::kmeans_init::task::init (c++ struct)": [[21, "_CPPv4N6oneapi3dal11kmeans_init4task4initE"]], "oneapi::dal::pca::descriptor (c++ class)": [[23, "_CPPv4I000EN6oneapi3dal3pca10descriptorE"]], "oneapi::dal::pca::descriptor::component_count (c++ member)": [[23, "_CPPv4N6oneapi3dal3pca10descriptor15component_countE"]], "oneapi::dal::pca::descriptor::descriptor (c++ function)": [[23, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::pca::descriptor::deterministic (c++ member)": [[23, "_CPPv4N6oneapi3dal3pca10descriptor13deterministicE"]], "oneapi::dal::pca::infer (c++ function)": [[23, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE"]], "oneapi::dal::pca::infer_input (c++ class)": [[23, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE"]], "oneapi::dal::pca::infer_input::data (c++ member)": [[23, "_CPPv4N6oneapi3dal3pca11infer_input4dataE"]], "oneapi::dal::pca::infer_input::infer_input (c++ function)": [[23, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::pca::infer_input::model (c++ member)": [[23, "_CPPv4N6oneapi3dal3pca11infer_input5modelE"]], "oneapi::dal::pca::infer_result (c++ class)": [[23, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE"]], "oneapi::dal::pca::infer_result::get_transformed_data (c++ function)": [[23, "_CPPv4NK6oneapi3dal3pca12infer_result20get_transformed_dataEv"]], "oneapi::dal::pca::infer_result::infer_result (c++ function)": [[23, "_CPPv4N6oneapi3dal3pca12infer_result12infer_resultEv"]], "oneapi::dal::pca::method::by_default (c++ type)": [[23, "_CPPv4N6oneapi3dal3pca6method10by_defaultE"]], "oneapi::dal::pca::method::cov (c++ struct)": [[23, "_CPPv4N6oneapi3dal3pca6method3covE"]], "oneapi::dal::pca::method::svd (c++ struct)": [[23, "_CPPv4N6oneapi3dal3pca6method3svdE"]], "oneapi::dal::pca::model (c++ class)": [[23, "_CPPv4I0EN6oneapi3dal3pca5modelE"]], "oneapi::dal::pca::model::get_component_count (c++ function)": [[23, "_CPPv4NK6oneapi3dal3pca5model19get_component_countEv"]], "oneapi::dal::pca::model::get_eigenvectors (c++ function)": [[23, "_CPPv4NK6oneapi3dal3pca5model16get_eigenvectorsEv"]], "oneapi::dal::pca::model::model (c++ function)": [[23, "_CPPv4N6oneapi3dal3pca5model5modelEv"]], "oneapi::dal::pca::task::by_default (c++ type)": [[23, "_CPPv4N6oneapi3dal3pca4task10by_defaultE"]], "oneapi::dal::pca::task::dim_reduction (c++ struct)": [[23, "_CPPv4N6oneapi3dal3pca4task13dim_reductionE"]], "oneapi::dal::pca::train (c++ function)": [[23, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE"]], "oneapi::dal::pca::train_input (c++ class)": [[23, "_CPPv4I0EN6oneapi3dal3pca11train_inputE"]], "oneapi::dal::pca::train_input::data (c++ member)": [[23, "_CPPv4N6oneapi3dal3pca11train_input4dataE"]], "oneapi::dal::pca::train_input::train_input (c++ function)": [[23, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table"]], "oneapi::dal::pca::train_result (c++ class)": [[23, "_CPPv4I0EN6oneapi3dal3pca12train_resultE"]], "oneapi::dal::pca::train_result::get_eigenvalues (c++ function)": [[23, "_CPPv4NK6oneapi3dal3pca12train_result15get_eigenvaluesEv"]], "oneapi::dal::pca::train_result::get_eigenvectors (c++ function)": [[23, "_CPPv4NK6oneapi3dal3pca12train_result16get_eigenvectorsEv"]], "oneapi::dal::pca::train_result::get_means (c++ function)": [[23, "_CPPv4NK6oneapi3dal3pca12train_result9get_meansEv"]], "oneapi::dal::pca::train_result::get_model (c++ function)": [[23, "_CPPv4NK6oneapi3dal3pca12train_result9get_modelEv"]], "oneapi::dal::pca::train_result::get_variances (c++ function)": [[23, "_CPPv4NK6oneapi3dal3pca12train_result13get_variancesEv"]], "oneapi::dal::pca::train_result::train_result (c++ function)": [[23, "_CPPv4N6oneapi3dal3pca12train_result12train_resultEv"]], "oneapi::dal::knn::descriptor (c++ class)": [[26, "_CPPv4I000EN6oneapi3dal3knn10descriptorE"]], "oneapi::dal::knn::descriptor::class_count (c++ member)": [[26, "_CPPv4N6oneapi3dal3knn10descriptor11class_countE"]], "oneapi::dal::knn::descriptor::descriptor (c++ function)": [[26, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE"]], "oneapi::dal::knn::descriptor::neighbor_count (c++ member)": [[26, "_CPPv4N6oneapi3dal3knn10descriptor14neighbor_countE"]], "oneapi::dal::knn::infer (c++ function)": [[26, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE"]], "oneapi::dal::knn::infer_input (c++ class)": [[26, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE"]], "oneapi::dal::knn::infer_input::data (c++ member)": [[26, "_CPPv4N6oneapi3dal3knn11infer_input4dataE"]], "oneapi::dal::knn::infer_input::infer_input (c++ function)": [[26, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::knn::infer_input::model (c++ member)": [[26, "_CPPv4N6oneapi3dal3knn11infer_input5modelE"]], "oneapi::dal::knn::infer_result (c++ class)": [[26, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE"]], "oneapi::dal::knn::infer_result::get_labels (c++ function)": [[26, "_CPPv4NK6oneapi3dal3knn12infer_result10get_labelsEv"]], "oneapi::dal::knn::infer_result::infer_result (c++ function)": [[26, "_CPPv4N6oneapi3dal3knn12infer_result12infer_resultEv"]], "oneapi::dal::knn::method::bruteforce (c++ struct)": [[26, "_CPPv4N6oneapi3dal3knn6method10bruteforceE"]], "oneapi::dal::knn::method::by_default (c++ type)": [[26, "_CPPv4N6oneapi3dal3knn6method10by_defaultE"]], "oneapi::dal::knn::method::kd_tree (c++ struct)": [[26, "_CPPv4N6oneapi3dal3knn6method7kd_treeE"]], "oneapi::dal::knn::model (c++ class)": [[26, "_CPPv4I0EN6oneapi3dal3knn5modelE"]], "oneapi::dal::knn::model::model (c++ function)": [[26, "_CPPv4N6oneapi3dal3knn5model5modelEv"]], "oneapi::dal::knn::task::by_default (c++ type)": [[26, "_CPPv4N6oneapi3dal3knn4task10by_defaultE"]], "oneapi::dal::knn::task::classification (c++ struct)": [[26, "_CPPv4N6oneapi3dal3knn4task14classificationE"]], "oneapi::dal::knn::train (c++ function)": [[26, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE"]], "oneapi::dal::knn::train_input (c++ class)": [[26, "_CPPv4I0EN6oneapi3dal3knn11train_inputE"]], "oneapi::dal::knn::train_input::data (c++ member)": [[26, "_CPPv4N6oneapi3dal3knn11train_input4dataE"]], "oneapi::dal::knn::train_input::labels (c++ member)": [[26, "_CPPv4N6oneapi3dal3knn11train_input6labelsE"]], "oneapi::dal::knn::train_input::train_input (c++ function)": [[26, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table"]], "oneapi::dal::knn::train_result (c++ class)": [[26, "_CPPv4I0EN6oneapi3dal3knn12train_resultE"]], "oneapi::dal::knn::train_result::get_model (c++ function)": [[26, "_CPPv4NK6oneapi3dal3knn12train_result9get_modelEv"]], "oneapi::dal::knn::train_result::train_result (c++ function)": [[26, "_CPPv4N6oneapi3dal3knn12train_result12train_resultEv"]], "oneapi::dal::data_type (c++ enum)": [[30, "_CPPv4N6oneapi3dal9data_typeE"]], "oneapi::dal::range (c++ struct)": [[30, "_CPPv4N6oneapi3dal5rangeE"]], "oneapi::dal::range::get_element_count (c++ function)": [[30, "_CPPv4NK6oneapi3dal5range17get_element_countENSt7int64_tE"]], "oneapi::dal::range::range (c++ function)": [[30, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE"]], "oneapi::dal::column_accessor (c++ class)": [[35, "_CPPv4I0EN6oneapi3dal15column_accessorE"]], "oneapi::dal::column_accessor::column_accessor (c++ function)": [[35, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERK5table"]], "oneapi::dal::column_accessor::pull (c++ function)": [[35, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE"], [35, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE"]], "oneapi::dal::row_accessor (c++ class)": [[36, "_CPPv4I0EN6oneapi3dal12row_accessorE"]], "oneapi::dal::row_accessor::pull (c++ function)": [[36, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE"], [36, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE"]], "oneapi::dal::row_accessor::row_accessor (c++ function)": [[36, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERK5table"]], "oneapi::dal::array (c++ class)": [[38, "_CPPv4I0EN6oneapi3dal5arrayE"]], "oneapi::dal::array::array (c++ function)": [[38, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE"], [38, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE"], [38, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI4DataE"], [38, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI4DataE"], [38, "_CPPv4N6oneapi3dal5array5arrayEv"]], "oneapi::dal::array::empty (c++ function)": [[38, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE"]], "oneapi::dal::array::full (c++ function)": [[38, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE"]], "oneapi::dal::array::get_count (c++ function)": [[38, "_CPPv4NK6oneapi3dal5array9get_countEv"]], "oneapi::dal::array::get_data (c++ function)": [[38, "_CPPv4NK6oneapi3dal5array8get_dataEv"]], "oneapi::dal::array::get_mutable_data (c++ function)": [[38, "_CPPv4NK6oneapi3dal5array16get_mutable_dataEv"]], "oneapi::dal::array::get_size (c++ function)": [[38, "_CPPv4NK6oneapi3dal5array8get_sizeEv"]], "oneapi::dal::array::has_mutable_data (c++ function)": [[38, "_CPPv4NK6oneapi3dal5array16has_mutable_dataEv"]], "oneapi::dal::array::need_mutable_data (c++ function)": [[38, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE"]], "oneapi::dal::array::operator= (c++ function)": [[38, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI4DataE"], [38, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI4DataE"]], "oneapi::dal::array::operator[] (c++ function)": [[38, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE"]], "oneapi::dal::array::reset (c++ function)": [[38, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE"], [38, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE"], [38, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE"], [38, "_CPPv4N6oneapi3dal5array5resetEv"]], "oneapi::dal::array::wrap (c++ function)": [[38, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE"]], "oneapi::dal::array::zeros (c++ function)": [[38, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE"]], "oneapi::dal::csv::data_source (c++ class)": [[39, "_CPPv4N6oneapi3dal3csv11data_sourceE"]], "oneapi::dal::csv::data_source::data_source (c++ function)": [[39, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options"], [39, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options"]], "oneapi::dal::csv::data_source::delimiter (c++ member)": [[39, "_CPPv4N6oneapi3dal3csv11data_source9delimiterE"]], "oneapi::dal::csv::data_source::file_name (c++ member)": [[39, "_CPPv4N6oneapi3dal3csv11data_source9file_nameE"]], "oneapi::dal::csv::data_source::options (c++ member)": [[39, "_CPPv4N6oneapi3dal3csv11data_source7optionsE"]], "oneapi::dal::csv::read_args (c++ class)": [[39, "_CPPv4I0EN6oneapi3dal3csv9read_argsE"]], "oneapi::dal::csv::read_args::read_args (c++ function)": [[39, "_CPPv4N6oneapi3dal3csv9read_args9read_argsEv"]], "oneapi::dal::read (c++ function)": [[39, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource"]], "oneapi::dal::homogen_table (c++ class)": [[42, "_CPPv4N6oneapi3dal13homogen_tableE"]], "oneapi::dal::homogen_table::get_data (c++ function)": [[42, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav"], [42, "_CPPv4NK6oneapi3dal13homogen_table8get_dataEv"]], "oneapi::dal::homogen_table::get_kind (c++ function)": [[42, "_CPPv4NK6oneapi3dal13homogen_table8get_kindEv"]], "oneapi::dal::homogen_table::homogen_table (c++ function)": [[42, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout"], [42, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableEv"]], "oneapi::dal::homogen_table::kind (c++ function)": [[42, "_CPPv4N6oneapi3dal13homogen_table4kindEv"]], "oneapi::dal::homogen_table::wrap (c++ function)": [[42, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout"]], "oneapi::dal::data_layout (c++ enum)": [[43, "_CPPv4N6oneapi3dal11data_layoutE"]], "oneapi::dal::feature_type (c++ enum)": [[43, "_CPPv4N6oneapi3dal12feature_typeE"]], "oneapi::dal::table (c++ class)": [[43, "_CPPv4N6oneapi3dal5tableE"]], "oneapi::dal::table::get_column_count (c++ function)": [[43, "_CPPv4NK6oneapi3dal5table16get_column_countEv"]], "oneapi::dal::table::get_data_layout (c++ function)": [[43, "_CPPv4NK6oneapi3dal5table15get_data_layoutEv"]], "oneapi::dal::table::get_kind (c++ function)": [[43, "_CPPv4NK6oneapi3dal5table8get_kindEv"]], "oneapi::dal::table::get_metadata (c++ function)": [[43, "_CPPv4NK6oneapi3dal5table12get_metadataEv"]], "oneapi::dal::table::get_row_count (c++ function)": [[43, "_CPPv4NK6oneapi3dal5table13get_row_countEv"]], "oneapi::dal::table::has_data (c++ function)": [[43, "_CPPv4NK6oneapi3dal5table8has_dataEv"]], "oneapi::dal::table::operator= (c++ function)": [[43, "_CPPv4N6oneapi3dal5tableaSERK5table"], [43, "_CPPv4N6oneapi3dal5tableaSERR5table"]], "oneapi::dal::table::table (c++ function)": [[43, "_CPPv4N6oneapi3dal5table5tableERK5table"], [43, "_CPPv4N6oneapi3dal5table5tableERR5table"], [43, "_CPPv4N6oneapi3dal5table5tableEv"]], "oneapi::dal::table_metadata (c++ class)": [[43, "_CPPv4N6oneapi3dal14table_metadataE"]], "oneapi::dal::table_metadata::get_data_type (c++ function)": [[43, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE"]], "oneapi::dal::table_metadata::get_feature_count (c++ function)": [[43, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_countEv"]], "oneapi::dal::table_metadata::get_feature_type (c++ function)": [[43, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE"]], "oneapi::dal::table_metadata::table_metadata (c++ function)": [[43, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE"], [43, "_CPPv4N6oneapi3dal14table_metadata14table_metadataEv"]], "api": [[44, "term-API"]], "accessor": [[44, "term-Accessor"]], "batch mode": [[44, "term-Batch-mode"]], "builder": [[44, "term-Builder"]], "csv file": [[44, "term-CSV-file"]], "categorical feature": [[44, "term-Categorical-feature"]], "classification": [[44, "term-Classification"]], "clustering": [[44, "term-Clustering"]], "contiguous data": [[44, "term-Contiguous-data"]], "continuous feature": [[44, "term-Continuous-feature"]], "dpc++": [[44, "term-DPC"]], "data format": [[44, "term-Data-format"]], "data layout": [[44, "term-Data-layout"]], "data type": [[44, "term-Data-type"]], "dataset": [[44, "term-Dataset"]], "dimensionality reduction": [[44, "term-Dimensionality-reduction"]], "feature": [[44, "term-Feature"]], "feature vector": [[44, "term-Feature-vector"]], "flat data": [[44, "term-Flat-data"]], "getter": [[44, "term-Getter"]], "heterogeneous data": [[44, "term-Heterogeneous-data"]], "homogeneous data": [[44, "term-Homogeneous-data"]], "host/device": [[44, "term-Host-Device"]], "immutability": [[44, "term-Immutability"]], "inference": [[44, "term-Inference"]], "inference set": [[44, "term-Inference-set"]], "interval feature": [[44, "term-Interval-feature"]], "jit": [[44, "term-JIT"]], "kernel": [[44, "term-Kernel"]], "label": [[44, "term-Label"]], "metadata": [[44, "term-Metadata"]], "model": [[44, "term-Model"]], "nominal feature": [[44, "term-Nominal-feature"]], "observation": [[44, "term-Observation"]], "online mode": [[44, "term-Online-mode"]], "ordinal feature": [[44, "term-Ordinal-feature"]], "outlier": [[44, "term-Outlier"]], "ratio feature": [[44, "term-Ratio-feature"]], "reference-counted object": [[44, "term-Reference-counted-object"]], "regression": [[44, "term-Regression"]], "response": [[44, "term-Response"]], "spir-v": [[44, "term-SPIR-V"]], "sycl": [[44, "term-SYCL"]], "setter": [[44, "term-Setter"]], "supervised learning": [[44, "term-Supervised-learning"]], "table": [[44, "term-Table"]], "training": [[44, "term-Training"]], "training set": [[44, "term-Training-set"]], "unsupervised learning": [[44, "term-Unsupervised-learning"]], "workload": [[44, "term-Workload"]], "dnnl::memory::data_type (c++ enum)": [[56, "_CPPv4N4dnnl6memory9data_typeE"]], "dnnl::memory::data_type::bf16 (c++ enumerator)": [[56, "_CPPv4N4dnnl6memory9data_type4bf16E"]], "dnnl::memory::data_type::f16 (c++ enumerator)": [[56, "_CPPv4N4dnnl6memory9data_type3f16E"]], "dnnl::memory::data_type::f32 (c++ enumerator)": [[56, "_CPPv4N4dnnl6memory9data_type3f32E"]], "dnnl::memory::data_type::s32 (c++ enumerator)": [[56, "_CPPv4N4dnnl6memory9data_type3s32E"]], "dnnl::memory::data_type::s8 (c++ enumerator)": [[56, "_CPPv4N4dnnl6memory9data_type2s8E"]], "dnnl::memory::data_type::u8 (c++ enumerator)": [[56, "_CPPv4N4dnnl6memory9data_type2u8E"]], "dnnl::memory::data_type::undef (c++ enumerator)": [[56, "_CPPv4N4dnnl6memory9data_type5undefE"]], "dnnl::memory::format_tag (c++ enum)": [[59, "_CPPv4N4dnnl6memory10format_tagE"]], "dnnl::memory::format_tag::a (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag1aE"]], "dnnl::memory::format_tag::ab (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag2abE"]], "dnnl::memory::format_tag::abc (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3abcE"]], "dnnl::memory::format_tag::abcd (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4abcdE"]], "dnnl::memory::format_tag::abcde (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5abcdeE"]], "dnnl::memory::format_tag::abcdef (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag6abcdefE"]], "dnnl::memory::format_tag::abdc (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4abdcE"]], "dnnl::memory::format_tag::abdec (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5abdecE"]], "dnnl::memory::format_tag::acb (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3acbE"]], "dnnl::memory::format_tag::acbde (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5acbdeE"]], "dnnl::memory::format_tag::acbdef (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag6acbdefE"]], "dnnl::memory::format_tag::acdb (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4acdbE"]], "dnnl::memory::format_tag::acdeb (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5acdebE"]], "dnnl::memory::format_tag::any (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3anyE"]], "dnnl::memory::format_tag::ba (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag2baE"]], "dnnl::memory::format_tag::bac (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3bacE"]], "dnnl::memory::format_tag::bacd (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4bacdE"]], "dnnl::memory::format_tag::bacde (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5bacdeE"]], "dnnl::memory::format_tag::bca (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3bcaE"]], "dnnl::memory::format_tag::bcda (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4bcdaE"]], "dnnl::memory::format_tag::bcdea (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5bcdeaE"]], "dnnl::memory::format_tag::cba (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3cbaE"]], "dnnl::memory::format_tag::cdba (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4cdbaE"]], "dnnl::memory::format_tag::cdeba (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5cdebaE"]], "dnnl::memory::format_tag::chwn (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4chwnE"]], "dnnl::memory::format_tag::cn (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag2cnE"]], "dnnl::memory::format_tag::dcab (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4dcabE"]], "dnnl::memory::format_tag::decab (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5decabE"]], "dnnl::memory::format_tag::defcab (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag6defcabE"]], "dnnl::memory::format_tag::dhwigo (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag6dhwigoE"]], "dnnl::memory::format_tag::dhwio (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5dhwioE"]], "dnnl::memory::format_tag::giodhw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag6giodhwE"]], "dnnl::memory::format_tag::giohw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5giohwE"]], "dnnl::memory::format_tag::goidhw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag6goidhwE"]], "dnnl::memory::format_tag::goihw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5goihwE"]], "dnnl::memory::format_tag::goiw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4goiwE"]], "dnnl::memory::format_tag::hwigo (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5hwigoE"]], "dnnl::memory::format_tag::hwio (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4hwioE"]], "dnnl::memory::format_tag::idhwo (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5idhwoE"]], "dnnl::memory::format_tag::ihwo (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4ihwoE"]], "dnnl::memory::format_tag::io (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag2ioE"]], "dnnl::memory::format_tag::iodhw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5iodhwE"]], "dnnl::memory::format_tag::iohw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4iohwE"]], "dnnl::memory::format_tag::iwo (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3iwoE"]], "dnnl::memory::format_tag::ldgo (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4ldgoE"]], "dnnl::memory::format_tag::ldgoi (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5ldgoiE"]], "dnnl::memory::format_tag::ldigo (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5ldigoE"]], "dnnl::memory::format_tag::ldio (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4ldioE"]], "dnnl::memory::format_tag::ldnc (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4ldncE"]], "dnnl::memory::format_tag::ldoi (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4ldoiE"]], "dnnl::memory::format_tag::nc (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag2ncE"]], "dnnl::memory::format_tag::ncdhw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5ncdhwE"]], "dnnl::memory::format_tag::nchw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4nchwE"]], "dnnl::memory::format_tag::ncw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3ncwE"]], "dnnl::memory::format_tag::ndhwc (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5ndhwcE"]], "dnnl::memory::format_tag::nhwc (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4nhwcE"]], "dnnl::memory::format_tag::nt (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag2ntE"]], "dnnl::memory::format_tag::ntc (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3ntcE"]], "dnnl::memory::format_tag::nwc (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3nwcE"]], "dnnl::memory::format_tag::odhwi (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5odhwiE"]], "dnnl::memory::format_tag::ohwi (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4ohwiE"]], "dnnl::memory::format_tag::oi (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag2oiE"]], "dnnl::memory::format_tag::oidhw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5oidhwE"]], "dnnl::memory::format_tag::oihw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4oihwE"]], "dnnl::memory::format_tag::oiw (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3oiwE"]], "dnnl::memory::format_tag::owi (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3owiE"]], "dnnl::memory::format_tag::tn (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag2tnE"]], "dnnl::memory::format_tag::tnc (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3tncE"]], "dnnl::memory::format_tag::undef (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag5undefE"]], "dnnl::memory::format_tag::wigo (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag4wigoE"]], "dnnl::memory::format_tag::wio (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag3wioE"]], "dnnl::memory::format_tag::x (c++ enumerator)": [[59, "_CPPv4N4dnnl6memory10format_tag1xE"]], "dnnl::memory::dim (c++ type)": [[60, "_CPPv4N4dnnl6memory3dimE"]], "dnnl::memory::dims (c++ type)": [[60, "_CPPv4N4dnnl6memory4dimsE"]], "dnnl_memory_allocate (c macro)": [[61, "c.DNNL_MEMORY_ALLOCATE"]], "dnnl_memory_none (c macro)": [[61, "c.DNNL_MEMORY_NONE"]], "dnnl::memory (c++ struct)": [[61, "_CPPv4N4dnnl6memoryE"]], "dnnl::memory::desc (c++ struct)": [[61, "_CPPv4N4dnnl6memory4descE"]], "dnnl::memory::desc::data_type (c++ function)": [[61, "_CPPv4NK4dnnl6memory4desc9data_typeEv"]], "dnnl::memory::desc::desc (c++ function)": [[61, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb"], [61, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb"], [61, "_CPPv4N4dnnl6memory4desc4descEv"]], "dnnl::memory::desc::dims (c++ function)": [[61, "_CPPv4NK4dnnl6memory4desc4dimsEv"]], "dnnl::memory::desc::get_size (c++ function)": [[61, "_CPPv4NK4dnnl6memory4desc8get_sizeEv"]], "dnnl::memory::desc::is_zero (c++ function)": [[61, "_CPPv4NK4dnnl6memory4desc7is_zeroEv"]], "dnnl::memory::desc::operator!= (c++ function)": [[61, "_CPPv4NK4dnnl6memory4descneERK4desc"]], "dnnl::memory::desc::operator== (c++ function)": [[61, "_CPPv4NK4dnnl6memory4desceqERK4desc"]], "dnnl::memory::desc::permute_axes (c++ function)": [[61, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb"]], "dnnl::memory::desc::reshape (c++ function)": [[61, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb"]], "dnnl::memory::desc::submemory_desc (c++ function)": [[61, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb"]], "dnnl::memory::get_data_handle (c++ function)": [[61, "_CPPv4NK4dnnl6memory15get_data_handleEv"]], "dnnl::memory::get_desc (c++ function)": [[61, "_CPPv4NK4dnnl6memory8get_descEv"]], "dnnl::memory::get_engine (c++ function)": [[61, "_CPPv4NK4dnnl6memory10get_engineEv"]], "dnnl::memory::map_data (c++ function)": [[61, "_CPPv4I0ENK4dnnl6memory8map_dataEP1Tv"]], "dnnl::memory::memory (c++ function)": [[61, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine"], [61, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv"], [61, "_CPPv4N4dnnl6memory6memoryEv"]], "dnnl::memory::set_data_handle (c++ function)": [[61, "_CPPv4NK4dnnl6memory15set_data_handleEPv"], [61, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream"]], "dnnl::memory::unmap_data (c++ function)": [[61, "_CPPv4NK4dnnl6memory10unmap_dataEPv"]], "dnnl::sycl_interop::get_buffer (c++ function)": [[61, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory"]], "dnnl::sycl_interop::get_memory_kind (c++ function)": [[61, "_CPPv4N4dnnl12sycl_interop15get_memory_kindERK6memory"]], "dnnl::sycl_interop::make_memory (c++ function)": [[61, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE"], [61, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE"], [61, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv"], [61, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv"]], "dnnl::sycl_interop::memory_kind (c++ enum)": [[61, "_CPPv4N4dnnl12sycl_interop11memory_kindE"]], "dnnl::sycl_interop::memory_kind::buffer (c++ enumerator)": [[61, "_CPPv4N4dnnl12sycl_interop11memory_kind6bufferE"]], "dnnl::sycl_interop::memory_kind::usm (c++ enumerator)": [[61, "_CPPv4N4dnnl12sycl_interop11memory_kind3usmE"]], "dnnl::sycl_interop::set_buffer (c++ function)": [[61, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE"], [61, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream"]], "dnnl::engine (c++ struct)": [[62, "_CPPv4N4dnnl6engineE"]], "dnnl::engine::engine (c++ function)": [[62, "_CPPv4N4dnnl6engine6engineE4kind6size_t"], [62, "_CPPv4N4dnnl6engine6engineEv"]], "dnnl::engine::get_count (c++ function)": [[62, "_CPPv4N4dnnl6engine9get_countE4kind"]], "dnnl::engine::get_kind (c++ function)": [[62, "_CPPv4NK4dnnl6engine8get_kindEv"]], "dnnl::engine::kind (c++ enum)": [[62, "_CPPv4N4dnnl6engine4kindE"]], "dnnl::engine::kind::any (c++ enumerator)": [[62, "_CPPv4N4dnnl6engine4kind3anyE"]], "dnnl::engine::kind::cpu (c++ enumerator)": [[62, "_CPPv4N4dnnl6engine4kind3cpuE"]], "dnnl::engine::kind::gpu (c++ enumerator)": [[62, "_CPPv4N4dnnl6engine4kind3gpuE"]], "dnnl::stream (c++ struct)": [[62, "_CPPv4N4dnnl6streamE"]], "dnnl::stream::flags (c++ enum)": [[62, "_CPPv4N4dnnl6stream5flagsE"]], "dnnl::stream::flags::default_flags (c++ enumerator)": [[62, "_CPPv4N4dnnl6stream5flags13default_flagsE"]], "dnnl::stream::flags::in_order (c++ enumerator)": [[62, "_CPPv4N4dnnl6stream5flags8in_orderE"]], "dnnl::stream::flags::out_of_order (c++ enumerator)": [[62, "_CPPv4N4dnnl6stream5flags12out_of_orderE"]], "dnnl::stream::get_engine (c++ function)": [[62, "_CPPv4NK4dnnl6stream10get_engineEv"]], "dnnl::stream::stream (c++ function)": [[62, "_CPPv4N4dnnl6stream6streamERK6engine5flags"], [62, "_CPPv4N4dnnl6stream6streamEv"]], "dnnl::stream::wait (c++ function)": [[62, "_CPPv4N4dnnl6stream4waitEv"]], "dnnl::sycl_interop::get_context (c++ function)": [[62, "_CPPv4N4dnnl12sycl_interop11get_contextERK6engine"]], "dnnl::sycl_interop::get_device (c++ function)": [[62, "_CPPv4N4dnnl12sycl_interop10get_deviceERK6engine"]], "dnnl::sycl_interop::get_queue (c++ function)": [[62, "_CPPv4N4dnnl12sycl_interop9get_queueERK6stream"]], "dnnl::sycl_interop::make_engine (c++ function)": [[62, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE"]], "dnnl::sycl_interop::make_stream (c++ function)": [[62, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE"]], "dnnl_graph_unknown_dim (c macro)": [[64, "c.DNNL_GRAPH_UNKNOWN_DIM"]], "dnnl_graph_unknown_ndims (c macro)": [[64, "c.DNNL_GRAPH_UNKNOWN_NDIMS"]], "dnnl::graph::graph (c++ struct)": [[64, "_CPPv4N4dnnl5graph5graphE"]], "dnnl::graph::graph::add_op (c++ function)": [[64, "_CPPv4N4dnnl5graph5graph6add_opERK2opb"]], "dnnl::graph::graph::finalize (c++ function)": [[64, "_CPPv4N4dnnl5graph5graph8finalizeEv"]], "dnnl::graph::graph::get_partitions (c++ function)": [[64, "_CPPv4N4dnnl5graph5graph14get_partitionsEN9partition6policyE"]], "dnnl::graph::graph::graph (c++ function)": [[64, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindE"], [64, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE"]], "dnnl::graph::graph::is_finalized (c++ function)": [[64, "_CPPv4NK4dnnl5graph5graph12is_finalizedEv"]], "dnnl::graph::logical_tensor (c++ struct)": [[64, "_CPPv4N4dnnl5graph14logical_tensorE"]], "dnnl::graph::logical_tensor::data_type (c++ enum)": [[64, "_CPPv4N4dnnl5graph14logical_tensor9data_typeE"]], "dnnl::graph::logical_tensor::data_type::bf16 (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor9data_type4bf16E"]], "dnnl::graph::logical_tensor::data_type::boolean (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor9data_type7booleanE"]], "dnnl::graph::logical_tensor::data_type::f16 (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f16E"]], "dnnl::graph::logical_tensor::data_type::f32 (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f32E"]], "dnnl::graph::logical_tensor::data_type::s32 (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor9data_type3s32E"]], "dnnl::graph::logical_tensor::data_type::s8 (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor9data_type2s8E"]], "dnnl::graph::logical_tensor::data_type::u8 (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor9data_type2u8E"]], "dnnl::graph::logical_tensor::data_type::undef (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor9data_type5undefE"]], "dnnl::graph::logical_tensor::dim (c++ type)": [[64, "_CPPv4N4dnnl5graph14logical_tensor3dimE"]], "dnnl::graph::logical_tensor::dims (c++ type)": [[64, "_CPPv4N4dnnl5graph14logical_tensor4dimsE"]], "dnnl::graph::logical_tensor::get_data_type (c++ function)": [[64, "_CPPv4N4dnnl5graph14logical_tensor13get_data_typeEv"]], "dnnl::graph::logical_tensor::get_dims (c++ function)": [[64, "_CPPv4NK4dnnl5graph14logical_tensor8get_dimsEv"]], "dnnl::graph::logical_tensor::get_id (c++ function)": [[64, "_CPPv4NK4dnnl5graph14logical_tensor6get_idEv"]], "dnnl::graph::logical_tensor::get_layout_id (c++ function)": [[64, "_CPPv4NK4dnnl5graph14logical_tensor13get_layout_idEv"]], "dnnl::graph::logical_tensor::get_layout_type (c++ function)": [[64, "_CPPv4NK4dnnl5graph14logical_tensor15get_layout_typeEv"]], "dnnl::graph::logical_tensor::get_mem_size (c++ function)": [[64, "_CPPv4NK4dnnl5graph14logical_tensor12get_mem_sizeEv"]], "dnnl::graph::logical_tensor::get_property_type (c++ function)": [[64, "_CPPv4NK4dnnl5graph14logical_tensor17get_property_typeEv"]], "dnnl::graph::logical_tensor::get_strides (c++ function)": [[64, "_CPPv4NK4dnnl5graph14logical_tensor11get_stridesEv"]], "dnnl::graph::logical_tensor::is_equal (c++ function)": [[64, "_CPPv4N4dnnl5graph14logical_tensor8is_equalERK14logical_tensor"]], "dnnl::graph::logical_tensor::layout_type (c++ enum)": [[64, "_CPPv4N4dnnl5graph14logical_tensor11layout_typeE"]], "dnnl::graph::logical_tensor::layout_type::any (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor11layout_type3anyE"]], "dnnl::graph::logical_tensor::layout_type::opaque (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor11layout_type6opaqueE"]], "dnnl::graph::logical_tensor::layout_type::strided (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor11layout_type7stridedE"]], "dnnl::graph::logical_tensor::layout_type::undef (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor11layout_type5undefE"]], "dnnl::graph::logical_tensor::logical_tensor (c++ function)": [[64, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type"], [64, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type"], [64, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type"], [64, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type"], [64, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type"], [64, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorERK14logical_tensor"], [64, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorEv"]], "dnnl::graph::logical_tensor::operator= (c++ function)": [[64, "_CPPv4N4dnnl5graph14logical_tensoraSERK14logical_tensor"]], "dnnl::graph::logical_tensor::property_type (c++ enum)": [[64, "_CPPv4N4dnnl5graph14logical_tensor13property_typeE"]], "dnnl::graph::logical_tensor::property_type::constant (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor13property_type8constantE"]], "dnnl::graph::logical_tensor::property_type::undef (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor13property_type5undefE"]], "dnnl::graph::logical_tensor::property_type::variable (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph14logical_tensor13property_type8variableE"]], "dnnl::graph::op (c++ struct)": [[64, "_CPPv4N4dnnl5graph2opE"]], "dnnl::graph::op::add_input (c++ function)": [[64, "_CPPv4N4dnnl5graph2op9add_inputERK14logical_tensor"]], "dnnl::graph::op::add_inputs (c++ function)": [[64, "_CPPv4N4dnnl5graph2op10add_inputsERKNSt6vectorI14logical_tensorEE"]], "dnnl::graph::op::add_output (c++ function)": [[64, "_CPPv4N4dnnl5graph2op10add_outputERK14logical_tensor"]], "dnnl::graph::op::add_outputs (c++ function)": [[64, "_CPPv4N4dnnl5graph2op11add_outputsERKNSt6vectorI14logical_tensorEE"]], "dnnl::graph::op::attr (c++ enum)": [[64, "_CPPv4N4dnnl5graph2op4attrE"]], "dnnl::graph::op::attr::alpha (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr5alphaE"]], "dnnl::graph::op::attr::auto_broadcast (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr14auto_broadcastE"]], "dnnl::graph::op::attr::auto_pad (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr8auto_padE"]], "dnnl::graph::op::attr::axes (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr4axesE"]], "dnnl::graph::op::attr::axis (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr4axisE"]], "dnnl::graph::op::attr::begin_norm_axis (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr15begin_norm_axisE"]], "dnnl::graph::op::attr::beta (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr4betaE"]], "dnnl::graph::op::attr::coordinate_transformation_mode (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr30coordinate_transformation_modeE"]], "dnnl::graph::op::attr::data_format (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr11data_formatE"]], "dnnl::graph::op::attr::dilations (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr9dilationsE"]], "dnnl::graph::op::attr::dst_shape (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr9dst_shapeE"]], "dnnl::graph::op::attr::epsilon (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr7epsilonE"]], "dnnl::graph::op::attr::exclude_pad (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr11exclude_padE"]], "dnnl::graph::op::attr::groups (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr6groupsE"]], "dnnl::graph::op::attr::keep_dims (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr9keep_dimsE"]], "dnnl::graph::op::attr::keep_stats (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr10keep_statsE"]], "dnnl::graph::op::attr::kernel (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr6kernelE"]], "dnnl::graph::op::attr::max (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr3maxE"]], "dnnl::graph::op::attr::min (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr3minE"]], "dnnl::graph::op::attr::mode (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr4modeE"]], "dnnl::graph::op::attr::momentum (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr8momentumE"]], "dnnl::graph::op::attr::order (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr5orderE"]], "dnnl::graph::op::attr::output_padding (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr14output_paddingE"]], "dnnl::graph::op::attr::pads_begin (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr10pads_beginE"]], "dnnl::graph::op::attr::pads_end (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr8pads_endE"]], "dnnl::graph::op::attr::per_channel_broadcast (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr21per_channel_broadcastE"]], "dnnl::graph::op::attr::qtype (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr5qtypeE"]], "dnnl::graph::op::attr::rounding_type (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr13rounding_typeE"]], "dnnl::graph::op::attr::scales (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr6scalesE"]], "dnnl::graph::op::attr::shape (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr5shapeE"]], "dnnl::graph::op::attr::sizes (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr5sizesE"]], "dnnl::graph::op::attr::special_zero (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr12special_zeroE"]], "dnnl::graph::op::attr::src_shape (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr9src_shapeE"]], "dnnl::graph::op::attr::strides (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr7stridesE"]], "dnnl::graph::op::attr::transpose_a (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr11transpose_aE"]], "dnnl::graph::op::attr::transpose_b (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr11transpose_bE"]], "dnnl::graph::op::attr::undef (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr5undefE"]], "dnnl::graph::op::attr::use_affine (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr10use_affineE"]], "dnnl::graph::op::attr::use_dst (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr7use_dstE"]], "dnnl::graph::op::attr::weights_format (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr14weights_formatE"]], "dnnl::graph::op::attr::weights_shape (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr13weights_shapeE"]], "dnnl::graph::op::attr::zps (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4attr3zpsE"]], "dnnl::graph::op::kind (c++ enum)": [[64, "_CPPv4N4dnnl5graph2op4kindE"]], "dnnl::graph::op::kind::abs (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind3AbsE"]], "dnnl::graph::op::kind::absbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind11AbsBackwardE"]], "dnnl::graph::op::kind::add (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind3AddE"]], "dnnl::graph::op::kind::avgpool (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind7AvgPoolE"]], "dnnl::graph::op::kind::avgpoolbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind15AvgPoolBackwardE"]], "dnnl::graph::op::kind::batchnormforwardtraining (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind24BatchNormForwardTrainingE"]], "dnnl::graph::op::kind::batchnorminference (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind18BatchNormInferenceE"]], "dnnl::graph::op::kind::batchnormtrainingbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind25BatchNormTrainingBackwardE"]], "dnnl::graph::op::kind::biasadd (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind7BiasAddE"]], "dnnl::graph::op::kind::biasaddbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind15BiasAddBackwardE"]], "dnnl::graph::op::kind::clamp (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind5ClampE"]], "dnnl::graph::op::kind::clampbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind13ClampBackwardE"]], "dnnl::graph::op::kind::concat (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind6ConcatE"]], "dnnl::graph::op::kind::convtranspose (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind13ConvTransposeE"]], "dnnl::graph::op::kind::convtransposebackwarddata (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind25ConvTransposeBackwardDataE"]], "dnnl::graph::op::kind::convtransposebackwardweights (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind28ConvTransposeBackwardWeightsE"]], "dnnl::graph::op::kind::convolution (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind11ConvolutionE"]], "dnnl::graph::op::kind::convolutionbackwarddata (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind23ConvolutionBackwardDataE"]], "dnnl::graph::op::kind::convolutionbackwardweights (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind26ConvolutionBackwardWeightsE"]], "dnnl::graph::op::kind::dequantize (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind10DequantizeE"]], "dnnl::graph::op::kind::divide (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind6DivideE"]], "dnnl::graph::op::kind::dynamicdequantize (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind17DynamicDequantizeE"]], "dnnl::graph::op::kind::dynamicquantize (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind15DynamicQuantizeE"]], "dnnl::graph::op::kind::elu (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind3EluE"]], "dnnl::graph::op::kind::elubackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind11EluBackwardE"]], "dnnl::graph::op::kind::end (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind3EndE"]], "dnnl::graph::op::kind::exp (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind3ExpE"]], "dnnl::graph::op::kind::gelu (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind4GELUE"]], "dnnl::graph::op::kind::gelubackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind12GELUBackwardE"]], "dnnl::graph::op::kind::hardsigmoid (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind11HardSigmoidE"]], "dnnl::graph::op::kind::hardsigmoidbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind19HardSigmoidBackwardE"]], "dnnl::graph::op::kind::hardswish (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind9HardSwishE"]], "dnnl::graph::op::kind::hardswishbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind17HardSwishBackwardE"]], "dnnl::graph::op::kind::interpolate (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind11InterpolateE"]], "dnnl::graph::op::kind::interpolatebackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind19InterpolateBackwardE"]], "dnnl::graph::op::kind::lastsymbol (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind10LastSymbolE"]], "dnnl::graph::op::kind::layernorm (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind9LayerNormE"]], "dnnl::graph::op::kind::layernormbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind17LayerNormBackwardE"]], "dnnl::graph::op::kind::leakyrelu (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind9LeakyReLUE"]], "dnnl::graph::op::kind::log (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind3LogE"]], "dnnl::graph::op::kind::logsoftmax (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind10LogSoftmaxE"]], "dnnl::graph::op::kind::logsoftmaxbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind18LogSoftmaxBackwardE"]], "dnnl::graph::op::kind::matmul (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind6MatMulE"]], "dnnl::graph::op::kind::maxpool (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind7MaxPoolE"]], "dnnl::graph::op::kind::maxpoolbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind15MaxPoolBackwardE"]], "dnnl::graph::op::kind::maximum (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind7MaximumE"]], "dnnl::graph::op::kind::minimum (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind7MinimumE"]], "dnnl::graph::op::kind::mish (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind4MishE"]], "dnnl::graph::op::kind::mishbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind12MishBackwardE"]], "dnnl::graph::op::kind::multiply (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind8MultiplyE"]], "dnnl::graph::op::kind::prelu (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind5PReLUE"]], "dnnl::graph::op::kind::prelubackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind13PReLUBackwardE"]], "dnnl::graph::op::kind::pow (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind3PowE"]], "dnnl::graph::op::kind::quantize (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind8QuantizeE"]], "dnnl::graph::op::kind::relu (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind4ReLUE"]], "dnnl::graph::op::kind::relubackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind12ReLUBackwardE"]], "dnnl::graph::op::kind::reciprocal (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind10ReciprocalE"]], "dnnl::graph::op::kind::reducel1 (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind8ReduceL1E"]], "dnnl::graph::op::kind::reducel2 (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind8ReduceL2E"]], "dnnl::graph::op::kind::reducemax (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind9ReduceMaxE"]], "dnnl::graph::op::kind::reducemean (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind10ReduceMeanE"]], "dnnl::graph::op::kind::reducemin (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind9ReduceMinE"]], "dnnl::graph::op::kind::reduceprod (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind10ReduceProdE"]], "dnnl::graph::op::kind::reducesum (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind9ReduceSumE"]], "dnnl::graph::op::kind::reorder (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind7ReorderE"]], "dnnl::graph::op::kind::round (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind5RoundE"]], "dnnl::graph::op::kind::select (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind6SelectE"]], "dnnl::graph::op::kind::sigmoid (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind7SigmoidE"]], "dnnl::graph::op::kind::sigmoidbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind15SigmoidBackwardE"]], "dnnl::graph::op::kind::softmax (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind7SoftMaxE"]], "dnnl::graph::op::kind::softmaxbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind15SoftMaxBackwardE"]], "dnnl::graph::op::kind::softplus (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind8SoftPlusE"]], "dnnl::graph::op::kind::softplusbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind16SoftPlusBackwardE"]], "dnnl::graph::op::kind::sqrt (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind4SqrtE"]], "dnnl::graph::op::kind::sqrtbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind12SqrtBackwardE"]], "dnnl::graph::op::kind::square (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind6SquareE"]], "dnnl::graph::op::kind::squareddifference (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind17SquaredDifferenceE"]], "dnnl::graph::op::kind::staticreshape (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind13StaticReshapeE"]], "dnnl::graph::op::kind::statictranspose (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind15StaticTransposeE"]], "dnnl::graph::op::kind::subtract (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind8SubtractE"]], "dnnl::graph::op::kind::tanh (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind4TanhE"]], "dnnl::graph::op::kind::tanhbackward (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind12TanhBackwardE"]], "dnnl::graph::op::kind::typecast (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind8TypeCastE"]], "dnnl::graph::op::kind::wildcard (c++ enumerator)": [[64, "_CPPv4N4dnnl5graph2op4kind8WildcardE"]], "dnnl::graph::op::op (c++ function)": [[64, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE"], [64, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE"]], "dnnl::graph::op::set_attr (c++ function)": [[64, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type"]], "dnnl::error (c++ struct)": [[152, "_CPPv4N4dnnl5errorE"]], "dnnl::primitive_attr (c++ struct)": [[153, "_CPPv4N4dnnl14primitive_attrE"]], "dnnl::primitive_attr::get_fpmath_mode (c++ function)": [[153, "_CPPv4NK4dnnl14primitive_attr15get_fpmath_modeEv"]], "dnnl::primitive_attr::get_post_ops (c++ function)": [[153, "_CPPv4NK4dnnl14primitive_attr12get_post_opsEv"]], "dnnl::primitive_attr::get_scales_mask (c++ function)": [[153, "_CPPv4NK4dnnl14primitive_attr15get_scales_maskEi"]], "dnnl::primitive_attr::get_scratchpad_mode (c++ function)": [[153, "_CPPv4NK4dnnl14primitive_attr19get_scratchpad_modeEv"]], "dnnl::primitive_attr::primitive_attr (c++ function)": [[153, "_CPPv4N4dnnl14primitive_attr14primitive_attrEv"]], "dnnl::primitive_attr::set_fpmath_mode (c++ function)": [[153, "_CPPv4N4dnnl14primitive_attr15set_fpmath_modeE11fpmath_mode"]], "dnnl::primitive_attr::set_post_ops (c++ function)": [[153, "_CPPv4N4dnnl14primitive_attr12set_post_opsEK8post_ops"]], "dnnl::primitive_attr::set_rnn_data_qparams (c++ function)": [[153, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff"]], "dnnl::primitive_attr::set_rnn_weights_qparams (c++ function)": [[153, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE"]], "dnnl::primitive_attr::set_scales_mask (c++ function)": [[153, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii"]], "dnnl::primitive_attr::set_scratchpad_mode (c++ function)": [[153, "_CPPv4N4dnnl14primitive_attr19set_scratchpad_modeE15scratchpad_mode"]], "dnnl::primitive_attr::set_zero_points_mask (c++ function)": [[153, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii"]], "dnnl::scratchpad_mode (c++ enum)": [[153, "_CPPv4N4dnnl15scratchpad_modeE"]], "dnnl::scratchpad_mode::library (c++ enumerator)": [[153, "_CPPv4N4dnnl15scratchpad_mode7libraryE"]], "dnnl::scratchpad_mode::user (c++ enumerator)": [[153, "_CPPv4N4dnnl15scratchpad_mode4userE"]], "dnnl::post_ops (c++ struct)": [[154, "_CPPv4N4dnnl8post_opsE"]], "dnnl::post_ops::append_binary (c++ function)": [[154, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE"]], "dnnl::post_ops::append_eltwise (c++ function)": [[154, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff"]], "dnnl::post_ops::append_sum (c++ function)": [[154, "_CPPv4N4dnnl8post_ops10append_sumEN6memory9data_typeE"]], "dnnl::post_ops::get_params_binary (c++ function)": [[154, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE"]], "dnnl::post_ops::get_params_eltwise (c++ function)": [[154, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf"]], "dnnl::post_ops::get_params_sum (c++ function)": [[154, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf"], [154, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE"]], "dnnl::post_ops::kind (c++ function)": [[154, "_CPPv4NK4dnnl8post_ops4kindEi"]], "dnnl::post_ops::len (c++ function)": [[154, "_CPPv4NK4dnnl8post_ops3lenEv"]], "dnnl::post_ops::post_ops (c++ function)": [[154, "_CPPv4N4dnnl8post_ops8post_opsEv"]], "dnnl::batch_normalization_backward (c++ struct)": [[155, "_CPPv4N4dnnl28batch_normalization_backwardE"]], "dnnl::batch_normalization_backward::batch_normalization_backward (c++ function)": [[155, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardERK14primitive_desc"], [155, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardEv"]], "dnnl::batch_normalization_backward::primitive_desc (c++ struct)": [[155, "_CPPv4N4dnnl28batch_normalization_backward14primitive_descE"]], "dnnl::batch_normalization_backward::primitive_desc::diff_dst_desc (c++ function)": [[155, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_dst_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::diff_src_desc (c++ function)": [[155, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_src_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::diff_weights_desc (c++ function)": [[155, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc17diff_weights_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::dst_desc (c++ function)": [[155, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8dst_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::get_epsilon (c++ function)": [[155, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc11get_epsilonEv"]], "dnnl::batch_normalization_backward::primitive_desc::get_flags (c++ function)": [[155, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9get_flagsEv"]], "dnnl::batch_normalization_backward::primitive_desc::get_prop_kind (c++ function)": [[155, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13get_prop_kindEv"]], "dnnl::batch_normalization_backward::primitive_desc::mean_desc (c++ function)": [[155, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9mean_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::primitive_desc (c++ function)": [[155, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb"], [155, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::src_desc (c++ function)": [[155, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8src_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::variance_desc (c++ function)": [[155, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13variance_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::weights_desc (c++ function)": [[155, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc12weights_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::workspace_desc (c++ function)": [[155, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc14workspace_descEv"]], "dnnl::batch_normalization_forward (c++ struct)": [[155, "_CPPv4N4dnnl27batch_normalization_forwardE"]], "dnnl::batch_normalization_forward::batch_normalization_forward (c++ function)": [[155, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardERK14primitive_desc"], [155, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardEv"]], "dnnl::batch_normalization_forward::primitive_desc (c++ struct)": [[155, "_CPPv4N4dnnl27batch_normalization_forward14primitive_descE"]], "dnnl::batch_normalization_forward::primitive_desc::dst_desc (c++ function)": [[155, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8dst_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::get_epsilon (c++ function)": [[155, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc11get_epsilonEv"]], "dnnl::batch_normalization_forward::primitive_desc::get_flags (c++ function)": [[155, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9get_flagsEv"]], "dnnl::batch_normalization_forward::primitive_desc::get_prop_kind (c++ function)": [[155, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13get_prop_kindEv"]], "dnnl::batch_normalization_forward::primitive_desc::mean_desc (c++ function)": [[155, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9mean_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::primitive_desc (c++ function)": [[155, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb"], [155, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::src_desc (c++ function)": [[155, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8src_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::variance_desc (c++ function)": [[155, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13variance_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::weights_desc (c++ function)": [[155, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc12weights_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::workspace_desc (c++ function)": [[155, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc14workspace_descEv"]], "dnnl::binary (c++ struct)": [[156, "_CPPv4N4dnnl6binaryE"]], "dnnl::binary::binary (c++ function)": [[156, "_CPPv4N4dnnl6binary6binaryERK14primitive_desc"], [156, "_CPPv4N4dnnl6binary6binaryEv"]], "dnnl::binary::primitive_desc (c++ struct)": [[156, "_CPPv4N4dnnl6binary14primitive_descE"]], "dnnl::binary::primitive_desc::dst_desc (c++ function)": [[156, "_CPPv4NK4dnnl6binary14primitive_desc8dst_descEv"]], "dnnl::binary::primitive_desc::get_algorithm (c++ function)": [[156, "_CPPv4NK4dnnl6binary14primitive_desc13get_algorithmEv"]], "dnnl::binary::primitive_desc::primitive_desc (c++ function)": [[156, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [156, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descEv"]], "dnnl::binary::primitive_desc::src0_desc (c++ function)": [[156, "_CPPv4NK4dnnl6binary14primitive_desc9src0_descEv"]], "dnnl::binary::primitive_desc::src1_desc (c++ function)": [[156, "_CPPv4NK4dnnl6binary14primitive_desc9src1_descEv"]], "dnnl::binary::primitive_desc::src_desc (c++ function)": [[156, "_CPPv4NK4dnnl6binary14primitive_desc8src_descEi"]], "dnnl::concat (c++ struct)": [[157, "_CPPv4N4dnnl6concatE"]], "dnnl::concat::concat (c++ function)": [[157, "_CPPv4N4dnnl6concat6concatERK14primitive_desc"], [157, "_CPPv4N4dnnl6concat6concatEv"]], "dnnl::concat::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl6concat14primitive_descE"]], "dnnl::concat::primitive_desc::dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl6concat14primitive_desc8dst_descEv"]], "dnnl::concat::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [157, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [157, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEv"]], "dnnl::concat::primitive_desc::src_desc (c++ function)": [[157, "_CPPv4NK4dnnl6concat14primitive_desc8src_descEi"]], "dnnl::convolution_backward_data (c++ struct)": [[158, "_CPPv4N4dnnl25convolution_backward_dataE"]], "dnnl::convolution_backward_data::convolution_backward_data (c++ function)": [[158, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataERK14primitive_desc"], [158, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataEv"]], "dnnl::convolution_backward_data::primitive_desc (c++ struct)": [[158, "_CPPv4N4dnnl25convolution_backward_data14primitive_descE"]], "dnnl::convolution_backward_data::primitive_desc::diff_dst_desc (c++ function)": [[158, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_dst_descEv"]], "dnnl::convolution_backward_data::primitive_desc::diff_src_desc (c++ function)": [[158, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_src_descEv"]], "dnnl::convolution_backward_data::primitive_desc::get_algorithm (c++ function)": [[158, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_algorithmEv"]], "dnnl::convolution_backward_data::primitive_desc::get_dilations (c++ function)": [[158, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_dilationsEv"]], "dnnl::convolution_backward_data::primitive_desc::get_padding_l (c++ function)": [[158, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_lEv"]], "dnnl::convolution_backward_data::primitive_desc::get_padding_r (c++ function)": [[158, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_rEv"]], "dnnl::convolution_backward_data::primitive_desc::get_prop_kind (c++ function)": [[158, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_prop_kindEv"]], "dnnl::convolution_backward_data::primitive_desc::get_strides (c++ function)": [[158, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc11get_stridesEv"]], "dnnl::convolution_backward_data::primitive_desc::primitive_desc (c++ function)": [[158, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descEv"]], "dnnl::convolution_backward_data::primitive_desc::weights_desc (c++ function)": [[158, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc12weights_descEv"]], "dnnl::convolution_backward_weights (c++ struct)": [[158, "_CPPv4N4dnnl28convolution_backward_weightsE"]], "dnnl::convolution_backward_weights::convolution_backward_weights (c++ function)": [[158, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsERK14primitive_desc"], [158, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsEv"]], "dnnl::convolution_backward_weights::primitive_desc (c++ struct)": [[158, "_CPPv4N4dnnl28convolution_backward_weights14primitive_descE"]], "dnnl::convolution_backward_weights::primitive_desc::diff_bias_desc (c++ function)": [[158, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc14diff_bias_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::diff_dst_desc (c++ function)": [[158, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13diff_dst_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::diff_weights_desc (c++ function)": [[158, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc17diff_weights_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_algorithm (c++ function)": [[158, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_algorithmEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_dilations (c++ function)": [[158, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_dilationsEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_padding_l (c++ function)": [[158, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_lEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_padding_r (c++ function)": [[158, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_rEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_prop_kind (c++ function)": [[158, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_prop_kindEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_strides (c++ function)": [[158, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc11get_stridesEv"]], "dnnl::convolution_backward_weights::primitive_desc::primitive_desc (c++ function)": [[158, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::src_desc (c++ function)": [[158, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc8src_descEv"]], "dnnl::convolution_forward (c++ struct)": [[158, "_CPPv4N4dnnl19convolution_forwardE"]], "dnnl::convolution_forward::convolution_forward (c++ function)": [[158, "_CPPv4N4dnnl19convolution_forward19convolution_forwardERK14primitive_desc"], [158, "_CPPv4N4dnnl19convolution_forward19convolution_forwardEv"]], "dnnl::convolution_forward::primitive_desc (c++ struct)": [[158, "_CPPv4N4dnnl19convolution_forward14primitive_descE"]], "dnnl::convolution_forward::primitive_desc::bias_desc (c++ function)": [[158, "_CPPv4NK4dnnl19convolution_forward14primitive_desc9bias_descEv"]], "dnnl::convolution_forward::primitive_desc::dst_desc (c++ function)": [[158, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8dst_descEv"]], "dnnl::convolution_forward::primitive_desc::get_algorithm (c++ function)": [[158, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_algorithmEv"]], "dnnl::convolution_forward::primitive_desc::get_dilations (c++ function)": [[158, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_dilationsEv"]], "dnnl::convolution_forward::primitive_desc::get_padding_l (c++ function)": [[158, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_lEv"]], "dnnl::convolution_forward::primitive_desc::get_padding_r (c++ function)": [[158, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_rEv"]], "dnnl::convolution_forward::primitive_desc::get_prop_kind (c++ function)": [[158, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_prop_kindEv"]], "dnnl::convolution_forward::primitive_desc::get_strides (c++ function)": [[158, "_CPPv4NK4dnnl19convolution_forward14primitive_desc11get_stridesEv"]], "dnnl::convolution_forward::primitive_desc::primitive_desc (c++ function)": [[158, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [158, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [158, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [158, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [158, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descEv"]], "dnnl::convolution_forward::primitive_desc::src_desc (c++ function)": [[158, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8src_descEv"]], "dnnl::convolution_forward::primitive_desc::weights_desc (c++ function)": [[158, "_CPPv4NK4dnnl19convolution_forward14primitive_desc12weights_descEv"]], "dnnl::deconvolution_backward_data (c++ struct)": [[158, "_CPPv4N4dnnl27deconvolution_backward_dataE"]], "dnnl::deconvolution_backward_data::deconvolution_backward_data (c++ function)": [[158, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataERK14primitive_desc"], [158, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataEv"]], "dnnl::deconvolution_backward_data::primitive_desc (c++ struct)": [[158, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_descE"]], "dnnl::deconvolution_backward_data::primitive_desc::diff_dst_desc (c++ function)": [[158, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_dst_descEv"]], "dnnl::deconvolution_backward_data::primitive_desc::diff_src_desc (c++ function)": [[158, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_src_descEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_algorithm (c++ function)": [[158, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_algorithmEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_dilations (c++ function)": [[158, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_dilationsEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_padding_l (c++ function)": [[158, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_lEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_padding_r (c++ function)": [[158, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_rEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_prop_kind (c++ function)": [[158, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_prop_kindEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_strides (c++ function)": [[158, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc11get_stridesEv"]], "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc (c++ function)": [[158, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descEv"]], "dnnl::deconvolution_backward_data::primitive_desc::weights_desc (c++ function)": [[158, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc12weights_descEv"]], "dnnl::deconvolution_backward_weights (c++ struct)": [[158, "_CPPv4N4dnnl30deconvolution_backward_weightsE"]], "dnnl::deconvolution_backward_weights::deconvolution_backward_weights (c++ function)": [[158, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsERK14primitive_desc"], [158, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsEv"]], "dnnl::deconvolution_backward_weights::primitive_desc (c++ struct)": [[158, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_descE"]], "dnnl::deconvolution_backward_weights::primitive_desc::diff_bias_desc (c++ function)": [[158, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc14diff_bias_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::diff_dst_desc (c++ function)": [[158, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13diff_dst_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::diff_weights_desc (c++ function)": [[158, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc17diff_weights_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_algorithm (c++ function)": [[158, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_algorithmEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_dilations (c++ function)": [[158, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_dilationsEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_l (c++ function)": [[158, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_lEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_r (c++ function)": [[158, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_rEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_prop_kind (c++ function)": [[158, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_prop_kindEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_strides (c++ function)": [[158, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc11get_stridesEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc (c++ function)": [[158, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::src_desc (c++ function)": [[158, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc8src_descEv"]], "dnnl::deconvolution_forward (c++ struct)": [[158, "_CPPv4N4dnnl21deconvolution_forwardE"]], "dnnl::deconvolution_forward::deconvolution_forward (c++ function)": [[158, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardERK14primitive_desc"], [158, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardEv"]], "dnnl::deconvolution_forward::primitive_desc (c++ struct)": [[158, "_CPPv4N4dnnl21deconvolution_forward14primitive_descE"]], "dnnl::deconvolution_forward::primitive_desc::bias_desc (c++ function)": [[158, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc9bias_descEv"]], "dnnl::deconvolution_forward::primitive_desc::dst_desc (c++ function)": [[158, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8dst_descEv"]], "dnnl::deconvolution_forward::primitive_desc::get_algorithm (c++ function)": [[158, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_algorithmEv"]], "dnnl::deconvolution_forward::primitive_desc::get_dilations (c++ function)": [[158, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_dilationsEv"]], "dnnl::deconvolution_forward::primitive_desc::get_padding_l (c++ function)": [[158, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_lEv"]], "dnnl::deconvolution_forward::primitive_desc::get_padding_r (c++ function)": [[158, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_rEv"]], "dnnl::deconvolution_forward::primitive_desc::get_prop_kind (c++ function)": [[158, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_prop_kindEv"]], "dnnl::deconvolution_forward::primitive_desc::get_strides (c++ function)": [[158, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc11get_stridesEv"]], "dnnl::deconvolution_forward::primitive_desc::primitive_desc (c++ function)": [[158, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [158, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [158, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [158, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [158, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descEv"]], "dnnl::deconvolution_forward::primitive_desc::src_desc (c++ function)": [[158, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8src_descEv"]], "dnnl::deconvolution_forward::primitive_desc::weights_desc (c++ function)": [[158, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc12weights_descEv"]], "dnnl::eltwise_backward (c++ struct)": [[159, "_CPPv4N4dnnl16eltwise_backwardE"]], "dnnl::eltwise_backward::eltwise_backward (c++ function)": [[159, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardERK14primitive_desc"], [159, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardEv"]], "dnnl::eltwise_backward::primitive_desc (c++ struct)": [[159, "_CPPv4N4dnnl16eltwise_backward14primitive_descE"]], "dnnl::eltwise_backward::primitive_desc::diff_dst_desc (c++ function)": [[159, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_dst_descEv"]], "dnnl::eltwise_backward::primitive_desc::diff_src_desc (c++ function)": [[159, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_src_descEv"]], "dnnl::eltwise_backward::primitive_desc::get_algorithm (c++ function)": [[159, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_algorithmEv"]], "dnnl::eltwise_backward::primitive_desc::get_alpha (c++ function)": [[159, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc9get_alphaEv"]], "dnnl::eltwise_backward::primitive_desc::get_beta (c++ function)": [[159, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8get_betaEv"]], "dnnl::eltwise_backward::primitive_desc::get_prop_kind (c++ function)": [[159, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_prop_kindEv"]], "dnnl::eltwise_backward::primitive_desc::primitive_desc (c++ function)": [[159, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb"], [159, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb"], [159, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb"], [159, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descEv"]], "dnnl::eltwise_backward::primitive_desc::src_desc (c++ function)": [[159, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8src_descEv"]], "dnnl::eltwise_forward (c++ struct)": [[159, "_CPPv4N4dnnl15eltwise_forwardE"]], "dnnl::eltwise_forward::eltwise_forward (c++ function)": [[159, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardERK14primitive_desc"], [159, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardEv"]], "dnnl::eltwise_forward::primitive_desc (c++ struct)": [[159, "_CPPv4N4dnnl15eltwise_forward14primitive_descE"]], "dnnl::eltwise_forward::primitive_desc::dst_desc (c++ function)": [[159, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8dst_descEv"]], "dnnl::eltwise_forward::primitive_desc::get_algorithm (c++ function)": [[159, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_algorithmEv"]], "dnnl::eltwise_forward::primitive_desc::get_alpha (c++ function)": [[159, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc9get_alphaEv"]], "dnnl::eltwise_forward::primitive_desc::get_beta (c++ function)": [[159, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8get_betaEv"]], "dnnl::eltwise_forward::primitive_desc::get_prop_kind (c++ function)": [[159, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_prop_kindEv"]], "dnnl::eltwise_forward::primitive_desc::primitive_desc (c++ function)": [[159, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb"], [159, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb"], [159, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb"], [159, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descEv"]], "dnnl::eltwise_forward::primitive_desc::src_desc (c++ function)": [[159, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8src_descEv"]], "dnnl_arg_attr_scales (c macro)": [[160, "c.DNNL_ARG_ATTR_SCALES"]], "dnnl_arg_attr_zero_points (c macro)": [[160, "c.DNNL_ARG_ATTR_ZERO_POINTS"]], "dnnl_arg_bias (c macro)": [[160, "c.DNNL_ARG_BIAS"]], "dnnl_arg_diff_bias (c macro)": [[160, "c.DNNL_ARG_DIFF_BIAS"]], "dnnl_arg_diff_dst (c macro)": [[160, "c.DNNL_ARG_DIFF_DST"]], "dnnl_arg_diff_dst_0 (c macro)": [[160, "c.DNNL_ARG_DIFF_DST_0"]], "dnnl_arg_diff_dst_1 (c macro)": [[160, "c.DNNL_ARG_DIFF_DST_1"]], "dnnl_arg_diff_dst_2 (c macro)": [[160, "c.DNNL_ARG_DIFF_DST_2"]], "dnnl_arg_diff_dst_iter (c macro)": [[160, "c.DNNL_ARG_DIFF_DST_ITER"]], "dnnl_arg_diff_dst_iter_c (c macro)": [[160, "c.DNNL_ARG_DIFF_DST_ITER_C"]], "dnnl_arg_diff_dst_layer (c macro)": [[160, "c.DNNL_ARG_DIFF_DST_LAYER"]], "dnnl_arg_diff_scale (c macro)": [[160, "c.DNNL_ARG_DIFF_SCALE"]], "dnnl_arg_diff_shift (c macro)": [[160, "c.DNNL_ARG_DIFF_SHIFT"]], "dnnl_arg_diff_src (c macro)": [[160, "c.DNNL_ARG_DIFF_SRC"]], "dnnl_arg_diff_src_0 (c macro)": [[160, "c.DNNL_ARG_DIFF_SRC_0"]], "dnnl_arg_diff_src_1 (c macro)": [[160, "c.DNNL_ARG_DIFF_SRC_1"]], "dnnl_arg_diff_src_2 (c macro)": [[160, "c.DNNL_ARG_DIFF_SRC_2"]], "dnnl_arg_diff_src_iter (c macro)": [[160, "c.DNNL_ARG_DIFF_SRC_ITER"]], "dnnl_arg_diff_src_iter_c (c macro)": [[160, "c.DNNL_ARG_DIFF_SRC_ITER_C"]], "dnnl_arg_diff_src_layer (c macro)": [[160, "c.DNNL_ARG_DIFF_SRC_LAYER"]], "dnnl_arg_diff_weights (c macro)": [[160, "c.DNNL_ARG_DIFF_WEIGHTS"]], "dnnl_arg_diff_weights_0 (c macro)": [[160, "c.DNNL_ARG_DIFF_WEIGHTS_0"]], "dnnl_arg_diff_weights_1 (c macro)": [[160, "c.DNNL_ARG_DIFF_WEIGHTS_1"]], "dnnl_arg_diff_weights_iter (c macro)": [[160, "c.DNNL_ARG_DIFF_WEIGHTS_ITER"]], "dnnl_arg_diff_weights_layer (c macro)": [[160, "c.DNNL_ARG_DIFF_WEIGHTS_LAYER"]], "dnnl_arg_dst (c macro)": [[160, "c.DNNL_ARG_DST"]], "dnnl_arg_dst_0 (c macro)": [[160, "c.DNNL_ARG_DST_0"]], "dnnl_arg_dst_1 (c macro)": [[160, "c.DNNL_ARG_DST_1"]], "dnnl_arg_dst_2 (c macro)": [[160, "c.DNNL_ARG_DST_2"]], "dnnl_arg_dst_iter (c macro)": [[160, "c.DNNL_ARG_DST_ITER"]], "dnnl_arg_dst_iter_c (c macro)": [[160, "c.DNNL_ARG_DST_ITER_C"]], "dnnl_arg_dst_layer (c macro)": [[160, "c.DNNL_ARG_DST_LAYER"]], "dnnl_arg_from (c macro)": [[160, "c.DNNL_ARG_FROM"]], "dnnl_arg_mean (c macro)": [[160, "c.DNNL_ARG_MEAN"]], "dnnl_arg_multiple_dst (c macro)": [[160, "c.DNNL_ARG_MULTIPLE_DST"]], "dnnl_arg_multiple_src (c macro)": [[160, "c.DNNL_ARG_MULTIPLE_SRC"]], "dnnl_arg_scale (c macro)": [[160, "c.DNNL_ARG_SCALE"]], "dnnl_arg_scratchpad (c macro)": [[160, "c.DNNL_ARG_SCRATCHPAD"]], "dnnl_arg_shift (c macro)": [[160, "c.DNNL_ARG_SHIFT"]], "dnnl_arg_src (c macro)": [[160, "c.DNNL_ARG_SRC"]], "dnnl_arg_src_0 (c macro)": [[160, "c.DNNL_ARG_SRC_0"]], "dnnl_arg_src_1 (c macro)": [[160, "c.DNNL_ARG_SRC_1"]], "dnnl_arg_src_2 (c macro)": [[160, "c.DNNL_ARG_SRC_2"]], "dnnl_arg_src_iter (c macro)": [[160, "c.DNNL_ARG_SRC_ITER"]], "dnnl_arg_src_iter_c (c macro)": [[160, "c.DNNL_ARG_SRC_ITER_C"]], "dnnl_arg_src_layer (c macro)": [[160, "c.DNNL_ARG_SRC_LAYER"]], "dnnl_arg_to (c macro)": [[160, "c.DNNL_ARG_TO"]], "dnnl_arg_variance (c macro)": [[160, "c.DNNL_ARG_VARIANCE"]], "dnnl_arg_weights (c macro)": [[160, "c.DNNL_ARG_WEIGHTS"]], "dnnl_arg_weights_0 (c macro)": [[160, "c.DNNL_ARG_WEIGHTS_0"]], "dnnl_arg_weights_1 (c macro)": [[160, "c.DNNL_ARG_WEIGHTS_1"]], "dnnl_arg_weights_iter (c macro)": [[160, "c.DNNL_ARG_WEIGHTS_ITER"]], "dnnl_arg_weights_layer (c macro)": [[160, "c.DNNL_ARG_WEIGHTS_LAYER"]], "dnnl_arg_workspace (c macro)": [[160, "c.DNNL_ARG_WORKSPACE"]], "dnnl_runtime_dim_val (c macro)": [[160, "c.DNNL_RUNTIME_DIM_VAL"]], "dnnl_runtime_f32_val (c macro)": [[160, "c.DNNL_RUNTIME_F32_VAL"]], "dnnl_runtime_s32_val (c macro)": [[160, "c.DNNL_RUNTIME_S32_VAL"]], "dnnl_runtime_size_val (c macro)": [[160, "c.DNNL_RUNTIME_SIZE_VAL"]], "dnnl::algorithm (c++ enum)": [[160, "_CPPv4N4dnnl9algorithmE"]], "dnnl::algorithm::binary_add (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm10binary_addE"]], "dnnl::algorithm::binary_div (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm10binary_divE"]], "dnnl::algorithm::binary_eq (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm9binary_eqE"]], "dnnl::algorithm::binary_ge (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm9binary_geE"]], "dnnl::algorithm::binary_gt (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm9binary_gtE"]], "dnnl::algorithm::binary_le (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm9binary_leE"]], "dnnl::algorithm::binary_lt (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm9binary_ltE"]], "dnnl::algorithm::binary_max (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm10binary_maxE"]], "dnnl::algorithm::binary_min (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm10binary_minE"]], "dnnl::algorithm::binary_mul (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm10binary_mulE"]], "dnnl::algorithm::binary_ne (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm9binary_neE"]], "dnnl::algorithm::binary_sub (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm10binary_subE"]], "dnnl::algorithm::convolution_auto (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm16convolution_autoE"]], "dnnl::algorithm::convolution_direct (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm18convolution_directE"]], "dnnl::algorithm::convolution_winograd (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm20convolution_winogradE"]], "dnnl::algorithm::deconvolution_direct (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm20deconvolution_directE"]], "dnnl::algorithm::deconvolution_winograd (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm22deconvolution_winogradE"]], "dnnl::algorithm::eltwise_abs (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm11eltwise_absE"]], "dnnl::algorithm::eltwise_bounded_relu (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm20eltwise_bounded_reluE"]], "dnnl::algorithm::eltwise_clip (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm12eltwise_clipE"]], "dnnl::algorithm::eltwise_clip_use_dst_for_bwd (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm28eltwise_clip_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_elu (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm11eltwise_eluE"]], "dnnl::algorithm::eltwise_elu_use_dst_for_bwd (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm27eltwise_elu_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_exp (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm11eltwise_expE"]], "dnnl::algorithm::eltwise_exp_use_dst_for_bwd (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm27eltwise_exp_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_gelu (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm12eltwise_geluE"]], "dnnl::algorithm::eltwise_gelu_erf (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm16eltwise_gelu_erfE"]], "dnnl::algorithm::eltwise_gelu_tanh (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm17eltwise_gelu_tanhE"]], "dnnl::algorithm::eltwise_hardsigmoid (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm19eltwise_hardsigmoidE"]], "dnnl::algorithm::eltwise_hardswish (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm17eltwise_hardswishE"]], "dnnl::algorithm::eltwise_linear (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm14eltwise_linearE"]], "dnnl::algorithm::eltwise_log (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm11eltwise_logE"]], "dnnl::algorithm::eltwise_logistic (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm16eltwise_logisticE"]], "dnnl::algorithm::eltwise_logistic_use_dst_for_bwd (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm32eltwise_logistic_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_mish (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm12eltwise_mishE"]], "dnnl::algorithm::eltwise_pow (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm11eltwise_powE"]], "dnnl::algorithm::eltwise_relu (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm12eltwise_reluE"]], "dnnl::algorithm::eltwise_relu_use_dst_for_bwd (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm28eltwise_relu_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_round (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm13eltwise_roundE"]], "dnnl::algorithm::eltwise_soft_relu (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm17eltwise_soft_reluE"]], "dnnl::algorithm::eltwise_sqrt (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm12eltwise_sqrtE"]], "dnnl::algorithm::eltwise_sqrt_use_dst_for_bwd (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm28eltwise_sqrt_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_square (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm14eltwise_squareE"]], "dnnl::algorithm::eltwise_swish (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm13eltwise_swishE"]], "dnnl::algorithm::eltwise_tanh (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm12eltwise_tanhE"]], "dnnl::algorithm::eltwise_tanh_use_dst_for_bwd (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm28eltwise_tanh_use_dst_for_bwdE"]], "dnnl::algorithm::lbr_gru (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm7lbr_gruE"]], "dnnl::algorithm::lrn_across_channels (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm19lrn_across_channelsE"]], "dnnl::algorithm::lrn_within_channel (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm18lrn_within_channelE"]], "dnnl::algorithm::pooling_avg (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm11pooling_avgE"]], "dnnl::algorithm::pooling_avg_exclude_padding (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm27pooling_avg_exclude_paddingE"]], "dnnl::algorithm::pooling_avg_include_padding (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm27pooling_avg_include_paddingE"]], "dnnl::algorithm::pooling_max (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm11pooling_maxE"]], "dnnl::algorithm::reduction_max (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm13reduction_maxE"]], "dnnl::algorithm::reduction_mean (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm14reduction_meanE"]], "dnnl::algorithm::reduction_min (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm13reduction_minE"]], "dnnl::algorithm::reduction_mul (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm13reduction_mulE"]], "dnnl::algorithm::reduction_norm_lp_max (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_maxE"]], "dnnl::algorithm::reduction_norm_lp_power_p_max (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_maxE"]], "dnnl::algorithm::reduction_norm_lp_power_p_sum (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_sumE"]], "dnnl::algorithm::reduction_norm_lp_sum (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_sumE"]], "dnnl::algorithm::reduction_sum (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm13reduction_sumE"]], "dnnl::algorithm::resampling_linear (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm17resampling_linearE"]], "dnnl::algorithm::resampling_nearest (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm18resampling_nearestE"]], "dnnl::algorithm::softmax_accurate (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm16softmax_accurateE"]], "dnnl::algorithm::softmax_log (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm11softmax_logE"]], "dnnl::algorithm::undef (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm5undefE"]], "dnnl::algorithm::vanilla_gru (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm11vanilla_gruE"]], "dnnl::algorithm::vanilla_lstm (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm12vanilla_lstmE"]], "dnnl::algorithm::vanilla_rnn (c++ enumerator)": [[160, "_CPPv4N4dnnl9algorithm11vanilla_rnnE"]], "dnnl::normalization_flags (c++ enum)": [[160, "_CPPv4N4dnnl19normalization_flagsE"]], "dnnl::normalization_flags::fuse_norm_relu (c++ enumerator)": [[160, "_CPPv4N4dnnl19normalization_flags14fuse_norm_reluE"]], "dnnl::normalization_flags::none (c++ enumerator)": [[160, "_CPPv4N4dnnl19normalization_flags4noneE"]], "dnnl::normalization_flags::use_global_stats (c++ enumerator)": [[160, "_CPPv4N4dnnl19normalization_flags16use_global_statsE"]], "dnnl::normalization_flags::use_scale (c++ enumerator)": [[160, "_CPPv4N4dnnl19normalization_flags9use_scaleE"]], "dnnl::normalization_flags::use_shift (c++ enumerator)": [[160, "_CPPv4N4dnnl19normalization_flags9use_shiftE"]], "dnnl::primitive (c++ struct)": [[160, "_CPPv4N4dnnl9primitiveE"]], "dnnl::primitive::execute (c++ function)": [[160, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE"]], "dnnl::primitive::get_kind (c++ function)": [[160, "_CPPv4NK4dnnl9primitive8get_kindEv"]], "dnnl::primitive::kind (c++ enum)": [[160, "_CPPv4N4dnnl9primitive4kindE"]], "dnnl::primitive::kind::batch_normalization (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind19batch_normalizationE"]], "dnnl::primitive::kind::binary (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind6binaryE"]], "dnnl::primitive::kind::concat (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind6concatE"]], "dnnl::primitive::kind::convolution (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind11convolutionE"]], "dnnl::primitive::kind::deconvolution (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind13deconvolutionE"]], "dnnl::primitive::kind::eltwise (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind7eltwiseE"]], "dnnl::primitive::kind::inner_product (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind13inner_productE"]], "dnnl::primitive::kind::layer_normalization (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind19layer_normalizationE"]], "dnnl::primitive::kind::lrn (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind3lrnE"]], "dnnl::primitive::kind::matmul (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind6matmulE"]], "dnnl::primitive::kind::pooling (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind7poolingE"]], "dnnl::primitive::kind::prelu (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind5preluE"]], "dnnl::primitive::kind::reorder (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind7reorderE"]], "dnnl::primitive::kind::resampling (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind10resamplingE"]], "dnnl::primitive::kind::rnn (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind3rnnE"]], "dnnl::primitive::kind::shuffle (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind7shuffleE"]], "dnnl::primitive::kind::softmax (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind7softmaxE"]], "dnnl::primitive::kind::sum (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind3sumE"]], "dnnl::primitive::kind::undef (c++ enumerator)": [[160, "_CPPv4N4dnnl9primitive4kind5undefE"]], "dnnl::primitive::operator= (c++ function)": [[160, "_CPPv4N4dnnl9primitiveaSERK9primitive"]], "dnnl::primitive::primitive (c++ function)": [[160, "_CPPv4N4dnnl9primitive9primitiveERK19primitive_desc_base"], [160, "_CPPv4N4dnnl9primitive9primitiveEv"]], "dnnl::primitive_desc (c++ struct)": [[160, "_CPPv4N4dnnl14primitive_descE"]], "dnnl::primitive_desc::next_impl (c++ function)": [[160, "_CPPv4N4dnnl14primitive_desc9next_implEv"]], "dnnl::primitive_desc::primitive_desc (c++ function)": [[160, "_CPPv4N4dnnl14primitive_desc14primitive_descEv"]], "dnnl::primitive_desc_base (c++ struct)": [[160, "_CPPv4N4dnnl19primitive_desc_baseE"]], "dnnl::primitive_desc_base::bias_desc (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base9bias_descEv"]], "dnnl::primitive_desc_base::diff_dst_desc (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEi"], [160, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEv"]], "dnnl::primitive_desc_base::diff_src_desc (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEi"], [160, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEv"]], "dnnl::primitive_desc_base::diff_weights_desc (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEi"], [160, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEv"]], "dnnl::primitive_desc_base::dst_desc (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEi"], [160, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEv"]], "dnnl::primitive_desc_base::get_activation_kind (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base19get_activation_kindEv"]], "dnnl::primitive_desc_base::get_algorithm (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base13get_algorithmEv"]], "dnnl::primitive_desc_base::get_alpha (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base9get_alphaEv"]], "dnnl::primitive_desc_base::get_axis (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base8get_axisEv"]], "dnnl::primitive_desc_base::get_beta (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base8get_betaEv"]], "dnnl::primitive_desc_base::get_cell_kind (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base13get_cell_kindEv"]], "dnnl::primitive_desc_base::get_dilations (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base13get_dilationsEv"]], "dnnl::primitive_desc_base::get_direction (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base13get_directionEv"]], "dnnl::primitive_desc_base::get_engine (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base10get_engineEv"]], "dnnl::primitive_desc_base::get_epsilon (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base11get_epsilonEv"]], "dnnl::primitive_desc_base::get_factors (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base11get_factorsEv"]], "dnnl::primitive_desc_base::get_flags (c++ function)": [[160, "_CPPv4I0ENK4dnnl19primitive_desc_base9get_flagsE1Tv"]], "dnnl::primitive_desc_base::get_group_size (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base14get_group_sizeEv"]], "dnnl::primitive_desc_base::get_k (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base5get_kEv"]], "dnnl::primitive_desc_base::get_kernel (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base10get_kernelEv"]], "dnnl::primitive_desc_base::get_kind (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base8get_kindEv"]], "dnnl::primitive_desc_base::get_local_size (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base14get_local_sizeEv"]], "dnnl::primitive_desc_base::get_p (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base5get_pEv"]], "dnnl::primitive_desc_base::get_padding_l (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_lEv"]], "dnnl::primitive_desc_base::get_padding_r (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_rEv"]], "dnnl::primitive_desc_base::get_primitive_attr (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base18get_primitive_attrEv"]], "dnnl::primitive_desc_base::get_prop_kind (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base13get_prop_kindEv"]], "dnnl::primitive_desc_base::get_strides (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base11get_stridesEv"]], "dnnl::primitive_desc_base::impl_info_str (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base13impl_info_strEv"]], "dnnl::primitive_desc_base::primitive_desc_base (c++ function)": [[160, "_CPPv4N4dnnl19primitive_desc_base19primitive_desc_baseEv"]], "dnnl::primitive_desc_base::query_md (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi"]], "dnnl::primitive_desc_base::query_s64 (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base9query_s64E5query"]], "dnnl::primitive_desc_base::scratchpad_desc (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base15scratchpad_descEv"]], "dnnl::primitive_desc_base::scratchpad_engine (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base17scratchpad_engineEv"]], "dnnl::primitive_desc_base::src_desc (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base8src_descEi"], [160, "_CPPv4NK4dnnl19primitive_desc_base8src_descEv"]], "dnnl::primitive_desc_base::weights_desc (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEi"], [160, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEv"]], "dnnl::primitive_desc_base::workspace_desc (c++ function)": [[160, "_CPPv4NK4dnnl19primitive_desc_base14workspace_descEv"]], "dnnl::prop_kind (c++ enum)": [[160, "_CPPv4N4dnnl9prop_kindE"]], "dnnl::prop_kind::backward (c++ enumerator)": [[160, "_CPPv4N4dnnl9prop_kind8backwardE"]], "dnnl::prop_kind::backward_bias (c++ enumerator)": [[160, "_CPPv4N4dnnl9prop_kind13backward_biasE"]], "dnnl::prop_kind::backward_data (c++ enumerator)": [[160, "_CPPv4N4dnnl9prop_kind13backward_dataE"]], "dnnl::prop_kind::backward_weights (c++ enumerator)": [[160, "_CPPv4N4dnnl9prop_kind16backward_weightsE"]], "dnnl::prop_kind::forward (c++ enumerator)": [[160, "_CPPv4N4dnnl9prop_kind7forwardE"]], "dnnl::prop_kind::forward_inference (c++ enumerator)": [[160, "_CPPv4N4dnnl9prop_kind17forward_inferenceE"]], "dnnl::prop_kind::forward_scoring (c++ enumerator)": [[160, "_CPPv4N4dnnl9prop_kind15forward_scoringE"]], "dnnl::prop_kind::forward_training (c++ enumerator)": [[160, "_CPPv4N4dnnl9prop_kind16forward_trainingE"]], "dnnl::prop_kind::undef (c++ enumerator)": [[160, "_CPPv4N4dnnl9prop_kind5undefE"]], "dnnl::rnn_primitive_desc_base (c++ struct)": [[160, "_CPPv4N4dnnl23rnn_primitive_desc_baseE"]], "dnnl::rnn_primitive_desc_base::augru_attention_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base20augru_attention_descEv"]], "dnnl::rnn_primitive_desc_base::bias_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base9bias_descEv"]], "dnnl::rnn_primitive_desc_base::diff_augru_attention_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base25diff_augru_attention_descEv"]], "dnnl::rnn_primitive_desc_base::diff_bias_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base14diff_bias_descEv"]], "dnnl::rnn_primitive_desc_base::diff_dst_iter_c_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_dst_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::diff_dst_iter_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_dst_iter_descEv"]], "dnnl::rnn_primitive_desc_base::diff_dst_layer_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_dst_layer_descEv"]], "dnnl::rnn_primitive_desc_base::diff_src_iter_c_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_src_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::diff_src_iter_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_src_iter_descEv"]], "dnnl::rnn_primitive_desc_base::diff_src_layer_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_src_layer_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_iter_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base22diff_weights_iter_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_layer_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base23diff_weights_layer_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_peephole_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base26diff_weights_peephole_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_projection_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base28diff_weights_projection_descEv"]], "dnnl::rnn_primitive_desc_base::dst_iter_c_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base15dst_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::dst_iter_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base13dst_iter_descEv"]], "dnnl::rnn_primitive_desc_base::dst_layer_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base14dst_layer_descEv"]], "dnnl::rnn_primitive_desc_base::rnn_primitive_desc_base (c++ function)": [[160, "_CPPv4N4dnnl23rnn_primitive_desc_base23rnn_primitive_desc_baseEv"]], "dnnl::rnn_primitive_desc_base::src_iter_c_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base15src_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::src_iter_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base13src_iter_descEv"]], "dnnl::rnn_primitive_desc_base::src_layer_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base14src_layer_descEv"]], "dnnl::rnn_primitive_desc_base::weights_iter_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base17weights_iter_descEv"]], "dnnl::rnn_primitive_desc_base::weights_layer_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base18weights_layer_descEv"]], "dnnl::rnn_primitive_desc_base::weights_peephole_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base21weights_peephole_descEv"]], "dnnl::rnn_primitive_desc_base::weights_projection_desc (c++ function)": [[160, "_CPPv4NK4dnnl23rnn_primitive_desc_base23weights_projection_descEv"]], "dnnl::sycl_interop::execute (c++ function)": [[160, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE"]], "dnnl::inner_product_backward_data (c++ struct)": [[162, "_CPPv4N4dnnl27inner_product_backward_dataE"]], "dnnl::inner_product_backward_data::inner_product_backward_data (c++ function)": [[162, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataERK14primitive_desc"], [162, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataEv"]], "dnnl::inner_product_backward_data::primitive_desc (c++ struct)": [[162, "_CPPv4N4dnnl27inner_product_backward_data14primitive_descE"]], "dnnl::inner_product_backward_data::primitive_desc::diff_dst_desc (c++ function)": [[162, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_dst_descEv"]], "dnnl::inner_product_backward_data::primitive_desc::diff_src_desc (c++ function)": [[162, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_src_descEv"]], "dnnl::inner_product_backward_data::primitive_desc::get_prop_kind (c++ function)": [[162, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13get_prop_kindEv"]], "dnnl::inner_product_backward_data::primitive_desc::primitive_desc (c++ function)": [[162, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb"], [162, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descEv"]], "dnnl::inner_product_backward_data::primitive_desc::weights_desc (c++ function)": [[162, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc12weights_descEv"]], "dnnl::inner_product_backward_weights (c++ struct)": [[162, "_CPPv4N4dnnl30inner_product_backward_weightsE"]], "dnnl::inner_product_backward_weights::inner_product_backward_weights (c++ function)": [[162, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsERK14primitive_desc"], [162, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsEv"]], "dnnl::inner_product_backward_weights::primitive_desc (c++ struct)": [[162, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_descE"]], "dnnl::inner_product_backward_weights::primitive_desc::diff_bias_desc (c++ function)": [[162, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc14diff_bias_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::diff_dst_desc (c++ function)": [[162, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13diff_dst_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::diff_weights_desc (c++ function)": [[162, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc17diff_weights_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::get_prop_kind (c++ function)": [[162, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13get_prop_kindEv"]], "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc (c++ function)": [[162, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb"], [162, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb"], [162, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::src_desc (c++ function)": [[162, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc8src_descEv"]], "dnnl::inner_product_forward (c++ struct)": [[162, "_CPPv4N4dnnl21inner_product_forwardE"]], "dnnl::inner_product_forward::inner_product_forward (c++ function)": [[162, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardERK14primitive_desc"], [162, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardEv"]], "dnnl::inner_product_forward::primitive_desc (c++ struct)": [[162, "_CPPv4N4dnnl21inner_product_forward14primitive_descE"]], "dnnl::inner_product_forward::primitive_desc::bias_desc (c++ function)": [[162, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc9bias_descEv"]], "dnnl::inner_product_forward::primitive_desc::dst_desc (c++ function)": [[162, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8dst_descEv"]], "dnnl::inner_product_forward::primitive_desc::get_prop_kind (c++ function)": [[162, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc13get_prop_kindEv"]], "dnnl::inner_product_forward::primitive_desc::primitive_desc (c++ function)": [[162, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [162, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [162, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descEv"]], "dnnl::inner_product_forward::primitive_desc::src_desc (c++ function)": [[162, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8src_descEv"]], "dnnl::inner_product_forward::primitive_desc::weights_desc (c++ function)": [[162, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc12weights_descEv"]], "dnnl::layer_normalization_backward (c++ struct)": [[163, "_CPPv4N4dnnl28layer_normalization_backwardE"]], "dnnl::layer_normalization_backward::layer_normalization_backward (c++ function)": [[163, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardERK14primitive_desc"], [163, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardEv"]], "dnnl::layer_normalization_backward::primitive_desc (c++ struct)": [[163, "_CPPv4N4dnnl28layer_normalization_backward14primitive_descE"]], "dnnl::layer_normalization_backward::primitive_desc::diff_dst_desc (c++ function)": [[163, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_dst_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::diff_src_desc (c++ function)": [[163, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_src_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::diff_weights_desc (c++ function)": [[163, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc17diff_weights_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::dst_desc (c++ function)": [[163, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8dst_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::get_epsilon (c++ function)": [[163, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc11get_epsilonEv"]], "dnnl::layer_normalization_backward::primitive_desc::get_flags (c++ function)": [[163, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9get_flagsEv"]], "dnnl::layer_normalization_backward::primitive_desc::get_prop_kind (c++ function)": [[163, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13get_prop_kindEv"]], "dnnl::layer_normalization_backward::primitive_desc::mean_desc (c++ function)": [[163, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9mean_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::primitive_desc (c++ function)": [[163, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb"], [163, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb"], [163, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::src_desc (c++ function)": [[163, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8src_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::variance_desc (c++ function)": [[163, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13variance_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::weights_desc (c++ function)": [[163, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc12weights_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::workspace_desc (c++ function)": [[163, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc14workspace_descEv"]], "dnnl::layer_normalization_forward (c++ struct)": [[163, "_CPPv4N4dnnl27layer_normalization_forwardE"]], "dnnl::layer_normalization_forward::layer_normalization_forward (c++ function)": [[163, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardERK14primitive_desc"], [163, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardEv"]], "dnnl::layer_normalization_forward::primitive_desc (c++ struct)": [[163, "_CPPv4N4dnnl27layer_normalization_forward14primitive_descE"]], "dnnl::layer_normalization_forward::primitive_desc::dst_desc (c++ function)": [[163, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8dst_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::get_epsilon (c++ function)": [[163, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc11get_epsilonEv"]], "dnnl::layer_normalization_forward::primitive_desc::get_flags (c++ function)": [[163, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9get_flagsEv"]], "dnnl::layer_normalization_forward::primitive_desc::get_prop_kind (c++ function)": [[163, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13get_prop_kindEv"]], "dnnl::layer_normalization_forward::primitive_desc::mean_desc (c++ function)": [[163, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9mean_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::primitive_desc (c++ function)": [[163, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb"], [163, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb"], [163, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::src_desc (c++ function)": [[163, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8src_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::variance_desc (c++ function)": [[163, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13variance_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::weights_desc (c++ function)": [[163, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc12weights_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::workspace_desc (c++ function)": [[163, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc14workspace_descEv"]], "dnnl::lrn_backward (c++ struct)": [[164, "_CPPv4N4dnnl12lrn_backwardE"]], "dnnl::lrn_backward::lrn_backward (c++ function)": [[164, "_CPPv4N4dnnl12lrn_backward12lrn_backwardERK14primitive_desc"], [164, "_CPPv4N4dnnl12lrn_backward12lrn_backwardEv"]], "dnnl::lrn_backward::primitive_desc (c++ struct)": [[164, "_CPPv4N4dnnl12lrn_backward14primitive_descE"]], "dnnl::lrn_backward::primitive_desc::diff_dst_desc (c++ function)": [[164, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_dst_descEv"]], "dnnl::lrn_backward::primitive_desc::diff_src_desc (c++ function)": [[164, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_src_descEv"]], "dnnl::lrn_backward::primitive_desc::get_algorithm (c++ function)": [[164, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_algorithmEv"]], "dnnl::lrn_backward::primitive_desc::get_alpha (c++ function)": [[164, "_CPPv4NK4dnnl12lrn_backward14primitive_desc9get_alphaEv"]], "dnnl::lrn_backward::primitive_desc::get_beta (c++ function)": [[164, "_CPPv4NK4dnnl12lrn_backward14primitive_desc8get_betaEv"]], "dnnl::lrn_backward::primitive_desc::get_k (c++ function)": [[164, "_CPPv4NK4dnnl12lrn_backward14primitive_desc5get_kEv"]], "dnnl::lrn_backward::primitive_desc::get_local_size (c++ function)": [[164, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14get_local_sizeEv"]], "dnnl::lrn_backward::primitive_desc::get_prop_kind (c++ function)": [[164, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_prop_kindEv"]], "dnnl::lrn_backward::primitive_desc::primitive_desc (c++ function)": [[164, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb"], [164, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descEv"]], "dnnl::lrn_backward::primitive_desc::workspace_desc (c++ function)": [[164, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14workspace_descEv"]], "dnnl::lrn_forward (c++ struct)": [[164, "_CPPv4N4dnnl11lrn_forwardE"]], "dnnl::lrn_forward::lrn_forward (c++ function)": [[164, "_CPPv4N4dnnl11lrn_forward11lrn_forwardERK14primitive_desc"], [164, "_CPPv4N4dnnl11lrn_forward11lrn_forwardEv"]], "dnnl::lrn_forward::primitive_desc (c++ struct)": [[164, "_CPPv4N4dnnl11lrn_forward14primitive_descE"]], "dnnl::lrn_forward::primitive_desc::dst_desc (c++ function)": [[164, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8dst_descEv"]], "dnnl::lrn_forward::primitive_desc::get_algorithm (c++ function)": [[164, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_algorithmEv"]], "dnnl::lrn_forward::primitive_desc::get_alpha (c++ function)": [[164, "_CPPv4NK4dnnl11lrn_forward14primitive_desc9get_alphaEv"]], "dnnl::lrn_forward::primitive_desc::get_beta (c++ function)": [[164, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8get_betaEv"]], "dnnl::lrn_forward::primitive_desc::get_k (c++ function)": [[164, "_CPPv4NK4dnnl11lrn_forward14primitive_desc5get_kEv"]], "dnnl::lrn_forward::primitive_desc::get_local_size (c++ function)": [[164, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14get_local_sizeEv"]], "dnnl::lrn_forward::primitive_desc::get_prop_kind (c++ function)": [[164, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_prop_kindEv"]], "dnnl::lrn_forward::primitive_desc::primitive_desc (c++ function)": [[164, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb"], [164, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descEv"]], "dnnl::lrn_forward::primitive_desc::src_desc (c++ function)": [[164, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8src_descEv"]], "dnnl::lrn_forward::primitive_desc::workspace_desc (c++ function)": [[164, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14workspace_descEv"]], "dnnl::matmul (c++ struct)": [[165, "_CPPv4N4dnnl6matmulE"]], "dnnl::matmul::matmul (c++ function)": [[165, "_CPPv4N4dnnl6matmul6matmulERK14primitive_desc"], [165, "_CPPv4N4dnnl6matmul6matmulEv"]], "dnnl::matmul::primitive_desc (c++ struct)": [[165, "_CPPv4N4dnnl6matmul14primitive_descE"]], "dnnl::matmul::primitive_desc::bias_desc (c++ function)": [[165, "_CPPv4NK4dnnl6matmul14primitive_desc9bias_descEv"]], "dnnl::matmul::primitive_desc::dst_desc (c++ function)": [[165, "_CPPv4NK4dnnl6matmul14primitive_desc8dst_descEv"]], "dnnl::matmul::primitive_desc::primitive_desc (c++ function)": [[165, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [165, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [165, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descEv"]], "dnnl::matmul::primitive_desc::src_desc (c++ function)": [[165, "_CPPv4NK4dnnl6matmul14primitive_desc8src_descEv"]], "dnnl::matmul::primitive_desc::weights_desc (c++ function)": [[165, "_CPPv4NK4dnnl6matmul14primitive_desc12weights_descEv"]], "dnnl::pooling_backward (c++ struct)": [[166, "_CPPv4N4dnnl16pooling_backwardE"]], "dnnl::pooling_backward::pooling_backward (c++ function)": [[166, "_CPPv4N4dnnl16pooling_backward16pooling_backwardERK14primitive_desc"], [166, "_CPPv4N4dnnl16pooling_backward16pooling_backwardEv"]], "dnnl::pooling_backward::primitive_desc (c++ struct)": [[166, "_CPPv4N4dnnl16pooling_backward14primitive_descE"]], "dnnl::pooling_backward::primitive_desc::diff_dst_desc (c++ function)": [[166, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_dst_descEv"]], "dnnl::pooling_backward::primitive_desc::diff_src_desc (c++ function)": [[166, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_src_descEv"]], "dnnl::pooling_backward::primitive_desc::get_algorithm (c++ function)": [[166, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_algorithmEv"]], "dnnl::pooling_backward::primitive_desc::get_dilations (c++ function)": [[166, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_dilationsEv"]], "dnnl::pooling_backward::primitive_desc::get_kernel (c++ function)": [[166, "_CPPv4NK4dnnl16pooling_backward14primitive_desc10get_kernelEv"]], "dnnl::pooling_backward::primitive_desc::get_padding_l (c++ function)": [[166, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_lEv"]], "dnnl::pooling_backward::primitive_desc::get_padding_r (c++ function)": [[166, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_rEv"]], "dnnl::pooling_backward::primitive_desc::get_prop_kind (c++ function)": [[166, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_prop_kindEv"]], "dnnl::pooling_backward::primitive_desc::get_strides (c++ function)": [[166, "_CPPv4NK4dnnl16pooling_backward14primitive_desc11get_stridesEv"]], "dnnl::pooling_backward::primitive_desc::primitive_desc (c++ function)": [[166, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb"], [166, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descEv"]], "dnnl::pooling_backward::primitive_desc::workspace_desc (c++ function)": [[166, "_CPPv4NK4dnnl16pooling_backward14primitive_desc14workspace_descEv"]], "dnnl::pooling_forward (c++ struct)": [[166, "_CPPv4N4dnnl15pooling_forwardE"]], "dnnl::pooling_forward::pooling_forward (c++ function)": [[166, "_CPPv4N4dnnl15pooling_forward15pooling_forwardERK14primitive_desc"], [166, "_CPPv4N4dnnl15pooling_forward15pooling_forwardEv"]], "dnnl::pooling_forward::primitive_desc (c++ struct)": [[166, "_CPPv4N4dnnl15pooling_forward14primitive_descE"]], "dnnl::pooling_forward::primitive_desc::dst_desc (c++ function)": [[166, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8dst_descEv"]], "dnnl::pooling_forward::primitive_desc::get_algorithm (c++ function)": [[166, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_algorithmEv"]], "dnnl::pooling_forward::primitive_desc::get_dilations (c++ function)": [[166, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_dilationsEv"]], "dnnl::pooling_forward::primitive_desc::get_kernel (c++ function)": [[166, "_CPPv4NK4dnnl15pooling_forward14primitive_desc10get_kernelEv"]], "dnnl::pooling_forward::primitive_desc::get_padding_l (c++ function)": [[166, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_lEv"]], "dnnl::pooling_forward::primitive_desc::get_padding_r (c++ function)": [[166, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_rEv"]], "dnnl::pooling_forward::primitive_desc::get_prop_kind (c++ function)": [[166, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_prop_kindEv"]], "dnnl::pooling_forward::primitive_desc::get_strides (c++ function)": [[166, "_CPPv4NK4dnnl15pooling_forward14primitive_desc11get_stridesEv"]], "dnnl::pooling_forward::primitive_desc::primitive_desc (c++ function)": [[166, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [166, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descEv"]], "dnnl::pooling_forward::primitive_desc::src_desc (c++ function)": [[166, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8src_descEv"]], "dnnl::pooling_forward::primitive_desc::workspace_desc (c++ function)": [[166, "_CPPv4NK4dnnl15pooling_forward14primitive_desc14workspace_descEv"]], "dnnl::prelu_backward (c++ struct)": [[167, "_CPPv4N4dnnl14prelu_backwardE"]], "dnnl::prelu_backward::prelu_backward (c++ function)": [[167, "_CPPv4N4dnnl14prelu_backward14prelu_backwardERK14primitive_desc"], [167, "_CPPv4N4dnnl14prelu_backward14prelu_backwardEv"]], "dnnl::prelu_backward::primitive_desc (c++ struct)": [[167, "_CPPv4N4dnnl14prelu_backward14primitive_descE"]], "dnnl::prelu_backward::primitive_desc::diff_dst_desc (c++ function)": [[167, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_dst_descEv"]], "dnnl::prelu_backward::primitive_desc::diff_src_desc (c++ function)": [[167, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_src_descEv"]], "dnnl::prelu_backward::primitive_desc::get_prop_kind (c++ function)": [[167, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13get_prop_kindEv"]], "dnnl::prelu_backward::primitive_desc::primitive_desc (c++ function)": [[167, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb"], [167, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descEv"]], "dnnl::prelu_backward::primitive_desc::src_desc (c++ function)": [[167, "_CPPv4NK4dnnl14prelu_backward14primitive_desc8src_descEv"]], "dnnl::prelu_forward (c++ struct)": [[167, "_CPPv4N4dnnl13prelu_forwardE"]], "dnnl::prelu_forward::prelu_forward (c++ function)": [[167, "_CPPv4N4dnnl13prelu_forward13prelu_forwardERK14primitive_desc"], [167, "_CPPv4N4dnnl13prelu_forward13prelu_forwardEv"]], "dnnl::prelu_forward::primitive_desc (c++ struct)": [[167, "_CPPv4N4dnnl13prelu_forward14primitive_descE"]], "dnnl::prelu_forward::primitive_desc::dst_desc (c++ function)": [[167, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8dst_descEv"]], "dnnl::prelu_forward::primitive_desc::get_prop_kind (c++ function)": [[167, "_CPPv4NK4dnnl13prelu_forward14primitive_desc13get_prop_kindEv"]], "dnnl::prelu_forward::primitive_desc::primitive_desc (c++ function)": [[167, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [167, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descEv"]], "dnnl::prelu_forward::primitive_desc::src_desc (c++ function)": [[167, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8src_descEv"]], "dnnl::reduction (c++ struct)": [[168, "_CPPv4N4dnnl9reductionE"]], "dnnl::reduction::primitive_desc (c++ struct)": [[168, "_CPPv4N4dnnl9reduction14primitive_descE"]], "dnnl::reduction::primitive_desc::dst_desc (c++ function)": [[168, "_CPPv4NK4dnnl9reduction14primitive_desc8dst_descEv"]], "dnnl::reduction::primitive_desc::get_algorithm (c++ function)": [[168, "_CPPv4NK4dnnl9reduction14primitive_desc13get_algorithmEv"]], "dnnl::reduction::primitive_desc::get_epsilon (c++ function)": [[168, "_CPPv4NK4dnnl9reduction14primitive_desc11get_epsilonEv"]], "dnnl::reduction::primitive_desc::get_p (c++ function)": [[168, "_CPPv4NK4dnnl9reduction14primitive_desc5get_pEv"]], "dnnl::reduction::primitive_desc::primitive_desc (c++ function)": [[168, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb"], [168, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descEv"]], "dnnl::reduction::primitive_desc::src_desc (c++ function)": [[168, "_CPPv4NK4dnnl9reduction14primitive_desc8src_descEv"]], "dnnl::reduction::reduction (c++ function)": [[168, "_CPPv4N4dnnl9reduction9reductionEv"]], "dnnl::reorder (c++ struct)": [[169, "_CPPv4N4dnnl7reorderE"]], "dnnl::reorder::execute (c++ function)": [[169, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory"]], "dnnl::reorder::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl7reorder14primitive_descE"]], "dnnl::reorder::primitive_desc::dst_desc (c++ function)": [[169, "_CPPv4NK4dnnl7reorder14primitive_desc8dst_descEv"]], "dnnl::reorder::primitive_desc::get_dst_engine (c++ function)": [[169, "_CPPv4NK4dnnl7reorder14primitive_desc14get_dst_engineEv"]], "dnnl::reorder::primitive_desc::get_src_engine (c++ function)": [[169, "_CPPv4NK4dnnl7reorder14primitive_desc14get_src_engineEv"]], "dnnl::reorder::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb"], [169, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descEv"]], "dnnl::reorder::primitive_desc::src_desc (c++ function)": [[169, "_CPPv4NK4dnnl7reorder14primitive_desc8src_descEv"]], "dnnl::reorder::reorder (c++ function)": [[169, "_CPPv4N4dnnl7reorder7reorderERK14primitive_desc"], [169, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr"], [169, "_CPPv4N4dnnl7reorder7reorderEv"]], "dnnl::resampling_backward (c++ struct)": [[170, "_CPPv4N4dnnl19resampling_backwardE"]], "dnnl::resampling_backward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl19resampling_backward14primitive_descE"]], "dnnl::resampling_backward::primitive_desc::diff_dst_desc (c++ function)": [[170, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_dst_descEv"]], "dnnl::resampling_backward::primitive_desc::diff_src_desc (c++ function)": [[170, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_src_descEv"]], "dnnl::resampling_backward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descEv"]], "dnnl::resampling_backward::resampling_backward (c++ function)": [[170, "_CPPv4N4dnnl19resampling_backward19resampling_backwardERK14primitive_desc"], [170, "_CPPv4N4dnnl19resampling_backward19resampling_backwardEv"]], "dnnl::resampling_forward (c++ struct)": [[170, "_CPPv4N4dnnl18resampling_forwardE"]], "dnnl::resampling_forward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl18resampling_forward14primitive_descE"]], "dnnl::resampling_forward::primitive_desc::dst_desc (c++ function)": [[170, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8dst_descEv"]], "dnnl::resampling_forward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descEv"]], "dnnl::resampling_forward::primitive_desc::src_desc (c++ function)": [[170, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8src_descEv"]], "dnnl::resampling_forward::resampling_forward (c++ function)": [[170, "_CPPv4N4dnnl18resampling_forward18resampling_forwardERK14primitive_desc"], [170, "_CPPv4N4dnnl18resampling_forward18resampling_forwardEv"]], "dnnl::gru_backward (c++ struct)": [[171, "_CPPv4N4dnnl12gru_backwardE"]], "dnnl::gru_backward::gru_backward (c++ function)": [[171, "_CPPv4N4dnnl12gru_backward12gru_backwardERK14primitive_desc"], [171, "_CPPv4N4dnnl12gru_backward12gru_backwardEv"]], "dnnl::gru_backward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl12gru_backward14primitive_descE"]], "dnnl::gru_backward::primitive_desc::bias_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc9bias_descEv"]], "dnnl::gru_backward::primitive_desc::diff_bias_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc14diff_bias_descEv"]], "dnnl::gru_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::gru_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::gru_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::gru_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::gru_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::gru_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::gru_backward::primitive_desc::dst_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc13dst_iter_descEv"]], "dnnl::gru_backward::primitive_desc::dst_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc14dst_layer_descEv"]], "dnnl::gru_backward::primitive_desc::get_cell_kind (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_cell_kindEv"]], "dnnl::gru_backward::primitive_desc::get_direction (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_directionEv"]], "dnnl::gru_backward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_prop_kindEv"]], "dnnl::gru_backward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb"], [171, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descEv"]], "dnnl::gru_backward::primitive_desc::src_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc13src_iter_descEv"]], "dnnl::gru_backward::primitive_desc::src_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc14src_layer_descEv"]], "dnnl::gru_backward::primitive_desc::weights_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc17weights_iter_descEv"]], "dnnl::gru_backward::primitive_desc::weights_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc18weights_layer_descEv"]], "dnnl::gru_backward::primitive_desc::workspace_desc (c++ function)": [[171, "_CPPv4NK4dnnl12gru_backward14primitive_desc14workspace_descEv"]], "dnnl::gru_forward (c++ struct)": [[171, "_CPPv4N4dnnl11gru_forwardE"]], "dnnl::gru_forward::gru_forward (c++ function)": [[171, "_CPPv4N4dnnl11gru_forward11gru_forwardERK14primitive_desc"], [171, "_CPPv4N4dnnl11gru_forward11gru_forwardEv"]], "dnnl::gru_forward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl11gru_forward14primitive_descE"]], "dnnl::gru_forward::primitive_desc::bias_desc (c++ function)": [[171, "_CPPv4NK4dnnl11gru_forward14primitive_desc9bias_descEv"]], "dnnl::gru_forward::primitive_desc::dst_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl11gru_forward14primitive_desc13dst_iter_descEv"]], "dnnl::gru_forward::primitive_desc::dst_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl11gru_forward14primitive_desc14dst_layer_descEv"]], "dnnl::gru_forward::primitive_desc::get_cell_kind (c++ function)": [[171, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_cell_kindEv"]], "dnnl::gru_forward::primitive_desc::get_direction (c++ function)": [[171, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_directionEv"]], "dnnl::gru_forward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_prop_kindEv"]], "dnnl::gru_forward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [171, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descEv"]], "dnnl::gru_forward::primitive_desc::src_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl11gru_forward14primitive_desc13src_iter_descEv"]], "dnnl::gru_forward::primitive_desc::src_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl11gru_forward14primitive_desc14src_layer_descEv"]], "dnnl::gru_forward::primitive_desc::weights_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl11gru_forward14primitive_desc17weights_iter_descEv"]], "dnnl::gru_forward::primitive_desc::weights_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl11gru_forward14primitive_desc18weights_layer_descEv"]], "dnnl::gru_forward::primitive_desc::workspace_desc (c++ function)": [[171, "_CPPv4NK4dnnl11gru_forward14primitive_desc14workspace_descEv"]], "dnnl::lbr_gru_backward (c++ struct)": [[171, "_CPPv4N4dnnl16lbr_gru_backwardE"]], "dnnl::lbr_gru_backward::lbr_gru_backward (c++ function)": [[171, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardERK14primitive_desc"], [171, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardEv"]], "dnnl::lbr_gru_backward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl16lbr_gru_backward14primitive_descE"]], "dnnl::lbr_gru_backward::primitive_desc::bias_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc9bias_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_bias_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14diff_bias_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::dst_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13dst_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::dst_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14dst_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::get_cell_kind (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_cell_kindEv"]], "dnnl::lbr_gru_backward::primitive_desc::get_direction (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_directionEv"]], "dnnl::lbr_gru_backward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_prop_kindEv"]], "dnnl::lbr_gru_backward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb"], [171, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::src_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13src_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::src_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14src_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::weights_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc17weights_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::weights_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18weights_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::workspace_desc (c++ function)": [[171, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14workspace_descEv"]], "dnnl::lbr_gru_forward (c++ struct)": [[171, "_CPPv4N4dnnl15lbr_gru_forwardE"]], "dnnl::lbr_gru_forward::lbr_gru_forward (c++ function)": [[171, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardERK14primitive_desc"], [171, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardEv"]], "dnnl::lbr_gru_forward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl15lbr_gru_forward14primitive_descE"]], "dnnl::lbr_gru_forward::primitive_desc::bias_desc (c++ function)": [[171, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc9bias_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::dst_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13dst_iter_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::dst_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14dst_layer_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::get_cell_kind (c++ function)": [[171, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_cell_kindEv"]], "dnnl::lbr_gru_forward::primitive_desc::get_direction (c++ function)": [[171, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_directionEv"]], "dnnl::lbr_gru_forward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_prop_kindEv"]], "dnnl::lbr_gru_forward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [171, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::src_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13src_iter_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::src_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14src_layer_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::weights_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc17weights_iter_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::weights_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc18weights_layer_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::workspace_desc (c++ function)": [[171, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14workspace_descEv"]], "dnnl::lstm_backward (c++ struct)": [[171, "_CPPv4N4dnnl13lstm_backwardE"]], "dnnl::lstm_backward::lstm_backward (c++ function)": [[171, "_CPPv4N4dnnl13lstm_backward13lstm_backwardERK14primitive_desc"], [171, "_CPPv4N4dnnl13lstm_backward13lstm_backwardEv"]], "dnnl::lstm_backward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl13lstm_backward14primitive_descE"]], "dnnl::lstm_backward::primitive_desc::bias_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc9bias_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_bias_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14diff_bias_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_dst_iter_c_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_dst_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_src_iter_c_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_src_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_peephole_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc26diff_weights_peephole_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_projection_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc28diff_weights_projection_descEv"]], "dnnl::lstm_backward::primitive_desc::dst_iter_c_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15dst_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::dst_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13dst_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::dst_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14dst_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::get_cell_kind (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_cell_kindEv"]], "dnnl::lstm_backward::primitive_desc::get_direction (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_directionEv"]], "dnnl::lstm_backward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_prop_kindEv"]], "dnnl::lstm_backward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb"], [171, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb"], [171, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb"], [171, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descEv"]], "dnnl::lstm_backward::primitive_desc::src_iter_c_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15src_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::src_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13src_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::src_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14src_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc17weights_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18weights_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_peephole_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc21weights_peephole_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_projection_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23weights_projection_descEv"]], "dnnl::lstm_backward::primitive_desc::workspace_desc (c++ function)": [[171, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14workspace_descEv"]], "dnnl::lstm_forward (c++ struct)": [[171, "_CPPv4N4dnnl12lstm_forwardE"]], "dnnl::lstm_forward::lstm_forward (c++ function)": [[171, "_CPPv4N4dnnl12lstm_forward12lstm_forwardERK14primitive_desc"], [171, "_CPPv4N4dnnl12lstm_forward12lstm_forwardEv"]], "dnnl::lstm_forward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl12lstm_forward14primitive_descE"]], "dnnl::lstm_forward::primitive_desc::bias_desc (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc9bias_descEv"]], "dnnl::lstm_forward::primitive_desc::dst_iter_c_desc (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15dst_iter_c_descEv"]], "dnnl::lstm_forward::primitive_desc::dst_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13dst_iter_descEv"]], "dnnl::lstm_forward::primitive_desc::dst_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14dst_layer_descEv"]], "dnnl::lstm_forward::primitive_desc::get_cell_kind (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_cell_kindEv"]], "dnnl::lstm_forward::primitive_desc::get_direction (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_directionEv"]], "dnnl::lstm_forward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_prop_kindEv"]], "dnnl::lstm_forward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [171, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [171, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [171, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descEv"]], "dnnl::lstm_forward::primitive_desc::src_iter_c_desc (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15src_iter_c_descEv"]], "dnnl::lstm_forward::primitive_desc::src_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13src_iter_descEv"]], "dnnl::lstm_forward::primitive_desc::src_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14src_layer_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc17weights_iter_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc18weights_layer_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_peephole_desc (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc21weights_peephole_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_projection_desc (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc23weights_projection_descEv"]], "dnnl::lstm_forward::primitive_desc::workspace_desc (c++ function)": [[171, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14workspace_descEv"]], "dnnl::rnn_direction (c++ enum)": [[171, "_CPPv4N4dnnl13rnn_directionE"]], "dnnl::rnn_direction::bidirectional_concat (c++ enumerator)": [[171, "_CPPv4N4dnnl13rnn_direction20bidirectional_concatE"]], "dnnl::rnn_direction::bidirectional_sum (c++ enumerator)": [[171, "_CPPv4N4dnnl13rnn_direction17bidirectional_sumE"]], "dnnl::rnn_direction::undef (c++ enumerator)": [[171, "_CPPv4N4dnnl13rnn_direction5undefE"]], "dnnl::rnn_direction::unidirectional (c++ enumerator)": [[171, "_CPPv4N4dnnl13rnn_direction14unidirectionalE"]], "dnnl::rnn_direction::unidirectional_left2right (c++ enumerator)": [[171, "_CPPv4N4dnnl13rnn_direction25unidirectional_left2rightE"]], "dnnl::rnn_direction::unidirectional_right2left (c++ enumerator)": [[171, "_CPPv4N4dnnl13rnn_direction25unidirectional_right2leftE"]], "dnnl::rnn_flags (c++ enum)": [[171, "_CPPv4N4dnnl9rnn_flagsE"]], "dnnl::rnn_flags::undef (c++ enumerator)": [[171, "_CPPv4N4dnnl9rnn_flags5undefE"]], "dnnl::vanilla_rnn_backward (c++ struct)": [[171, "_CPPv4N4dnnl20vanilla_rnn_backwardE"]], "dnnl::vanilla_rnn_backward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_descE"]], "dnnl::vanilla_rnn_backward::primitive_desc::bias_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9bias_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_bias_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14diff_bias_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::dst_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13dst_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::dst_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14dst_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_activation_kind (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19get_activation_kindEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_alpha (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9get_alphaEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_beta (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc8get_betaEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_cell_kind (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_cell_kindEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_direction (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_directionEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_prop_kindEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb"], [171, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb"], [171, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::src_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13src_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::src_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14src_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::weights_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc17weights_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::weights_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18weights_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::workspace_desc (c++ function)": [[171, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14workspace_descEv"]], "dnnl::vanilla_rnn_backward::vanilla_rnn_backward (c++ function)": [[171, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardERK14primitive_desc"], [171, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardEv"]], "dnnl::vanilla_rnn_forward (c++ struct)": [[171, "_CPPv4N4dnnl19vanilla_rnn_forwardE"]], "dnnl::vanilla_rnn_forward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_descE"]], "dnnl::vanilla_rnn_forward::primitive_desc::bias_desc (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9bias_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::dst_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13dst_iter_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::dst_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14dst_layer_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_activation_kind (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc19get_activation_kindEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_alpha (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9get_alphaEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_beta (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc8get_betaEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_cell_kind (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_cell_kindEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_direction (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_directionEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_prop_kindEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [171, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb"], [171, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::src_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13src_iter_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::src_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14src_layer_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::weights_iter_desc (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc17weights_iter_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::weights_layer_desc (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc18weights_layer_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::workspace_desc (c++ function)": [[171, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14workspace_descEv"]], "dnnl::vanilla_rnn_forward::vanilla_rnn_forward (c++ function)": [[171, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardERK14primitive_desc"], [171, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardEv"]], "dnnl::shuffle_backward (c++ struct)": [[172, "_CPPv4N4dnnl16shuffle_backwardE"]], "dnnl::shuffle_backward::primitive_desc (c++ struct)": [[172, "_CPPv4N4dnnl16shuffle_backward14primitive_descE"]], "dnnl::shuffle_backward::primitive_desc::diff_dst_desc (c++ function)": [[172, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_dst_descEv"]], "dnnl::shuffle_backward::primitive_desc::diff_src_desc (c++ function)": [[172, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_src_descEv"]], "dnnl::shuffle_backward::primitive_desc::get_axis (c++ function)": [[172, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc8get_axisEv"]], "dnnl::shuffle_backward::primitive_desc::get_group_size (c++ function)": [[172, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc14get_group_sizeEv"]], "dnnl::shuffle_backward::primitive_desc::get_prop_kind (c++ function)": [[172, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13get_prop_kindEv"]], "dnnl::shuffle_backward::primitive_desc::primitive_desc (c++ function)": [[172, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb"], [172, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descEv"]], "dnnl::shuffle_backward::shuffle_backward (c++ function)": [[172, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardERK14primitive_desc"], [172, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardEv"]], "dnnl::shuffle_forward (c++ struct)": [[172, "_CPPv4N4dnnl15shuffle_forwardE"]], "dnnl::shuffle_forward::primitive_desc (c++ struct)": [[172, "_CPPv4N4dnnl15shuffle_forward14primitive_descE"]], "dnnl::shuffle_forward::primitive_desc::dst_desc (c++ function)": [[172, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8dst_descEv"]], "dnnl::shuffle_forward::primitive_desc::get_axis (c++ function)": [[172, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8get_axisEv"]], "dnnl::shuffle_forward::primitive_desc::get_group_size (c++ function)": [[172, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc14get_group_sizeEv"]], "dnnl::shuffle_forward::primitive_desc::get_prop_kind (c++ function)": [[172, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc13get_prop_kindEv"]], "dnnl::shuffle_forward::primitive_desc::primitive_desc (c++ function)": [[172, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb"], [172, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descEv"]], "dnnl::shuffle_forward::primitive_desc::src_desc (c++ function)": [[172, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8src_descEv"]], "dnnl::shuffle_forward::shuffle_forward (c++ function)": [[172, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardERK14primitive_desc"], [172, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardEv"]], "dnnl::softmax_backward (c++ struct)": [[173, "_CPPv4N4dnnl16softmax_backwardE"]], "dnnl::softmax_backward::primitive_desc (c++ struct)": [[173, "_CPPv4N4dnnl16softmax_backward14primitive_descE"]], "dnnl::softmax_backward::primitive_desc::diff_dst_desc (c++ function)": [[173, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_dst_descEv"]], "dnnl::softmax_backward::primitive_desc::diff_src_desc (c++ function)": [[173, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_src_descEv"]], "dnnl::softmax_backward::primitive_desc::dst_desc (c++ function)": [[173, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8dst_descEv"]], "dnnl::softmax_backward::primitive_desc::get_algorithm (c++ function)": [[173, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_algorithmEv"]], "dnnl::softmax_backward::primitive_desc::get_axis (c++ function)": [[173, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8get_axisEv"]], "dnnl::softmax_backward::primitive_desc::get_prop_kind (c++ function)": [[173, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_prop_kindEv"]], "dnnl::softmax_backward::primitive_desc::primitive_desc (c++ function)": [[173, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb"], [173, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descEv"]], "dnnl::softmax_backward::softmax_backward (c++ function)": [[173, "_CPPv4N4dnnl16softmax_backward16softmax_backwardERK14primitive_desc"], [173, "_CPPv4N4dnnl16softmax_backward16softmax_backwardEv"]], "dnnl::softmax_forward (c++ struct)": [[173, "_CPPv4N4dnnl15softmax_forwardE"]], "dnnl::softmax_forward::primitive_desc (c++ struct)": [[173, "_CPPv4N4dnnl15softmax_forward14primitive_descE"]], "dnnl::softmax_forward::primitive_desc::dst_desc (c++ function)": [[173, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8dst_descEv"]], "dnnl::softmax_forward::primitive_desc::get_algorithm (c++ function)": [[173, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_algorithmEv"]], "dnnl::softmax_forward::primitive_desc::get_axis (c++ function)": [[173, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8get_axisEv"]], "dnnl::softmax_forward::primitive_desc::get_prop_kind (c++ function)": [[173, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_prop_kindEv"]], "dnnl::softmax_forward::primitive_desc::primitive_desc (c++ function)": [[173, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb"], [173, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descEv"]], "dnnl::softmax_forward::primitive_desc::src_desc (c++ function)": [[173, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8src_descEv"]], "dnnl::softmax_forward::softmax_forward (c++ function)": [[173, "_CPPv4N4dnnl15softmax_forward15softmax_forwardERK14primitive_desc"], [173, "_CPPv4N4dnnl15softmax_forward15softmax_forwardEv"]], "dnnl::sum (c++ struct)": [[174, "_CPPv4N4dnnl3sumE"]], "dnnl::sum::primitive_desc (c++ struct)": [[174, "_CPPv4N4dnnl3sum14primitive_descE"]], "dnnl::sum::primitive_desc::dst_desc (c++ function)": [[174, "_CPPv4NK4dnnl3sum14primitive_desc8dst_descEv"]], "dnnl::sum::primitive_desc::primitive_desc (c++ function)": [[174, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [174, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [174, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descEv"]], "dnnl::sum::primitive_desc::src_desc (c++ function)": [[174, "_CPPv4NK4dnnl3sum14primitive_desc8src_descEi"]], "dnnl::sum::sum (c++ function)": [[174, "_CPPv4N4dnnl3sum3sumERK14primitive_desc"], [174, "_CPPv4N4dnnl3sum3sumEv"]], "begin (c++ function)": [[552, "_CPPv4NK5beginEv"]], "blocked_range (c++ function)": [[552, "_CPPv413blocked_range5Value5Value9size_type"], [552, "_CPPv413blocked_rangeR13blocked_range18proportional_split"], [552, "_CPPv413blocked_rangeR13blocked_range5split"]], "const_iterator (c++ type)": [[552, "_CPPv414const_iterator"]], "empty (c++ function)": [[552, "_CPPv4NK5emptyEv"]], "end (c++ function)": [[552, "_CPPv4NK3endEv"]], "grainsize (c++ function)": [[552, "_CPPv4NK9grainsizeEv"]], "is_divisible (c++ function)": [[552, "_CPPv4NK12is_divisibleEv"]], "size (c++ function)": [[552, "_CPPv4NK4sizeEv"]], "size_type (c++ type)": [[552, "_CPPv49size_type"]], "collaborative_once_flag (c++ function)": [[554, "_CPPv423collaborative_once_flagv"]], "add (c++ function)": [[555, "_CPPv43addRK4Item"], [555, "_CPPv43addRR4Item"]], "clear (c++ function)": [[561, "_CPPv45clearv"]], "filter (c++ function)": [[561, "_CPPv46filterv"], [561, "_CPPv4I0E6filter11filter_modeRK4Body"]], "make_filter (c++ function)": [[561, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func"]], "operator& (c++ function)": [[561, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE"]], "stop (c++ function)": [[563, "_CPPv44stopv"]], "is_final_scan (c++ function)": [[567, "_CPPv413is_final_scanv"]], "operator bool (c++ function)": [[567, "_CPPv4cvbv"], [842, "_CPPv4NKcvbEv"]], "left (c++ function)": [[572, "_CPPv4NK4leftEv"]], "operator split (c++ function)": [[572, "_CPPv4NKcv5splitEv"]], "proportional_split (c++ function)": [[572, "_CPPv418proportional_splitNSt6size_tENSt6size_tE"]], "right (c++ function)": [[572, "_CPPv4NK5rightEv"]], "attach (c++ struct)": [[743, "_CPPv46attach"]], "initialize (c++ function)": [[743, "_CPPv410initializeN10task_arena6attachE"], [843, "_CPPv410initialize11constraintsj8priority"], [843, "_CPPv410initializeN6oneapi3tbb6attachE"], [843, "_CPPv410initializeij8priority"], [843, "_CPPv410initializev"]], "task_arena (c++ function)": [[743, "_CPPv410task_arenaN10task_arena6attachE"], [843, "_CPPv410task_arena11constraintsj8priority"], [843, "_CPPv410task_arenaN6oneapi3tbb6attachE"], [843, "_CPPv410task_arenaRK10task_arena"], [843, "_CPPv410task_arenaij8priority"]], "broadcast_node (c++ function)": [[746, "_CPPv414broadcast_nodeR5graph"], [746, "_CPPv414broadcast_nodeRK14broadcast_node"]], "try_get (c++ function)": [[746, "_CPPv47try_getR11output_type"], [747, "_CPPv47try_getR1T"], [759, "_CPPv47try_getR6Output"]], "try_put (c++ function)": [[746, "_CPPv47try_putRK10input_type"], [747, "_CPPv47try_putRK1T"]], "buffer_node (c++ function)": [[747, "_CPPv411buffer_nodeR5graph"], [747, "_CPPv411buffer_nodeRK11buffer_node"]], "composite_node (c++ function)": [[748, "_CPPv414composite_nodeR5graph"]], "input_ports (c++ function)": [[748, "_CPPv411input_portsv"]], "output_ports (c++ function)": [[748, "_CPPv412output_portsv"]], "set_external_ports (c++ function)": [[748, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type"]], "cancel (c++ function)": [[756, "_CPPv46cancelv"]], "exception_thrown (c++ function)": [[756, "_CPPv416exception_thrownv"]], "graph (c++ function)": [[756, "_CPPv45graphR18task_group_context"]], "is_cancelled (c++ function)": [[756, "_CPPv412is_cancelledv"]], "reset (c++ function)": [[756, "_CPPv45reset11reset_flags"], [841, "_CPPv45resetv"]], "wait_for_all (c++ function)": [[756, "_CPPv412wait_for_allv"]], "~graph (c++ function)": [[756, "_CPPv4D0v"]], "oneapi::tbb::flow::indexer_node::indexer_node (c++ function)": [[758, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeER5graph"], [758, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeERK12indexer_node"]], "oneapi::tbb::flow::indexer_node::input_ports (c++ function)": [[758, "_CPPv4N6oneapi3tbb4flow12indexer_node11input_portsEv"]], "oneapi::tbb::flow::indexer_node::try_get (c++ function)": [[758, "_CPPv4N6oneapi3tbb4flow12indexer_node7try_getER11output_type"]], "activate (c++ function)": [[759, "_CPPv48activatev"]], "input_node (c++ function)": [[759, "_CPPv410input_nodeRK10input_node"], [759, "_CPPv4I0E10input_nodeR5graph4Body"]], "oneapi::tbb::flow::limiter_node::decrementer (c++ function)": [[763, "_CPPv4N6oneapi3tbb4flow12limiter_node11decrementerEv"]], "oneapi::tbb::flow::limiter_node::limiter_node (c++ function)": [[763, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t"], [763, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeERK12limiter_node"]], "oneapi::tbb::flow::limiter_node::try_get (c++ function)": [[763, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_getER1T"]], "oneapi::tbb::flow::limiter_node::try_put (c++ function)": [[763, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_putERK1T"]], "oneapi::tbb::flow::overwrite_node::clear (c++ function)": [[769, "_CPPv4N6oneapi3tbb4flow14overwrite_node5clearEv"]], "oneapi::tbb::flow::overwrite_node::is_valid (c++ function)": [[769, "_CPPv4N6oneapi3tbb4flow14overwrite_node8is_validEv"]], "oneapi::tbb::flow::overwrite_node::overwrite_node (c++ function)": [[769, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeER5graph"], [769, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeERK14overwrite_node"]], "oneapi::tbb::flow::overwrite_node::try_get (c++ function)": [[769, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_getER1T"]], "oneapi::tbb::flow::overwrite_node::try_put (c++ function)": [[769, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_putERK1T"]], "oneapi::tbb::flow::overwrite_node::~overwrite_node (c++ function)": [[769, "_CPPv4N6oneapi3tbb4flow14overwrite_nodeD0Ev"]], "oneapi::tbb::flow::priority_node_queue::priority_queue_node (c++ function)": [[771, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeER5graph"], [771, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeERK19priority_queue_node"]], "oneapi::tbb::flow::priority_node_queue::try_get (c++ function)": [[771, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_getER1T"]], "oneapi::tbb::flow::priority_node_queue::try_put (c++ function)": [[771, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_putERK1T"]], "oneapi::tbb::flow::queue_node::queue_node (c++ function)": [[772, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeER5graph"], [772, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeERK10queue_node"]], "oneapi::tbb::flow::queue_node::try_get (c++ function)": [[772, "_CPPv4N6oneapi3tbb4flow10queue_node7try_getER1T"]], "oneapi::tbb::flow::queue_node::try_put (c++ function)": [[772, "_CPPv4N6oneapi3tbb4flow10queue_node7try_putERK1T"]], "oneapi::tbb::flow::sequencer_node::sequencer_node (c++ function)": [[777, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer"], [777, "_CPPv4N6oneapi3tbb4flow14sequencer_node14sequencer_nodeERK14sequencer_node"]], "oneapi::tbb::flow::sequencer_node::try_get (c++ function)": [[777, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_getER1T"]], "oneapi::tbb::flow::sequencer_node::try_put (c++ function)": [[777, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_putERK1T"]], "oneapi::tbb::flow::split_node::output_ports (c++ function)": [[778, "_CPPv4N6oneapi3tbb4flow10split_node12output_portsEv"]], "oneapi::tbb::flow::split_node::split_node (c++ function)": [[778, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeER5graph"], [778, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeERK10split_node"]], "oneapi::tbb::flow::split_node::try_put (c++ function)": [[778, "_CPPv4N6oneapi3tbb4flow10split_node7try_putERK9TupleType"]], "oneapi::tbb::flow::split_node::~split_node (c++ function)": [[778, "_CPPv4N6oneapi3tbb4flow10split_nodeD0Ev"]], "cast_to (c++ function)": [[779, "_CPPv4I0ENK7cast_toERK1Vv"]], "is_a (c++ function)": [[779, "_CPPv4I0ENK4is_aEbv"]], "tag (c++ function)": [[779, "_CPPv4NK3tagEv"]], "tagged_msg (c++ function)": [[779, "_CPPv4I00E10tagged_msgRK1TRK1R"]], "oneapi::tbb::flow::write_once_mode::clear (c++ function)": [[780, "_CPPv4N6oneapi3tbb4flow15write_once_mode5clearEv"]], "oneapi::tbb::flow::write_once_mode::is_valid (c++ function)": [[780, "_CPPv4N6oneapi3tbb4flow15write_once_mode8is_validEv"]], "oneapi::tbb::flow::write_once_mode::try_get (c++ function)": [[780, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_getER1T"]], "oneapi::tbb::flow::write_once_mode::try_put (c++ function)": [[780, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_putERK1T"]], "oneapi::tbb::flow::write_once_mode::write_once_node (c++ function)": [[780, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeER5graph"], [780, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeERK15write_once_node"]], "oneapi::tbb::flow::write_once_mode::~write_once_node (c++ function)": [[780, "_CPPv4N6oneapi3tbb4flow15write_once_modeD0Ev"]], "core_types (c++ function)": [[782, "_CPPv410core_typesv"]], "default_concurrency (c++ function)": [[782, "_CPPv419default_concurrency12numa_node_id"], [782, "_CPPv419default_concurrencyN10task_arena11constraintsE"]], "numa_nodes (c++ function)": [[782, "_CPPv410numa_nodesv"]], "tbbmalloc_clean_all_buffers (c macro)": [[785, "c.TBBMALLOC_CLEAN_ALL_BUFFERS"]], "tbbmalloc_clean_thread_buffers (c macro)": [[785, "c.TBBMALLOC_CLEAN_THREAD_BUFFERS"]], "tbbmalloc_set_huge_size_threshold (c macro)": [[785, "c.TBBMALLOC_SET_HUGE_SIZE_THRESHOLD"]], "tbbmalloc_set_soft_heap_limit (c macro)": [[785, "c.TBBMALLOC_SET_SOFT_HEAP_LIMIT"]], "tbbmalloc_use_huge_pages (c macro)": [[785, "c.TBBMALLOC_USE_HUGE_PAGES"]], "scalable_allocation_command (c function)": [[785, "c.scalable_allocation_command"]], "scalable_allocation_mode (c++ function)": [[785, "_CPPv424scalable_allocation_modei8intptr_t"]], "scalable_msize (c++ function)": [[785, "_CPPv414scalable_msizePv"]], "allocate (c++ function)": [[786, "_CPPv48allocate9size_type"]], "deallocate (c++ function)": [[786, "_CPPv410deallocateP1T9size_type"]], "max_size (c++ function)": [[786, "_CPPv4NK8max_sizeEv"]], "operator!= (c++ function)": [[786, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE"]], "operator== (c++ function)": [[786, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE"]], "cache_aligned_resource (c++ function)": [[787, "_CPPv422cache_aligned_resourcePNSt3pmr15memory_resourceE"], [787, "_CPPv422cache_aligned_resourcev"]], "do_allocate (c++ function)": [[787, "_CPPv411do_allocate6size_t6size_t"]], "do_deallocate (c++ function)": [[787, "_CPPv413do_deallocatePv6size_t6size_t"]], "do_is_equal (c++ function)": [[787, "_CPPv4NK11do_is_equalERKNSt3pmr15memory_resourceE"]], "upstream_resource (c++ function)": [[787, "_CPPv4NK17upstream_resourceEv"]], "oneapi::tbb::scalable_allocator::allocate (c++ function)": [[788, "_CPPv4N6oneapi3tbb18scalable_allocator8allocateE9size_type"]], "oneapi::tbb::scalable_allocator::deallocate (c++ function)": [[788, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type"]], "oneapi::tbb::scalable_allocator::operator!= (c++ function)": [[788, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE"]], "oneapi::tbb::scalable_allocator::operator== (c++ function)": [[788, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE"]], "oneapi::tbb::tbb_allocator::allocate (c++ function)": [[790, "_CPPv4N6oneapi3tbb13tbb_allocator8allocateE9size_type"]], "oneapi::tbb::tbb_allocator::allocator_type (c++ function)": [[790, "_CPPv4N6oneapi3tbb13tbb_allocator14allocator_typeEv"]], "oneapi::tbb::tbb_allocator::deallocate (c++ function)": [[790, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type"]], "oneapi::tbb::tbb_allocator::operator!= (c++ function)": [[790, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE"]], "oneapi::tbb::tbb_allocator::operator== (c++ function)": [[790, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE"]], "oneapi::tbb::mutex::lock (c++ function)": [[792, "_CPPv4N6oneapi3tbb5mutex4lockEv"]], "oneapi::tbb::mutex::mutex (c++ function)": [[792, "_CPPv4N6oneapi3tbb5mutex5mutexEv"]], "oneapi::tbb::mutex::scoped_lock (c++ class)": [[792, "_CPPv4N6oneapi3tbb5mutex11scoped_lockE"]], "oneapi::tbb::mutex::try_lock (c++ function)": [[792, "_CPPv4N6oneapi3tbb5mutex8try_lockEv"]], "oneapi::tbb::mutex::unlock (c++ function)": [[792, "_CPPv4N6oneapi3tbb5mutex6unlockEv"]], "oneapi::tbb::mutex::~mutex (c++ function)": [[792, "_CPPv4N6oneapi3tbb5mutexD0Ev"]], "lock (c++ function)": [[793, "_CPPv44lockv"]], "null_mutex (c++ function)": [[793, "_CPPv410null_mutexv"]], "scoped_lock (c++ class)": [[793, "_CPPv411scoped_lock"]], "try_lock (c++ function)": [[793, "_CPPv48try_lockv"]], "unlock (c++ function)": [[793, "_CPPv46unlockv"]], "~null_mutex (c++ function)": [[793, "_CPPv4D0v"]], "oneapi::tbb::null_rw_mutex::lock (c++ function)": [[794, "_CPPv4N6oneapi3tbb13null_rw_mutex4lockEv"]], "oneapi::tbb::null_rw_mutex::lock_shared (c++ function)": [[794, "_CPPv4N6oneapi3tbb13null_rw_mutex11lock_sharedEv"]], "oneapi::tbb::null_rw_mutex::null_rw_mutex (c++ function)": [[794, "_CPPv4N6oneapi3tbb13null_rw_mutex13null_rw_mutexEv"]], "oneapi::tbb::null_rw_mutex::scoped_lock (c++ class)": [[794, "_CPPv4N6oneapi3tbb13null_rw_mutex11scoped_lockE"]], "oneapi::tbb::null_rw_mutex::try_lock (c++ function)": [[794, "_CPPv4N6oneapi3tbb13null_rw_mutex8try_lockEv"]], "oneapi::tbb::null_rw_mutex::try_lock_shared (c++ function)": [[794, "_CPPv4N6oneapi3tbb13null_rw_mutex15try_lock_sharedEv"]], "oneapi::tbb::null_rw_mutex::unlock (c++ function)": [[794, "_CPPv4N6oneapi3tbb13null_rw_mutex6unlockEv"]], "oneapi::tbb::null_rw_mutex::unlock_shared (c++ function)": [[794, "_CPPv4N6oneapi3tbb13null_rw_mutex13unlock_sharedEv"]], "oneapi::tbb::null_rw_mutex::~null_rw_mutex (c++ function)": [[794, "_CPPv4N6oneapi3tbb13null_rw_mutexD0Ev"]], "oneapi::tbb::queueing_mutex::queuing_mutex (c++ function)": [[795, "_CPPv4N6oneapi3tbb14queueing_mutex13queuing_mutexEv"]], "oneapi::tbb::queueing_mutex::scoped_lock (c++ class)": [[795, "_CPPv4N6oneapi3tbb14queueing_mutex11scoped_lockE"]], "oneapi::tbb::queueing_mutex::~queuing_mutex (c++ function)": [[795, "_CPPv4N6oneapi3tbb14queueing_mutexD0Ev"]], "oneapi::tbb::queueing_rw_mutex::queuing_rw_mutex (c++ function)": [[796, "_CPPv4N6oneapi3tbb17queueing_rw_mutex16queuing_rw_mutexEv"]], "oneapi::tbb::queueing_rw_mutex::scoped_lock (c++ class)": [[796, "_CPPv4N6oneapi3tbb17queueing_rw_mutex11scoped_lockE"]], "oneapi::tbb::queueing_rw_mutex::~queuing_rw_mutex (c++ function)": [[796, "_CPPv4N6oneapi3tbb17queueing_rw_mutexD0Ev"]], "oneapi::tbb::rw_mutex::lock (c++ function)": [[797, "_CPPv4N6oneapi3tbb8rw_mutex4lockEv"]], "oneapi::tbb::rw_mutex::lock_shared (c++ function)": [[797, "_CPPv4N6oneapi3tbb8rw_mutex11lock_sharedEv"]], "oneapi::tbb::rw_mutex::rw_mutex (c++ function)": [[797, "_CPPv4N6oneapi3tbb8rw_mutex8rw_mutexEv"]], "oneapi::tbb::rw_mutex::scoped_lock (c++ class)": [[797, "_CPPv4N6oneapi3tbb8rw_mutex11scoped_lockE"]], "oneapi::tbb::rw_mutex::try_lock (c++ function)": [[797, "_CPPv4N6oneapi3tbb8rw_mutex8try_lockEv"]], "oneapi::tbb::rw_mutex::try_lock_shared (c++ function)": [[797, "_CPPv4N6oneapi3tbb8rw_mutex15try_lock_sharedEv"]], "oneapi::tbb::rw_mutex::unlock (c++ function)": [[797, "_CPPv4N6oneapi3tbb8rw_mutex6unlockEv"]], "oneapi::tbb::rw_mutex::unlock_shared (c++ function)": [[797, "_CPPv4N6oneapi3tbb8rw_mutex13unlock_sharedEv"]], "oneapi::tbb::rw_mutex::~rw_mutex (c++ function)": [[797, "_CPPv4N6oneapi3tbb8rw_mutexD0Ev"]], "oneapi::tbb::speculative_spin_mutex::scoped_lock (c++ class)": [[798, "_CPPv4N6oneapi3tbb22speculative_spin_mutex11scoped_lockE"]], "oneapi::tbb::speculative_spin_mutex::speculative_spin_mutex (c++ function)": [[798, "_CPPv4N6oneapi3tbb22speculative_spin_mutex22speculative_spin_mutexEv"]], "oneapi::tbb::speculative_spin_mutex::~speculative_spin_mutex (c++ function)": [[798, "_CPPv4N6oneapi3tbb22speculative_spin_mutexD0Ev"]], "oneapi::tbb::speculative_spin_rw_mutex::scoped_lock (c++ class)": [[799, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex11scoped_lockE"]], "oneapi::tbb::speculative_spin_rw_mutex::speculative_spin_rw_mutex (c++ function)": [[799, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex25speculative_spin_rw_mutexEv"]], "oneapi::tbb::speculative_spin_rw_mutex::~speculative_spin_rw_mutex (c++ function)": [[799, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutexD0Ev"]], "oneapi::tbb::spin_mutex::lock (c++ function)": [[800, "_CPPv4N6oneapi3tbb10spin_mutex4lockEv"]], "oneapi::tbb::spin_mutex::scoped_lock (c++ class)": [[800, "_CPPv4N6oneapi3tbb10spin_mutex11scoped_lockE"]], "oneapi::tbb::spin_mutex::spin_mutex (c++ function)": [[800, "_CPPv4N6oneapi3tbb10spin_mutex10spin_mutexEv"]], "oneapi::tbb::spin_mutex::try_lock (c++ function)": [[800, "_CPPv4N6oneapi3tbb10spin_mutex8try_lockEv"]], "oneapi::tbb::spin_mutex::unlock (c++ function)": [[800, "_CPPv4N6oneapi3tbb10spin_mutex6unlockEv"]], "oneapi::tbb::spin_mutex::~spin_mutex (c++ function)": [[800, "_CPPv4N6oneapi3tbb10spin_mutexD0Ev"]], "oneapi::tbb::spin_rw_mutex::lock (c++ function)": [[801, "_CPPv4N6oneapi3tbb13spin_rw_mutex4lockEv"]], "oneapi::tbb::spin_rw_mutex::lock_shared (c++ function)": [[801, "_CPPv4N6oneapi3tbb13spin_rw_mutex11lock_sharedEv"]], "oneapi::tbb::spin_rw_mutex::scoped_lock (c++ class)": [[801, "_CPPv4N6oneapi3tbb13spin_rw_mutex11scoped_lockE"]], "oneapi::tbb::spin_rw_mutex::spin_rw_mutex (c++ function)": [[801, "_CPPv4N6oneapi3tbb13spin_rw_mutex13spin_rw_mutexEv"]], "oneapi::tbb::spin_rw_mutex::try_lock (c++ function)": [[801, "_CPPv4N6oneapi3tbb13spin_rw_mutex8try_lockEv"]], "oneapi::tbb::spin_rw_mutex::try_lock_shared (c++ function)": [[801, "_CPPv4N6oneapi3tbb13spin_rw_mutex15try_lock_sharedEv"]], "oneapi::tbb::spin_rw_mutex::unlock (c++ function)": [[801, "_CPPv4N6oneapi3tbb13spin_rw_mutex6unlockEv"]], "oneapi::tbb::spin_rw_mutex::unlock_shared (c++ function)": [[801, "_CPPv4N6oneapi3tbb13spin_rw_mutex13unlock_sharedEv"]], "oneapi::tbb::spin_rw_mutex::~spin_rw_mutex (c++ function)": [[801, "_CPPv4N6oneapi3tbb13spin_rw_mutexD0Ev"]], "operator< (c++ function)": [[802, "_CPPv4ltRK1TRK1T"], [803, "_CPPv4ltRK5ValueRK5Value"], [809, "_CPPv4ltRK5IndexRK5Index"]], "swap (c++ function)": [[802, "_CPPv44swapR1TR1T"]], "value::value (c++ function)": [[803, "_CPPv4N5Value5ValueERK5Value"]], "value::~value (c++ function)": [[803, "_CPPv4N5ValueD0Ev"]], "operator+ (c++ function)": [[803, "_CPPv4plRK5Value1D"], [809, "_CPPv4plRK5Index1D"], [809, "_CPPv4plRK5IndexRK5Index"]], "operator- (c++ function)": [[803, "_CPPv4miRK5ValueRK5Value"], [809, "_CPPv4miRK5IndexRK5Index"]], "operator= (c++ function)": [[803, "_CPPv4aSRK5Value"], [809, "_CPPv4aSRK5Index"], [842, "_CPPv4aSRR21task_scheduler_handle"]], "std::begin (c++ function)": [[804, "_CPPv4NSt5beginE1c"]], "std::end (c++ function)": [[804, "_CPPv4NSt3endE1c"]], "firstfilterbody::body::operator() (c++ function)": [[805, "_CPPv4NK15FirstFilterBody4BodyclERN6oneapi3tbb12flow_controlE"]], "lastfilterbody::body::operator() (c++ function)": [[805, "_CPPv4NK14LastFilterBody4BodyclE9InputType"]], "middlefilterbody::body::operator() (c++ function)": [[805, "_CPPv4NK16MiddleFilterBody4BodyclE9InputType"]], "singlefilterbody::body::operator() (c++ function)": [[805, "_CPPv4NK16SingleFilterBody4BodyclERN6oneapi3tbb12flow_controlE"]], "body::body (c++ function)": [[806, "_CPPv4N4Body4BodyERK4Body"], [813, "_CPPv4N4Body4BodyER4Body5split"]], "body::operator() (c++ function)": [[806, "_CPPv4NK4BodyclER5Range"], [807, "_CPPv4NK4BodyclE8ItemType"], [807, "_CPPv4NK4BodyclE8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE"], [813, "_CPPv4N4BodyclERK5Range12pre_scan_tag"], [813, "_CPPv4N4BodyclERK5Range14final_scan_tag"]], "body::~body (c++ function)": [[806, "_CPPv4N4BodyD0Ev"]], "f::operator() (c++ function)": [[808, "_CPPv4NK1FclE5Index"]], "index::index (c++ function)": [[809, "_CPPv4N5Index5IndexERK5Index"], [809, "_CPPv4N5Index5IndexEi"]], "index::~index (c++ function)": [[809, "_CPPv4N5IndexD0Ev"]], "operator* (c++ function)": [[809, "_CPPv4mlRK5IndexRK5Index"]], "operator++ (c++ function)": [[809, "_CPPv4ppv"]], "operator/ (c++ function)": [[809, "_CPPv4dvRK5IndexRK5Index"]], "operator<= (c++ function)": [[809, "_CPPv4leRK5IndexRK5Index"]], "parallelreducebody::body::body (c++ function)": [[810, "_CPPv4N18ParallelReduceBody4Body4BodyER4Body5split"]], "parallelreducebody::body::join (c++ function)": [[810, "_CPPv4N18ParallelReduceBody4Body4joinER4Body"]], "parallelreducebody::body::operator() (c++ function)": [[810, "_CPPv4N18ParallelReduceBody4BodyclERK5Range"]], "parallelreducebody::body::~body (c++ function)": [[810, "_CPPv4N18ParallelReduceBody4BodyD0Ev"]], "func::operator() (c++ function)": [[811, "_CPPv4NK4FuncclERK5RangeRK5Value"], [825, "_CPPv4N4FuncclERK5Input"]], "reduction::operator() (c++ function)": [[812, "_CPPv4NK9ReductionclERK5ValueRK5Value"]], "body::assign (c++ function)": [[813, "_CPPv4N4Body6assignER4Body"]], "body::reverse_join (c++ function)": [[813, "_CPPv4N4Body12reverse_joinER4Body"]], "combine::operator() (c++ function)": [[814, "_CPPv4NK7CombineclERK5ValueRK5Value"]], "scan::operator() (c++ function)": [[815, "_CPPv4NK4ScanclERK5RangeRK5Valueb"]], "r::r (c++ function)": [[816, "_CPPv4N1R1RER1R18proportional_split"], [816, "_CPPv4N1R1RER1R5split"], [816, "_CPPv4N1R1RERK1R"]], "r::empty (c++ function)": [[816, "_CPPv4NK1R5emptyEv"]], "r::is_divisible (c++ function)": [[816, "_CPPv4NK1R12is_divisibleEv"]], "r::~r (c++ function)": [[816, "_CPPv4N1RD0Ev"]], "x::x (c++ function)": [[817, "_CPPv4N1X1XER1X5split"]], "cr::begin (c++ function)": [[818, "_CPPv4N2CR5beginEv"]], "cr::const_reference (c++ type)": [[818, "_CPPv4N2CR15const_referenceE"]], "cr::difference_type (c++ type)": [[818, "_CPPv4N2CR15difference_typeE"]], "cr::end (c++ function)": [[818, "_CPPv4N2CR3endEv"]], "cr::grainsize (c++ function)": [[818, "_CPPv4NK2CR9grainsizeEv"]], "cr::iterator (c++ type)": [[818, "_CPPv4N2CR8iteratorE"]], "cr::reference (c++ type)": [[818, "_CPPv4N2CR9referenceE"]], "cr::size_type (c++ type)": [[818, "_CPPv4N2CR9size_typeE"]], "cr::value_type (c++ type)": [[818, "_CPPv4N2CR10value_typeE"]], "h::h (c++ function)": [[819, "_CPPv4N1H1HERK1H"]], "h::equal (c++ function)": [[819, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType"]], "h::hash (c++ function)": [[819, "_CPPv4NK1H4hashERK7KeyType"]], "h::~h (c++ function)": [[819, "_CPPv4N1HD0Ev"]], "asyncnodebody::body::body (c++ function)": [[820, "_CPPv4N13AsyncNodeBody4Body4BodyERK4Body"]], "asyncnodebody::body::operator() (c++ function)": [[820, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType"]], "asyncnodebody::body::~body (c++ function)": [[820, "_CPPv4N13AsyncNodeBody4BodyD0Ev"]], "continuenodebody::body::body (c++ function)": [[821, "_CPPv4N16ContinueNodeBody4Body4BodyERK4Body"]], "continuenodebody::body::operator() (c++ function)": [[821, "_CPPv4N16ContinueNodeBody4BodyclERK12continue_msg"]], "continuenodebody::body::~body (c++ function)": [[821, "_CPPv4N16ContinueNodeBody4BodyD0Ev"]], "functionnodebody::body::body (c++ function)": [[822, "_CPPv4N16FunctionNodeBody4Body4BodyERK4Body"]], "functionnodebody::body::operator() (c++ function)": [[822, "_CPPv4N16FunctionNodeBody4BodyclERK5Input"]], "functionnodebody::body::~body (c++ function)": [[822, "_CPPv4N16FunctionNodeBody4BodyD0Ev"]], "t::release_wait (c++ function)": [[823, "_CPPv4N1T12release_waitEv"]], "t::reserve_wait (c++ function)": [[823, "_CPPv4N1T12reserve_waitEv"]], "t::try_put (c++ function)": [[823, "_CPPv4N1T7try_putERK6Output"]], "inputnodebody::body::body (c++ function)": [[824, "_CPPv4N13InputNodeBody4Body4BodyERK4Body"]], "inputnodebody::body::operator() (c++ function)": [[824, "_CPPv4N13InputNodeBody4BodyclERN6oneapi3tbb12flow_controlE"]], "inputnodebody::body::~body (c++ function)": [[824, "_CPPv4N13InputNodeBody4BodyD0Ev"]], "func::func (c++ function)": [[825, "_CPPv4N4Func4FuncERK4Func"]], "func::~func (c++ function)": [[825, "_CPPv4N4FuncD0Ev"]], "multifunctionnodebody::body::body (c++ function)": [[826, "_CPPv4N21MultifunctionNodeBody4Body4BodyERK4Body"]], "multifunctionnodebody::body::operator() (c++ function)": [[826, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType"]], "multifunctionnodebody::body::~body (c++ function)": [[826, "_CPPv4N21MultifunctionNodeBody4BodyD0Ev"]], "s::s (c++ function)": [[827, "_CPPv4N1S1SERK1S"]], "s::operator() (c++ function)": [[827, "_CPPv4N1SclERK1T"]], "s::~s (c++ function)": [[827, "_CPPv4N1SD0Ev"]], "mutex_func::m::is_fair_mutex (c++ member)": [[828, "_CPPv4N10mutex_func1M13is_fair_mutexE"]], "mutex_func::m::is_recursive_mutex (c++ member)": [[828, "_CPPv4N10mutex_func1M18is_recursive_mutexE"]], "mutex_func::m::is_rw_mutex (c++ member)": [[828, "_CPPv4N10mutex_func1M11is_rw_mutexE"]], "mutex_func::m::scoped_lock (c++ function)": [[828, "_CPPv4N10mutex_func1M11scoped_lockER1M"], [828, "_CPPv4N10mutex_func1M11scoped_lockEv"]], "mutex_func::m::scoped_lock::acquire (c++ function)": [[828, "_CPPv4N10mutex_func1M11scoped_lock7acquireER1M"]], "mutex_func::m::scoped_lock::release (c++ function)": [[828, "_CPPv4N10mutex_func1M11scoped_lock7releaseEv"]], "mutex_func::m::scoped_lock::try_acquire (c++ function)": [[828, "_CPPv4N10mutex_func1M11scoped_lock11try_acquireER1M"]], "mutex_func::m::~scoped_lock (c++ function)": [[828, "_CPPv4N10mutex_func1MD0Ev"]], "mutex_type::m::scoped_lock (c++ type)": [[828, "_CPPv4N10mutex_type1M11scoped_lockE"]], "rwm::scoped_lock (c++ type)": [[829, "_CPPv4N3RWM11scoped_lockE"]], "rwm::scoped_lock::m::is_fair_mutex (c++ member)": [[829, "_CPPv4N3RWM11scoped_lock1M13is_fair_mutexE"]], "rwm::scoped_lock::m::is_recursive_mutex (c++ member)": [[829, "_CPPv4N3RWM11scoped_lock1M18is_recursive_mutexE"]], "rwm::scoped_lock::m::is_rw_mutex (c++ member)": [[829, "_CPPv4N3RWM11scoped_lock1M11is_rw_mutexE"]], "rwm::scoped_lock::rwm::scoped_lock (c++ function)": [[829, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockER3RWMb"], [829, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockEv"]], "rwm::scoped_lock::rwm::scoped_lock::acquire (c++ function)": [[829, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7acquireER3RWMb"]], "rwm::scoped_lock::rwm::scoped_lock::downgrade_to_reader (c++ function)": [[829, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock19downgrade_to_readerEv"]], "rwm::scoped_lock::rwm::scoped_lock::release (c++ function)": [[829, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7releaseEv"]], "rwm::scoped_lock::rwm::scoped_lock::try_acquire (c++ function)": [[829, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock11try_acquireER3RWMb"]], "rwm::scoped_lock::rwm::scoped_lock::upgrade_to_writer (c++ function)": [[829, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock17upgrade_to_writerEv"]], "rwm::scoped_lock::rwm::~scoped_lock (c++ function)": [[829, "_CPPv4N3RWM11scoped_lock3RWMD0Ev"]], "suspendfunc::func::func (c++ function)": [[830, "_CPPv4N11SuspendFunc4Func4FuncERK4Func"]], "suspendfunc::func::operator() (c++ function)": [[830, "_CPPv4N11SuspendFunc4FuncclEN6oneapi3tbb4task13suspend_pointE"]], "active_value (c++ function)": [[839, "_CPPv412active_value9parameter"]], "global_control (c++ function)": [[839, "_CPPv414global_control9parameter6size_t"]], "parameter::max_allowed_parallelism (c++ enum)": [[839, "_CPPv4N9parameter23max_allowed_parallelismE"]], "parameter::terminate_on_exception (c++ enum)": [[839, "_CPPv4N9parameter22terminate_on_exceptionE"]], "parameter::thread_stack_size (c++ enum)": [[839, "_CPPv4N9parameter17thread_stack_sizeE"]], "~global_control (c++ function)": [[839, "_CPPv4D0v"]], "cancel_group_execution (c++ function)": [[841, "_CPPv422cancel_group_executionv"]], "capture_fp_settings (c++ function)": [[841, "_CPPv419capture_fp_settingsv"]], "is_group_execution_cancelled (c++ function)": [[841, "_CPPv4NK28is_group_execution_cancelledEv"]], "kind_t::bound (c++ enum)": [[841, "_CPPv4N6kind_t5boundE"]], "kind_t::isolated (c++ enum)": [[841, "_CPPv4N6kind_t8isolatedE"]], "task_group_context (c++ function)": [[841, "_CPPv418task_group_context6kind_t9uintptr_t"]], "traits (c++ function)": [[841, "_CPPv4NK6traitsEv"]], "traits_type::fp_settings (c++ enum)": [[841, "_CPPv4N11traits_type11fp_settingsE"]], "~task_group_context (c++ function)": [[841, "_CPPv4D0v"]], "finalize (c++ function)": [[842, "_CPPv48finalizeR21task_scheduler_handle"], [842, "_CPPv48finalizeR21task_scheduler_handleRKNSt9nothrow_tE"]], "release (c++ function)": [[842, "_CPPv47releasev"]], "task_scheduler_handle (c++ function)": [[842, "_CPPv421task_scheduler_handleN6oneapi3tbb6attachE"], [842, "_CPPv421task_scheduler_handleRR21task_scheduler_handle"], [842, "_CPPv421task_scheduler_handlev"]], "~task_scheduler_handle (c++ function)": [[842, "_CPPv4D0v"]], "automatic (c++ member)": [[843, "_CPPv49automatic"]], "constraints (c++ struct)": [[843, "_CPPv411constraints"]], "constraints::constraints (c++ function)": [[843, "_CPPv4N11constraints11constraintsE12numa_node_idi"]], "constraints::core_type (c++ member)": [[843, "_CPPv4N11constraints9core_typeE"]], "constraints::max_concurrency (c++ member)": [[843, "_CPPv4N11constraints15max_concurrencyE"]], "constraints::max_threads_per_core (c++ member)": [[843, "_CPPv4N11constraints20max_threads_per_coreE"]], "constraints::numa_id (c++ member)": [[843, "_CPPv4N11constraints7numa_idE"]], "constraints::set_core_type (c++ function)": [[843, "_CPPv4N11constraints13set_core_typeE12core_type_id"]], "constraints::set_max_concurrency (c++ function)": [[843, "_CPPv4N11constraints19set_max_concurrencyEi"]], "constraints::set_max_threads_per_core (c++ function)": [[843, "_CPPv4N11constraints24set_max_threads_per_coreEi"]], "constraints::set_numa_id (c++ function)": [[843, "_CPPv4N11constraints11set_numa_idE12numa_node_id"]], "enqueue (c++ function)": [[843, "_CPPv47enqueueRR11task_handle"], [843, "_CPPv4I_1FE7enqueuevRR1F"]], "execute (c++ function)": [[843, "_CPPv4I_1FE7executeDTcl1fEERR1F"]], "is_active (c++ function)": [[843, "_CPPv4NK9is_activeEv"]], "max_concurrency (c++ function)": [[843, "_CPPv4NK15max_concurrencyEv"]], "not_initialized (c++ member)": [[843, "_CPPv415not_initialized"]], "priority::high (c++ enum)": [[843, "_CPPv4N8priority4highE"]], "priority::low (c++ enum)": [[843, "_CPPv4N8priority3lowE"]], "priority::normal (c++ enum)": [[843, "_CPPv4N8priority6normalE"]], "terminate (c++ function)": [[843, "_CPPv49terminatev"]], "~task_arena (c++ function)": [[843, "_CPPv4D0v"]], "is_observing (c++ function)": [[844, "_CPPv4NK12is_observingEv"]], "observe (c++ function)": [[844, "_CPPv47observeb"]], "on_scheduler_entry (c++ function)": [[844, "_CPPv418on_scheduler_entryb"]], "on_scheduler_exit (c++ function)": [[844, "_CPPv417on_scheduler_exitb"]], "task_scheduler_observer (c++ function)": [[844, "_CPPv423task_scheduler_observerR10task_arena"], [844, "_CPPv423task_scheduler_observerv"]], "~task_scheduler_observer (c++ function)": [[844, "_CPPv4D0v"]], "tbb::this_task_arena::current_thread_index (c++ function)": [[845, "_CPPv4N3tbb15this_task_arena20current_thread_indexEv"]], "tbb::this_task_arena::enqueue (c++ function)": [[845, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F"], [845, "_CPPv4N3tbb15this_task_arena7enqueueERR11task_handle"]], "tbb::this_task_arena::isolate (c++ function)": [[845, "_CPPv4I_1FEN3tbb15this_task_arena7isolateEDTcl1fEERR1F"]], "tbb::this_task_arena::max_concurrency (c++ function)": [[845, "_CPPv4N3tbb15this_task_arena15max_concurrencyEv"]], "oneapi::tbb::task_group::cancel (c++ function)": [[846, "_CPPv4N6oneapi3tbb10task_group6cancelEv"]], "oneapi::tbb::task_group::defer (c++ function)": [[846, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F"]], "oneapi::tbb::task_group::is_current_task_group_canceling (c++ function)": [[846, "_CPPv4N6oneapi3tbb10task_group31is_current_task_group_cancelingEv"]], "oneapi::tbb::task_group::run (c++ function)": [[846, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func"], [846, "_CPPv4N6oneapi3tbb10task_group3runERR11task_handle"]], "oneapi::tbb::task_group::run_and_wait (c++ function)": [[846, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func"]], "oneapi::tbb::task_group::task_group (c++ function)": [[846, "_CPPv4N6oneapi3tbb10task_group10task_groupER18task_group_context"], [846, "_CPPv4N6oneapi3tbb10task_group10task_groupEv"]], "oneapi::tbb::task_group::wait (c++ function)": [[846, "_CPPv4N6oneapi3tbb10task_group4waitEv"]], "oneapi::tbb::task_group::~task_group (c++ function)": [[846, "_CPPv4N6oneapi3tbb10task_groupD0Ev"]], "canceled (c macro)": [[847, "c.canceled"]], "complete (c macro)": [[847, "c.complete"]], "not_complete (c macro)": [[847, "c.not_complete"]], "tbb::task_handle::operator bool (c++ function)": [[848, "_CPPv4NK3tbb11task_handlecvbEv"]], "tbb::task_handle::operator= (c++ function)": [[848, "_CPPv4N3tbb11task_handleaSERR11task_handle"]], "tbb::task_handle::task_handle (c++ function)": [[848, "_CPPv4N3tbb11task_handle11task_handleERR11task_handle"], [848, "_CPPv4N3tbb11task_handle11task_handleEv"]], "tbb::task_handle::~task_handle (c++ function)": [[848, "_CPPv4N3tbb11task_handleD0Ev"]], "oneapi::tbb::combinable::clear (c++ function)": [[850, "_CPPv4N6oneapi3tbb10combinable5clearEv"]], "oneapi::tbb::combinable::combinable (c++ function)": [[850, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit"], [850, "_CPPv4N6oneapi3tbb10combinable10combinableERK10combinable"], [850, "_CPPv4N6oneapi3tbb10combinable10combinableERR10combinable"], [850, "_CPPv4N6oneapi3tbb10combinable10combinableEv"]], "oneapi::tbb::combinable::combine (c++ function)": [[850, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc"]], "oneapi::tbb::combinable::combine_each (c++ function)": [[850, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc"]], "oneapi::tbb::combinable::local (c++ function)": [[850, "_CPPv4N6oneapi3tbb10combinable5localERb"], [850, "_CPPv4N6oneapi3tbb10combinable5localEv"]], "oneapi::tbb::combinable::operator= (c++ function)": [[850, "_CPPv4N6oneapi3tbb10combinableaSERK10combinable"], [850, "_CPPv4N6oneapi3tbb10combinableaSERR10combinable"]], "oneapi::tbb::combinable::~combinable (c++ function)": [[850, "_CPPv4N6oneapi3tbb10combinableD0Ev"]], "ets_key_usage_type::ets_key_per_instance (c++ enum)": [[851, "_CPPv4N18ets_key_usage_type20ets_key_per_instanceE"]], "ets_key_usage_type::ets_no_key (c++ enum)": [[851, "_CPPv4N18ets_key_usage_type10ets_no_keyE"]], "ets_key_usage_type::ets_suspend_aware (c++ enum)": [[851, "_CPPv4N18ets_key_usage_type17ets_suspend_awareE"]], "oneapi::tbb::enumerable_thread_specific::combine (c++ function)": [[852, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc"]], "oneapi::tbb::enumerable_thread_specific::combine_each (c++ function)": [[852, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc"]], "oneapi::tbb::enumerable_thread_specific::begin (c++ function)": [[854, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5beginEv"], [854, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5beginEv"]], "oneapi::tbb::enumerable_thread_specific::end (c++ function)": [[854, "_CPPv4N6oneapi3tbb26enumerable_thread_specific3endEv"], [854, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific3endEv"]], "oneapi::tbb::enumerable_thread_specific::range (c++ function)": [[854, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5rangeE6size_t"], [854, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5rangeE6size_t"]], "oneapi::tbb::enumerable_thread_specific::local (c++ function)": [[855, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localERb"], [855, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localEv"]], "oneapi::tbb::enumerable_thread_specific::empty (c++ function)": [[856, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5emptyEv"]], "oneapi::tbb::enumerable_thread_specific::size (c++ function)": [[856, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific4sizeEv"]], "oneapi::tbb::flatten2d::begin (c++ function)": [[858, "_CPPv4N6oneapi3tbb9flatten2d5beginEv"], [858, "_CPPv4NK6oneapi3tbb9flatten2d5beginEv"]], "oneapi::tbb::flatten2d::end (c++ function)": [[858, "_CPPv4N6oneapi3tbb9flatten2d3endEv"], [858, "_CPPv4NK6oneapi3tbb9flatten2d3endEv"]], "oneapi::tbb::flatten2d::flatten2d (c++ function)": [[858, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE"]], "oneapi::tbb::flatten2d::flattened2d (c++ function)": [[858, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container"], [858, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9Container"], [858, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE"]], "oneapi::tbb::flatten2d::size (c++ function)": [[858, "_CPPv4NK6oneapi3tbb9flatten2d4sizeEv"]]}})